<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Xaos</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Connection</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Login</name>
					<script>disableTimer("Party Grab")
disableTimer("Update Variables")
disableTimer("Update Score")
disableTimer("Quest Update")
disableTimer("Party Timer")
disableTimer("User Timer")
disableTimer("Update Combat")
disableTimer("XPRate")
retrieveprofiles()

if xaos.config.autologin then
  expandAlias(xaos.config.autologinaction)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]</string>
						<string>Your command:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>OnLogin</name>
					<script>combat=false
foundTarget=false
initialload=true

updatestats()
expandAlias("seteq")

enableTimer("Party Grab")
enableTimer("Update Variables")
enableTimer("Update Score")
enableTimer("Quest Update")
enableTimer("Party Timer")
enableTimer("Update Combat")
enableTimer("XPRate")

feedManager("[ALERT] Logged in to character")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Reconnected character.</string>
						<string>Welcome to Xaos MUD</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Scripting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>auto_hunt</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return auto_hunt</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scan Mode</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return xaos.config.scripting.scan_mode</string>
							<string>return auto_hunt</string>
							<string>return not statusFollowing</string>
							<string>return xaos.scripting.area.name ~= nil</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
							<integer>4</integer>
							<integer>4</integer>
							<integer>4</integer>
						</regexCodePropertyList>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>isscanning</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isscanning</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>grab scan</name>
								<script>
local mob = string.trim(matches[2])
local howfar = matches[3]
local dir = matches[4]


local current_area = xaos.scripting.area

if table.contains(current_area.killarray,mob) then
  if dir ~= nill and dir ~= "" then
    if howfar == "off in the distance" then
      scancount[dir][3] = scancount[dir][3] +1
    elseif howfar == "not far" then
      scancount[dir][2] = scancount[dir][2] +1
    elseif howfar == "nearby to the" then
      scancount[dir][1] = scancount[dir][1] +1
    end
  else 
    dir="none"
    scancount[dir][1] = scancount[dir][1] +1
        
  end
  
  scantargetdir=dir
  
  if not targetFound then
      
    targetFound=true
    if current_area.keywordoverride then
      targetFoundID = current_area.keyword
    else
      targetFoundID = mob
    end
  end
end


</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(?:[aA] |[tT]he |[aA]n )(.*), (nearby to the|off in the distance|not far) (\w+)\.</string>
									<string>(?:[aA] |[tT]he |[aA]n )(.*), right here.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Is Not Combat</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return not combat</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>End Scan Reset</name>
									<script>
if targetFound and not targetAction then
  targetAction = true
  --echo(scantargetdir)
  local mobcnt = scancount[scantargetdir][1]
  debugecho("cnt " .. mobcnt)
  if tonumber(mobcnt) &lt;= tonumber(xaos.config.scripting.maxmobs) then
  
    tempTimer(.001,function () 
      send("bclear")
      disableTimer("scan listener")
      echo("\n")
      if scantargetdir ~= "none" then
        send(scantargetdir)
      end
      send("kill " .. targetFoundID)
    end)
  else
  
    tempTimer(.001,function () 
      local dircast = ""
      if xaos.class.mage or xaos.class.cleric or xaos.class.barbarian or xaos.class.primary=="geomancer" or xaos.class.primary=="rake" then
        dircast = "c light"
      end      
      send("bclear")
      disableTimer("scan listener")
      echo("\n")
      send(dircast .. " " ..  scantargetdir .. " " .. targetFoundID)
    end)
    tempTimer(.5, function () send("kill " .. targetFoundID) end)
  end

end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>return isXaosPrompt()</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>4</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fail Scan Reset</name>
								<script>isscanning = false

if not targetFound and not combat then
  send("hunt " .. huntTarget)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return isXaosPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ran Away before we got here.</name>
							<script>local name = string.trim(matches[2])

debugecho("ran away")
hunting=false
if targetFound and name == targetFoundID then
  targetAction=false
  targetFound=false
  send("scan")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>There is no one named \'(.*)\' here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>start scan</name>
							<script>if not combat then

  isscanning = true
  scancount = {
    none = {0},
    north = {0,0,0},
    south = {0,0,0},
    east  = {0,0,0},
    west  = {0,0,0},
    up    = {0,0,0},
    down  = {0,0,0},
  }
  scantargetdir=""
  targetFoundID=""
  targetFound = false
  targetAction = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Looking around you see:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Backflips</name>
							<script>combat=false
targetAction=false
targetFound=false

tempTimer(1,function() send("scan") end)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> backflips from combat!</string>
								<string> has fled!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>No one here.</name>
							<script>tempTimer(4,
  function() 
    send("scan")
  end
 )</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>No-one around by that name.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Arrived</name>
							<script>local mob = string.trim(matches[2])
if not combat then
  if status.resting then
    send("wake")
  end
  if table.contains(xaos.scripting.area.killarray,mob) then
    if xaos.scripting.area.keywordoverride then
      send("kill " .. xaos.scripting.area.keyword)
    else
      send("kill " .. mob)
    end
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(?:[aA] |[tT]he |[aA]n )(.*) (arrives|swims|crawls|sneaks|flies) from</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Leader chase</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return statusLeader</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>is here</name>
							<script>
if string.lower(string.trim(matches[2])) == string.lower(followTarget) then
  debugwrite("--follow found")
  hunting=false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.*) is here!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Too fast</name>
							<script>if string.lower(string.trim(matches[2])) == string.lower(followTarget) then
  debugwrite("--lost your leader")
  hunting=true
  send("bclear")
  send(lastleaderdir)
  send("hunt " .. followTarget)
  lastleaderdir=""
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You try to follow, but (.*) is moving too quickly.</string>
								<string>You try to follow (.*) but they are moving too quickly</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Grab Leader Direction</name>
							<script>if string.lower(string.trim(matches[2])) == string.lower(followTarget) then
  lastleaderdir = matches[3]
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.*) leaves (.*)\.</string>
								<string>(.*) flies (.*)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Leader Check</name>
							<script>--If you are not currenlty the leader of the group, and not leading the party.
--This is to handle if the party leader changes.
if string.trim(curpartystatus.leader) ~= "Your" and string.trim(curpartystatus.leader) ~= "Someone" and not overrideleader then
  if string.trim(followTarget) ~= string.trim(curpartystatus.leader) then
    expandAlias("followleader")
  end
elseif string.trim(curpartystatus.leader) == "Your" then
  if xaos.config.afkmode then
    --The leader has been lost you are now the leader
    
  end
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*)\'s party:</string>
								<string>^(Your) Party:</string>
								<string>^(.*) party:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Leader Handling</name>
							<script>
if string.trim(curpartystatus.leader) ~= "Your" and killTarget ~= "" and auto_hunt  and autoleaderswitch then
  if string.trim(followTarget) == "" then
    --You are not the leader, and are not following the leader.
    --expandAlias("followleader")
  end
end
if xaos.party.leader == "Your" and killTarget == "" and auto_hunt and autoleaderswitch then
  --Its your party now!
  expandAlias("startscripting")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*)\'s party:</string>
								<string>^(Your) Party:</string>
								<string>^(.*) party:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Follow the scent</name>
						<script>direction = matches[3]
target = matches[2]
local huntWait = xaos.config.scripting.huntwait

if statusLeader then
  statusHunting=true 
  if string.lower(string.trim(target)) == string.lower(followTarget) then
    huntWait = 0
  end
end

if statusFollowing then
  send("bclear")
end
if huntWait == nil then
  huntWait = 0
end
if auto_hunt then
  if not combat then
    local killlist = ""
    
    if killTarget ~= "" then
      local killTargetTable = string.split(killTarget,",")
          
      for key,value in pairs(killTargetTable) do
        killlist = killlist .. "kill " .. value .. ";"
      end 
    end
    if xaos.config.scripting.scan_mode then
      if not hunting then
        tempTimer((huntWait), function ()
          if not combat then 
              debugecho("hunting " .. tostring(hunting))
              if not targetFound then
                send(direction..";" .. killlist .. "scan;")
              end
            
          end
        end)
      end
    else
      tempTimer((huntWait + 0.1), function ()
        if not combat then 
          
            send(direction..";" .. killlist .. "hunt " ..huntTarget)

          
        end
      end)
    end
  end
end
hunting = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.*) is (\w+) from here( and very close)?</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defeat Comprehensive</name>
						<script>combat = false
hunting = false
initialcommandrun=0
targetFound = false
targetAction = false

local endcombatWait = xaos.config.scripting.endcombatwait

if auto_hunt then
  send("bclear")
end
if xaos.config.autoempower then
  continueempower()
end

if auto_hunt and statusLeader and statusFollowing then
  expandAlias("auto_hunt")
end

if auto_hunt and not statusFollowing then
  local killTargetTable = string.split(killTarget,",")
  for key,value in pairs(killTargetTable) do
    send("kill "..value)
  end 
end

--If auto_butcher or auto_skin
if auto_butcher then
	send("butcher corpse")
end
if auto_skin then
	send("skin corpse")
end

if auto_hunt then
	--send("get isarti")
end

if xaos.config.scripting.scan_mode and not statusFollowing then
  if xaos.config.scripting.minmana &gt; tonumber(xPrompt.mana) or xaos.config.scripting.minhp &gt; tonumber(xPrompt.hp) then
    tempTimer(2,
      function ()
        if not combat then
          send("rest")
          status.resting=true
        end
      end
    ) 
  else
  
    tempTimer((endcombatWait+.1), 
      function ()
        if not combat and (getEpoch()-lastkilltime) &gt;= endcombatWait then 
          send("scan")
        else
          debugecho(getEpoch()-lastkilltime)
        end
      end
    )
  
  end
  
end

-- Counter
killCount = killCount + 1
lastkilltime = getEpoch()
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Kill when in same room</name>
						<script>
if auto_hunt then
	if not statusFollowing then
    local killTargetTable = string.split(killTarget,",")
    for key,value in pairs(killTargetTable) do
      send("kill "..value)
    end 
    if string.trim(matches[2]) == "Someone" then
      tempTimer(3, 
        function ()
            if not combat then 
              send("scan")
            else
              debugecho(getEpoch()-lastkilltime)
            end
          end)
    end

	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.*) is here!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Door opening</name>
						<script>if auto_hunt then
	send("unlock south")
	send("unlock north")
	send("unlock east")
	send("unlock west")
	send("unlock up")
	send("unlock down")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>It's locked.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Item notification</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile>C:/Users/Steam Machine/button-35.mp3</mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(\w*Artifact\w*)</string>
							<string>return not hasFocus()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bump into something</name>
						<script>send("bclear")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Alas, you cannot go that way.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Initial Combat Action</name>
						<script>if initialcommandrun &lt; 1 then
  if xaos.config.scripting.initialcommand ~= "" then
  expandAlias(xaos.config.scripting.initialcommand)
  
  end
  if  xaos.config.buffmode then
    if (xaos.buffs.statusBerserk==false and xaos.class.warrior==true and (xaos.config.berserkovercenter or mastermind)) then
      send("berserk")
    end
  end
  
  initialcommandrun=initialcommandrun+1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.* is in awful condition.*\.$|^.* has quite a few wounds.*\.$|^.* looks pretty hurt.*\.$|^.* has some small wounds and bruises .*\.$|^.* is in excellent.*\.$|^.* has some big nasty wounds and scratches,.*\.$|^.* has a few scratches .*\.$)</string>
							<string>^(?![ ]+[&lt;]|^.* is in awful condition.*\.$|^.* has quite a few wounds.*\.$|^.* looks pretty hurt.*\.$|^.* has some small wounds and bruises .*\.$|^.* is in excellent.*\.$|^.* has some big nasty wounds and scratches,.*\.$|^.* has a few scratches .*\.$)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Find Mode</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return xaos.config.scripting.findmode</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Found follow target</name>
							<script>if xaos.party.leader == "Your" and xaos.config.scripting.findmode then
  if string.trim(matches[2]) == string.trim(followTarget) then
    debugecho("found " .. followTarget)
    expandAlias("startscripting")
  end
end

--if xaos.config.scripting.findmode == nil then xaos.config.scripting.findmode = false end
--if xaos.config.scripting.scan_mode == nil then xaos.config.scan_mode = false end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.*) is here!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>QoL</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Web killer</name>
							<script>send("bclear;kill web")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>holds you in place!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Resting</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>End Rest</name>
							<script>
if status.resting and 
  (tonumber(xPrompt.mana) &gt;= tonumber(xaos.config.scripting.minmana) or tonumber(xPrompt.hp) &gt;= tonumber(xaos.config.scripting.minhp) 
  ) then
  
  send("wake")
  send("stand")
  send("scan")
  status.resting=false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isXaosPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Start Rest</name>
							<script>status.resting=true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You rest.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>General combat</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>disarmament</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Disarm</name>
							<script>statusDisarm = true

send("wield "..wielded)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>DISARMS you</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wield awareness</name>
							<script>statusDisarm = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You hold (.*) in your right hand.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Looting</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Look on no corpse</name>
						<script>send("get isarti;get fragment;get soul")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^.* crumbles to dust.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Combat Helpers</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bashed</name>
						<script>send("stand")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>sent you sprawling with a powerful bash!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>tripped</name>
						<script>send("stand")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>trips you and you go</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Knocked</name>
						<script>send("stand")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>knocking you to the ground!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hit the ground</name>
						<script>send("stand")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You hit the ground with a </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Script Helpers</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bugout stop</name>
						<script>cecho("data","[ALERT " .. getTime(true,"HH.mm") .. "] Bugout Called\n")

if auto_hunt and followTarget ~= ""  and xaos.scripting.area.name ~= nil and xaos.scripting.area.name ~= "" then
  
  send("c 'resan'")
  if bugoutcount == nil then  
    bugoutcount = 0
  end
  if bugoutcount &lt; 10 then
    bugoutcount = bugoutcount + 1
    tempTimer(100,
      function() 
        send("c 'resan'")
        send("tele " .. xaos.scripting.area.name)
        send("startscripting")
      end
    )
  else
    send("quit")
  end
  
end

auto_hunt=false
  </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Bugout inputted.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Guarded</name>
						<script>combat=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>jumps to defend you!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Flee</name>
						<script>combat=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have fled from combat.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Auto Loot</name>
						<script>
if not statusOverloaded then

  --if autoLootlimit == nil then
  --  autoLootlimit = ""
  --end
  --local lootlimit = string.split(autoLootlimit,",")
  
  --if table.size(lootlimit) &lt;= 1 or table.contains(lootlimit,string.trim(matches[2])) then
    if xaos.config.scripting.autoLoot ~= "" then
      local autoLootTable = string.split(xaos.config.scripting.autoLoot,",")
      for key,value in pairs(autoLootTable) do
        send("get " .. value .. " cor")
      end 
    end
    if xaos.config.scripting.autoPickup ~= "" then
      local autoPickupTable = string.split(xaos.config.scripting.autoPickup,",")
      for key,value in pairs(autoPickupTable) do
        send("get " .. value)
      end 
    end
    

  --end
end

if xaos.config.scripting.autoDeathAction ~= "" then
  local autoautoDeathActionTable = string.split(xaos.config.scripting.autoDeathAction,",")
  for key,value in pairs(autoautoDeathActionTable) do
    expandAlias(value)
  end 
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:[aA] |[tT]he |[aA]n )?(.*) has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Picked up and thrown</name>
						<script>combat=false
targetFound=false
if xaos.config.scanmode and auto_hunt then
  send("scan")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>picks you up...</string>
							<string>1</string>
							<string>You hit the ground!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>5</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sap Over</name>
						<script>send("wake")
if statusLeader and statusFollowing and auto_hunt then
  send("hunt " .. followTarget)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The throbbing in your head discontinues.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Detect Mode</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return detectmode</string>
						<string>return xaos.scripting.area.name == nil</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>start scan</name>
						<script>
isdetectscanning = true
targetFound = false
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Looking around you see:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>isscanning</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isdetectscanning</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>grab scan</name>
							<script>--(?:[aA] |[tT]he |[aA]n )(.*), nearby to the (\w+)\.
--(?:[aA] |[tT]he |[aA]n )(.*), (nearby to the|off in the distance|not far) (\w+)\.

local mob = string.trim(matches[2])
local howfar = matches[3]
local dir = matches[4]


for areaindex,area in pairs(xaos.areas) do
  if table.contains(area.killarray,mob) then
    if not targetFound then
      targetFound=true
      echo("\n")
      expandAlias("setarea " .. area.name)
      expandAlias("startscripting")
    end
  end
end


</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(?:[aA] |[tT]he |[aA]n )(.*), (nearby to the|off in the distance|not far) (\w+)\.</string>
								<string>(?:[aA] |[tT]he |[aA]n )(.*), right here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prompt reset</name>
							<script>isdetectscanning = false
detectmode=false

if not targetFound then

  echo("No Area Found, try being around mobs.")

end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isXaosPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Script States</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>auto action tracking</name>
						<script>
autoAction = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You will now automatically execute (.*).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Combat true</name>
						<script>combat = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string> is in awful condition</string>
							<string>has some big nasty wounds and scratches</string>
							<string>has quite a few wounds </string>
							<string>is in excellent condition </string>
							<string>looks pretty hurt</string>
							<string>has some small wounds and bruises </string>
							<string>No way!  You are still fighting!</string>
							<string>You are still in combat!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Combat false + Script bit</name>
						<script>combat = false
hunting = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>has been defeated!!</string>
							<string>You blink out of existence!</string>
							<string>You hit the ground!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Status + Variable States</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Pulling information</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt eater</name>
						<script>  current_health = tonumber(multimatches[1][2])
  hpbar:setValue(current_health, 100, nil)
  hpbar.front:echo(multimatches[1][2] .. "%", nil, "c")
  
  current_mana = tonumber(multimatches[1][3])
  manabar:setValue(current_mana, 100, nil)
  manabar.front:echo(multimatches[1][3] .. "%", nil, "c")
  
  current_mvm = tonumber(multimatches[1][4])
  mvmbar:setValue(current_mvm, 100, nil)
  mvmbar.front:echo(multimatches[1][4] .. "%", nil, "c")
  
  current_xp = tonumber(multimatches[1][6])
  xaos.fightingstyle = multimatches[1][5]
  deleteLine()

  
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>HEALTH\s+(100|\d{1,2})% MANA\s+(100|\d{1,2})% MVM\s+(\d+)% STIL (\w+\s*\w*\s*\w*) XP\s+(\d+)% Directions\s+(\w+)\s+Hungry\s+(\w+)</string>
							<string>return isXaosPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Data Collection</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Death</name>
						<script>killedID = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Death and XP</name>
						<script>--You have gained 16205 experience.

last_xp = last_xp or 0

killedID = multimatches[1][2]
xpgained = tonumber(multimatches[2][2])/1000

xpDiff = (current_xp - last_xp)

if xpDiff&lt;0 then
	xpDiff = xpDiff+100
end

xpCollection1 = (xpCollection1 + (xpgained))



last_xp = current_xp
last_killedID = killedID
last_xpDiff = xpDiff

if killedID and xaos.config.show_killed then
cecho("data","&lt;medium_turquoise&gt;[Kill " .. getTime(true,"HH.mm") .. "] "..killedID..": ".. string.format("%4.2f",xpgained).."%\n")
end

  local curasc = calcAscendPercent(xaos.Level,xaos.LevelPercent)
  local ascstring = string.format("%2.2f",curasc) .. "%"
  
  
  xp_overflow = xp_overflow or 0
  if current_xp &gt; 99 then
    xp_overflow = round(current_xp / 100)
    current_xp = current_xp % 100
    -- xuicom("Bucket has value "..bucket.." xp overflow is "..xp_overflow)
    xpbar.front:echo(current_xp .. "% with " .. xp_overflow .. " dings in reserve (" .. current_xp + ((xp_overflow-1)*100) .. ")", nil, "c")
    ascstring = ascstring .. " - " .. xp_overflow .. " stored levels"
  else
    --  
    xpbar.back:echo(current_xp .. "%", nil, "c")
  end
  xpbar:setValue(current_xp, 100, nil)
  --Build a new variable, XP delta, for tracking HP Loss
  
  ascbar:setValue(curasc, 100, nil)
  --ascbar.front:echo(curasc .. "%", nil, "c")
  
 
  
  ascbar.back:echo(ascstring, nil, "c")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) has been defeated!!</string>
							<string>You have gained ([0-9]+) experience</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>data collection</name>
						<script>debugecho("death")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>data collection</name>
						<script>--You have gained 16205 experience.

last_xp = last_xp or 0

killedID = matches[2]


xpDiff = (current_xp - last_xp)

if xpDiff&lt;0 then
	xpDiff = xpDiff+100
end

xpCollection1 = (xpCollection1 + xpDiff)

if killedID and xaos.config.show_killed then
cecho("data","&lt;medium_turquoise&gt;[Kill " .. getTime(true,"HH.mm") .. "] "..last_killedID..": "..xpDiff.."%\n")
end

last_xp = current_xp
last_killedID = killedID
last_xpDiff = xpDiff</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enemy Condition</name>
						<script>
combat=true
targetFound=false
status.resting=false

lastcombattime = getEpoch()

if xaos.config.scripting.scan_mode and auto_hunt then
  disableTimer("scan listener")
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.* is in awful condition.*\.$|^.* has quite a few wounds.*\.$|^.* looks pretty hurt.*\.$|^.* has some small wounds and bruises .*\.$|^.* is in excellent.*\.$|^.* has some big nasty wounds and scratches,.*\.$|^.* has a few scratches .*\.$)</string>
							<string>^(?![ ]+[&lt;]|^.* is in awful condition.*\.$|^.* has quite a few wounds.*\.$|^.* looks pretty hurt.*\.$|^.* has some small wounds and bruises .*\.$|^.* is in excellent.*\.$|^.* has some big nasty wounds and scratches,.*\.$|^.* has a few scratches .*\.$)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>data collection</name>
						<script>if killcapturegrab then

  local whokilled = string.trim(multimatches[1][2])
  if not table.contains(killcapture,whokilled) then
    table.insert(killcapture,string.trim(whokilled))
  end
end
--killcapture = {}
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:[aA] |[tT]he |[aA]n )?(.*) has been defeated!!</string>
							<string>You have gained ([0-9]+) experience</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Debuffs</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Silenced</name>
						<script>status.silence = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have been cursed to silence.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Not silenced</name>
						<script>status.silence = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your voice returns to you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>pledges</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Renovi Used</name>
						<script>renoviAvailable = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are restored by Order!</string>
							<string>You can not invoke Order yet.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Renovi Available</name>
						<script>renoviAvailable = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are able to invoke the powers of the universe again.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Communication</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Clean Capture</name>
					<script>
captureOOC("&lt;cadet_blue&gt;","OOC","&lt;gray&gt;",matches[2], "&lt;cadet_blue&gt;", matches[3])
if gagging then
	deleteLine()
end

--createChatConsole()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w\s]+) oocs '(.+)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>They tell you</name>
					<script>if gagging then
	deleteLine()
end

captureOOC("&lt;forest_green&gt;","TEL","&lt;gray&gt;",matches[2], "&lt;white&gt;", matches[3])

if xaos.config.beeptell then
  playSoundFile([[C:\Windows\media\Windows Pop-up Blocked.wav]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w\s]+) tells you '(.+)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You tell the group</name>
					<script>

captureOOC("&lt;dark_green&gt;","GTL","&lt;gray&gt;","You", "&lt;green&gt;", matches[2])

if gagging then
	deleteLine()
end

-- Cooldown for your beep notification
killTimer("tellTimer")
tellTimer = tempTimer(600, [[ tellCoolDown = false ]])

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You tell the group '(.+)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Beep when not focused</name>
					<script>
-- Initialized in scripts
if not tellCoolDown then
send("reply ^W[ XUI ]^G I'm not currently looking at my screen. Give me a moment.")
tellCoolDown = true
end

-- Cooldown for your beep notification
killTimer("tellTimer")
tellTimer = tempTimer(600, [[ tellCoolDown = false ]])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile>C:/Users/Steam Machine/button-35.mp3</mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w\s]+) tells you '(.+)'</string>
						<string>return not hasFocus()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You tell them</name>
					<script>captureOOC("&lt;forest_green&gt;","TEL","&lt;gray&gt;","You&gt;"..matches[2], "&lt;white&gt;", matches[3])

if gagging then
	deleteLine()
end

-- Tell beep cooldown
killTimer("tellTimer")
tellTimer = tempTimer(600, [[ tellCoolDown = false ]])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You tell (\w+) '(.*)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tells the group</name>
					<script>

captureOOC("&lt;dark_green&gt;","GTL","&lt;gray&gt;",matches[2], "&lt;green&gt;", matches[3])


if gagging then
	deleteLine()
end

if xaos.config.beeptell then
  playSoundFile([[C:\Windows\media\Windows Pop-up Blocked.wav]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile>C:/Windows/media/Windows Pop-up Blocked.wav</mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*) tells the group '(.*)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>IC Capture</name>
					<script>
captureOOC("&lt;purple&gt;","IC ","&lt;gray&gt;",matches[2], "&lt;purple&gt;", matches[3])
if gagging then
	deleteLine()
end

--createChatConsole()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w\s]+) ICs '(.+)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Say Capture</name>
					<script>
captureOOC("&lt;yellow&gt;","SAY","&lt;gray&gt;",matches[2], "&lt;yellow&gt;", matches[3])
if gagging then
	--deleteLine()
end

--createChatConsole()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w\s]+) says '(.+)'$</string>
						<string>^([\w\s]+) says to you '(.+)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>QOL</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Should save prompt</name>
					<script>

savedPrompt = matches[2]

xuicom("Your prompt has been saved.")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Current prompt (.*+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Coin Handler</name>
					<script>-- IIS
-- General QOL
if autodropSilver or statusOverloaded then
	send("drop "..matches[3].." silver")
end


recentGold = recentGold + matches[2] </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You get (\d+) gold and (\d+) silver coins from</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spams</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Parry</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You (.*)parry </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Back Away</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You back away from</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dodge</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You dodge</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Advance</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You advance towards a </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Misses you</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>pathetic (.*) misses you</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Reflects off you</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>reflects off you</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Weapon Flags</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shocked</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>is shocked by</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Chilled</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>is chilled by</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Posison</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> is poisoned by </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>is burned by</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> is burned by </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Frozen</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> is frozen by </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>LifeSteal</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>draws life from a </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Struck</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> is struck by lightning from </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>gostEnchanting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName>gostEnchanting</packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>gostEnchanting</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>doneEnchant</name>
						<script>enchCount=enchCount+1
currentlyEnchanting = false
send("show")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>table's binding field fades away.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>applyStab</name>
						<script>send("apply stab")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile>C:/Windows/media/chimes.wav</mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>shiver and emit a high pitch whine!</string>
							<string>You notice a flux within the enchantments upon</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>applyHarm</name>
						<script>send("apply harm")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The calibration required exceeds a</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Check Level</name>
						<script>local current = tonumber(string.trim(multimatches[1][2]))
local max = tonumber(string.trim(multimatches[1][3]))
local cost = tonumber(string.trim(multimatches[2][2]))

if (not currentlyEnchanting) then

  if ((current+cost) &gt; max) then
   cecho("&lt;red&gt;  Over enchant")
   if enchanting.multi then
     send("done")
     send("drop '" .. enchantTarget .. "'")
     send("enchant '" .. enchantTarget .. "' table")
     startEnchant()
   end
   
  else
    currentlyEnchanting=true
    if(enchCount&lt;tableEnchant[tostring(switchCount)].count)then
      if not enchanting.manual then
  	   tempTimer(.5,[[send("pro")]])
      end
      --enchCount=enchCount+1
    else
  	  switchCount=switchCount+1
  		while(tableEnchant[tostring(switchCount)].count==0)do
  	    switchCount=switchCount+1
  		end
  	  if(tableEnchant[tostring(switchCount)])then
  			send("enchant "..tableEnchant[tostring(switchCount)].enchant)
        echo("\n" .. "Ready to Continue." .. "\n")
        enchCount=0
  	    if not enchanting.manual then
          tempTimer(.5,[[send("pro")]])
        end
        --enchCount=1
  		else
  			send("show")
  			send("done")
        cecho("&lt;green&gt;  Complete")
        
        --Next
        if enchantContinue then
         send("drop '" .. enchantTarget .. "'")
         --send("done")
         send("enchant '" .. enchantTarget .. "' table")
         startEnchant()
        end
  	  end
  	end	
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>6</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Enchantment level:  (.*)/(.*)</string>
							<string>Cost:  (.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>missing spark</name>
						<script>currentlyEnchanting = false
send("disenchant ember")
send("disenchant ember")
send("disenchant ember")
send("disenchant ember")
send("disenchant ember")
tempTimer(2,[[send("pro")]])

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are missing 1x a tiny spark of magic</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>de focus</name>
						<script>
send("de focus")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>A small focus of magic flares brilliantly as the magic erupts from within!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Crafting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Surplus Low Quality</name>
					<script>
if string.trim(matches[3]) ~= craftingparams["quality"] then
  send("put '" .. matches[2] .. "' back")
else
  if craftfullstatus then
    craftsetiteration = craftsetiteration + 1
  end
end
if craftfullstatus then
  if craftsetiteration &gt; table.size(craftset) then
    craftfullstatus = false
  else
    send(expandAlias(craftset[craftsetiteration]))
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have created (?:a )?(?:pair of)?(.*)\. \((.*) quality\)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Quests</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Start Quest Grab</name>
					<script>startquestgrab=true
if xaos.questextras == nil then
  xaos.questextras = {}
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>offers the following quests:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quest Grab</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return startquestgrab</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Get Name</name>
						<script>
if not string.find(multimatches[2][2],"(Unavailable:") then
  questextraname=string.trim(multimatches[2][2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#ffff00</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>ANSI_COLORS_F{011}_B{IGNORE}</string>
							<string>(.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>6</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Get Exp</name>
						<script>questextraxp=tonumber(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Exp: ([0-9]+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Get Objs</name>
						<script>questextraobjs=string.trim(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Objs: (.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt Script</name>
						<script>if questextraname~="" then
  if table.size(table.n_filter(xaos.questextras, function (oitem) return oitem.name == questextraname end)) == 0 then
    table.insert(xaos.questextras,{name=questextraname,exp=questextraxp,objs=questextraobjs})
  end
end


startquestgrab=false
questextraname=""</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Questmaster find</name>
					<script>
if QMContains(string.trim(matches[2])) then
  questmaster=QMGetName(string.trim(matches[2]))
else
  questmaster="unknown"
end
echo("\n\nQuestmaster set: " .. questmaster .. "\n\n")

send("quest list")
if auto_questTurnIn then
  expandAlias("turnIn")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\(Questmaster\) (.*)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get all the repeatable quests</name>
					<script>if not string.find(multimatches[1][2],"(Unavailable:") then
  send("quest request " .. multimatches[1][2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>   (.*)</string>
						<string>ANSI_COLORS_F{011}_B{IGNORE}</string>
						<string>       Repeatable:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>6</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get all the normal quests</name>
					<script>if not string.find(multimatches[1][2],"(Unavailable:") then
  send("quest request " .. multimatches[1][2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>   (.*)</string>
						<string>ANSI_COLORS_F{011}_B{IGNORE}</string>
						<string>       Optimal Levels:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>6</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Complete Log</name>
					<script>feedManager("[QUEST] Complete: " .. string.trim(matches[2]))
--local firstxp = (last_xp_overflow*100) + last_current_xp
--local nowxp = (xp_overflow*100) + current_xp


--cecho("data","[ Quest ] Complete: " .. string.trim(matches[2]) .. ": " .. string.format("%4.2f",(nowxp-firstxp)/1000) .. "K%\n")

--last_xp_overflow = xp_overflow
--last_current_xp = current_xp</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have completed the quest (.*)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>XP Award</name>
					<script>feedManager("[ XP " .. getTime(true,"HH.mm") .. "] Complete: " .. string.format("%4.2f",tonumber(matches[2])/1000) .. "K XP")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have been awarded ([0-9]+) XP!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Random XP Gain</name>
					<script>echo("--" .. multimatches[1][2] .. " " .. multimatches[3][2] .. "\n")

--if not string.find(multimatches[1][2]," has been defeated!!") then
cecho("data","[ XP " .. getTime(true,"HH.mm") .. "] Gain: " .. string.format("%4.2f",tonumber(multimatches[3][2])/1000) .. "K XP\n")
--end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*(?&lt;!has been defeated!!))$</string>
						<string>2</string>
						<string>You have gained ([0-9]+) experience</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>5</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hunting</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Quest Left</name>
						<script>feedManager("[ Quest ] " .. killedID .. ": " .. string.trim(matches[2]))


if killedID == "Someone" then
  expandAlias("questeat")
else
  quest_updateobjective(killedID,1)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Amount remaining:(.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Quest Goal Done</name>
						<script>feedManager("[ Quest ] " .. killedID .. ": Complete")

--quest_updateobjective(killedID,1)
--quest_completeobjective(killedID)

expandAlias("questeat")

--echo("\ngetting next target\n")
if xaos.autoquest.autoquest_currentquest ~="" then
  if killedID == "Someone" then
    tempTimer(3,function () autoquest_go() end)
  else
    autoquest_go()
  end
end </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Goal completed!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Auto Questing Lost</name>
						<script>--get a random target?
if xaos.autoquest.autoquest_currentquest ~="" then
  if not autoquest_switchtargets() then
    
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>No-one around by that name.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quest Status</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>StartCheck</name>
						<script>
xaos.quests={}

questinfo = "\n"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Quests you are currently on</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Status Quest Header</name>
						<script>
local curquest = string.trim(matches[2])
local qm = string.trim(matches[3])
tempQuest=curquest
table.insert(xaos.quests,{name=curquest,qm=qm,objectives={}})
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Quest\:  (.*)QuestMaster\:  (.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Status Objctive</name>
						<script>local comp = string.trim(matches[2])
local kill = string.trim(matches[3]) == "Kill"
local name = fixstring(string.trim(matches[4]))
local curcnt = string.trim(matches[5])
local maxcnt = string.trim(matches[6])

for key,value in pairs(xaos.quests) do 
    if value.name==tempQuest then
      table.insert(xaos.quests[key].objectives,
        {
          name=name,
          complete=(comp=="X"),
          current=curcnt,
          max=maxcnt,
          kill=kill,
        })
    end
end

echo (" -- Collected")


</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>5</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>\[([X| ])\]( Kill)?(?: [0-9]+x)?(?: [aA]n | [aA] | [tT]he )?([^\(\[]*)\(?([0-9]*)?\/?([0-9]*)\)?</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Gags</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return questgag ~= nil</string>
							<string>return questgag</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>StartCheck</name>
							<script>questgagreadyforreset=true
deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Quests you are currently on</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gag Quest Description</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^     (.*)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gag Quest Header</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Quest\:  (.*)QuestMaster\:  (.*)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gag Objctive</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>5</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>\[([X ]*)\]( Kill)?(?: [0-9]+x)?([^\(\[]*)\(?([0-9]*)?\/?([0-9]*)\)?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gag Empty Lines</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prompt reset</name>
							<script>questTurnIn=false
questgag=false

echo(tostring(questinfo))

if gagmode then
  statcount = statcount+1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isXaosPrompt()</string>
								<string>return questgagreadyforreset ~= nil</string>
								<string>return questgagreadyforreset</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
								<integer>4</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Score</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Echo Level</name>
					<script>
local lvl = tonumber(string.trim(matches[2]))
local lvlpercent = matches[3]
if lvlpercent == nil then
  lvlpercent = 0
else
  lvlpercent = tonumber(string.trim(matches[3]))
end

currentLevelPercent = lvlpercent
currentLevel=lvl

xaos.LevelPercent = lvlpercent
xaos.Level=lvl</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>HLevel\: (.*)  \((.*)\%\)</string>
						<string>Level\: (.*)\|</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get Class</name>
					<script>local primary = string.trim(matches[2])
local reborn = string.trim(matches[3])

--Class: ([^\s\n-]*)(?:-)?(.*)? Religion



xaos.class.primary = primary
xaos.class.reborn = reborn
xaos.class.cleric = false
xaos.class.mage = false
xaos.class.warrior = false
xaos.class.thief = false
xaos.class.barbarian=false

local classtable = {}
classtable = {"warrior","gladiator","knight","berserker","paladin","geomancer"}
if table.contains(classtable,primary) or table.contains(classtable,reborn) then
  xaos.class.warrior = true
end


classtable = {"cleric","bishop","monk","druid"}
if table.contains(classtable,primary) or table.contains(classtable,reborn) then
  xaos.class.cleric = true
end

classtable = {"barbarian","spirit champion","witch doctor","rift binder","journeyman"}
if table.contains(classtable,primary) or table.contains(classtable,reborn) then
  xaos.class.barbarian = true
end

classtable = {"thief","rake","assassin","disciple"}
if table.contains(classtable,primary) or table.contains(classtable,reborn) then
  xaos.class.thief = true
end

classtable = {"mage","invoker","illusionist","elementalist","mentalist","necromancer"}
if table.contains(classtable,primary) or table.contains(classtable,reborn) then
  xaos.class.mage = true
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Class: ([^-]*)(?:-)?(.*)? Religion</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tactics</name>
					<script>xaos.tactics = string.trim(matches[2])

if gagmode then
  statcount = statcount+1
  deleteLine()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your current tactics:  (.*)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tactics Gag</name>
					<script>if gagmode then
  deleteLine()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Available tactical options are:</string>
						<string>        default:  Relies on the style to determine in-room movements.</string>
						<string>     aggressive:  Chases opponent regardless.</string>
						<string>       sentinel:  Will not back away but will still advance.</string>
						<string>        retreat:  Actively avoids opponent's range.</string>
						<string>        brawler:  (modifier) Switches to closest opponent if current is out of range.</string>
						<string>     stationary:  Does not advance or retreat, remains completely stationary.</string>
						<string>NOTE:  While the rest are mutually exclusive, you can mix brawler with any of them.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Fighting Style</name>
					<script>xaos.fightingstyle = string.trim(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are currently fighting in (.*) style.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Frags</name>
					<script>if xaos.currency == nil then
  xaos.currency = {}
end
xaos.currency.frags=string.trim(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Frags: ([0-9]+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Trait Grab</name>
					<script>xaos.traits = string.trim(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Traits:(.*)\|</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Name</name>
					<script>xaos.charactername = string.trim(matches[2])

--On Login
if initialload then
  loadprofile(true)
  initialload=false
  enableTimer("User Timer")
  expandAlias(xaos.config.reconnectaction)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Name: (.*) HLevel:</string>
						<string>Name: (.*) Level:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Items and Weight</name>
					<script>local itemcur = tonumber(string.trim(matches[2]))
local itemmax = tonumber(string.trim(matches[3]))
local eqcur = tonumber(string.trim(matches[4]))
local eqmax = tonumber(string.trim(matches[5]))

--echo(itemcur .. " " .. itemmax  .. " " .. eqcur  .. " " .. eqmax)

local ratio = .95

if (itemcur/itemmax) &gt; ratio then
  feedManager("Items dangerously full, could miss an artifact: " .. math.floor(itemmax*ratio),true)
  statusOverloaded=true
elseif (eqcur/eqmax) &gt; ratio then
  feedManager("Weight dangerously full, could miss an artifact: ".. math.floor(eqmax*ratio),true)
  statusOverloaded=true
else
  statusOverloaded=false
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Items: (.*)/(.*)     Eq weight: (.*)/(.*) </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get Hero Points</name>
					<script>xaos.heropoints=tonumber(string.trim(matches[2]))</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string> Hero Points: (.*) Damroll</string>
						<string>You gain (?:.*) hero points, totalling (.*).</string>
						<string>You feel empowered! \((.*) hero points remaining\).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Score Grab</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return scoregrab</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Start</name>
						<script>startscoregrab=true
debugwrite("score grab on")
moveCursor(0,getLineNumber()-1)
deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>|--------------------------------------------------------------------|</string>
							<string>| Name</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>In Score Grab</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return startscoregrab</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gag Score</name>
							<script>echo("--del")
deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\|</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Score Grab Reset</name>
							<script>startscoregrab=false
scoregrab=false
debugwrite("score grab reset")

if gagmode then
  statcount = statcount+1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isXaosPrompt()</string>
								<string>return startscoregrab</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Equipment</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Start</name>
					<script>startequipmentgrab=true
held=""
currentequipment = {}</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are wearing:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Equipment</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return startequipmentgrab</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Grab Gear</name>
						<script>
--&lt;(worn on \w*|worn about \w*|worn around \w*|floating nearby|held (?:in|with) (?:right|left|both) hands?)&gt;  \[[\w\s]*\](?: \(Bound\))?(?: \(Artifact\))?(?: \(Glowing\))?(?: \(Humming\))?(?: \(Spiked\))?(?: \(Visored\))? (?:an|the|a)?(.*)

local wear = string.trim(matches[2])
local item = string.trim(matches[3])

item = string.gsub(item,"'s","")
--item = string.gsub(item,"'","")
item = string.gsub(item," of "," ")
item = string.gsub(item," the "," ")
--item = rex.gsub(item,[['(.*)']],"")
--item = rex.gsub(item,[["(.*)"]],"")
item = string.gsub(item,"'","")
item = string.gsub(item,"\"","")

item = string.trim(item)

if wear == "held in right hand" or wear == "held with both hands" then
  wielded = item
end

if wear == "held in left hand" then
  held = item
end

if wear == "worn about body" then
  xaos.backpack = item
end
if equipmentgrab then
table.insert(xaos.currentequip,{location=wear,item=item})
echo("  -- seteq")
end
table.insert(currentequipment,{location=wear,item=item})
echo("  -- grabbed")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>&lt;(worn on \w*|worn about \w*|worn around \w*|floating nearby|held (?:in|with) (?:right|left|both) hands?)&gt;  \[[\w\s]*\](?: \(Bound\))?(?: \(Artifact\))?(?: \(Glowing\))?(?: \(Humming\))?(?: \(Spiked\))?(?: \(Visored\))? (?:an|the|a)?(.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt reset</name>
						<script>equipmentgrab=false
startequipmentgrab=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
							<string>return startequipmentgrab</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Data Collectors</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Other Loot</name>
					<script>local person = string.trim(matches[2])
local loot = string.trim(matches[3])

if not string.match(loot," coins") then
  local notimp = {"fragment of the fallen","unaligned soul"}
  if table.contains(notimp,loot) then
    feedManager("&lt;white&gt;[LOOT] " .. person .. "-" .. loot)
  else
    feedManager("&lt;DodgerBlue&gt;[LOOT] " .. person .. "-" .. loot)
  end
end

--a fragment of the fallen</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(?:[aA] |[tT]he |[aA]n )?(.*) gets (?:a|the|an) (.*) from the (?:glowing )?corpse</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Loot</name>
					<script>
local person = "Me"
local loot = string.trim(matches[2])

if not string.match(loot," coins") then
  --cecho("data","&lt;white&gt;[LO " .. getTime(true,"HH.mm") .. "] " .. loot .. "\n")
  
  local notimp = {"fragment of the fallen","unaligned soul"}
  if table.contains(notimp,loot) then
    feedManager("&lt;white&gt;[LOOT] " .. loot)
    --send("put '" .. loot .. "' '" .. xaos.backpack)
  else
    feedManager("&lt;DodgerBlue&gt;[LOOT] " .. loot)
  end
  
  
  
  table.insert(lootcollector,{time=getTime(true,"HH.mm"),loot=loot})
  
  local notimp = {"fragment of the fallen","unaligned soul"}
  if not table.contains(notimp,loot) then
    --send("put '" .. loot .. "' '" .. xaos.backpack)
  end
  
end

--a fragment of the fallen

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You get (?:a|the|an) (.*) from the (?:glowing )?corpse</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Artifact Drop</name>
					<script>feedManager("&lt;yellow&gt;[LOOT] Artifact!")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Enjoy your Artifact!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Party</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Party Grab</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return partygrab</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Member</name>
						<script>--echo(" -- grabbed")

table.insert(curpartystatus.members,
{
  name = string.trim(matches[5]),
  hp = matches[2],
  mana = matches[3],
  move = matches[4],
  missingcount = 0,
  charmie = rex.match(matches[5],[[^([aA] |[tT]he |[aA]n )]]) ~= nil
})

if partystatusgrab then
  deleteLine()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[0-9]+\) ([0-9 ]{1,3})% ([0-9 ]{1,3})% ([0-9 ]{1,3})% (.*) (?:attacking:)</string>
							<string>[0-9]+\) ([0-9 ]{1,3})% ([0-9 ]{1,3})% ([0-9 ]{1,3})% (.*)(?: ) (?:\(Guarding\))</string>
							<string>[0-9]+\) ([0-9 ]{1,3})% ([0-9 ]{1,3})% ([0-9 ]{1,3})% (.*) (?:\(Guarded by\))</string>
							<string>[0-9]+\) ([0-9 ]{1,3})% ([0-9 ]{1,3})% ([0-9 ]{1,3})% (.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Missing</name>
						<script>--echo(" -- grabbed")

local missingcount = 0
local findmember = table.n_filter(xaos.party.members,function (item) return item.name == matches[2] end)
--debugecho(table.size(findmember))
if table.size(findmember) ~= 0 then
  missingcount = findmember[1].missingcount
end
table.insert(curpartystatus.members,
{
  name = string.trim(matches[2]),
  hp = "??",
  mana = 0,
  move = 0,
  missingcount=missingcount+1,
  charmie = rex.match(matches[2],[[^([aA] |[tT]he |[aA]n )]]) ~= nil
})
--debugecho(missingcount)
if xaos.party.leader == "Your" and xaos.config.scripting.findmode and missingcount &gt; 0 then
  --playSoundFile([[C:\Windows\media\chimes.wav]])
  if followTarget == "" then
    debugecho("we lost " ..  matches[2])
    lastkillTarget=killTarget
    expandAlias("fhunt " .. matches[2])
  end
end
if partystatusgrab then
  deleteLine()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[0-9]+\) ---- ---- ---- (.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt reset</name>
						<script>partygrab=false
partystatusgrab=false

xaos.party = curpartystatus
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Start Grab</name>
					<script>partygrab=true
curpartystatus = {
  leader = string.trim(matches[2]),
  members = {}
}

if partystatusgrab then
  deleteLine()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*)\'s party:</string>
						<string>^(Your) Party:</string>
						<string>^(.*) party:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Not in a Party</name>
					<script>if partystatusgrab then
  deleteLine()
  partystatusgrab=false
end

xaos.party = {
  leader = "Your",
  members = {}
}</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are not currently in a party.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Grouping</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Follows you</name>
						<script>--send("party form")
--send("party invite "..matches[2])
--statusFollowing = false

if not isInParty(string.trim(matches[2])) and yourParty() then
  send("party form")
  send("party invite "..matches[2])
  if xaos.config.autoguard then
    send("guard " .. matches[2])
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.+) now follows you.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You follow</name>
						<script>--statusFollowing = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You now follow (.*).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You stop following</name>
						<script>--statusFollowing = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You stop following (.*).</string>
							<string>^You already follow yourself.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Invited</name>
						<script>if xaos.config.autojoin then 
  send("party join "..matches[2])
end
--followTarget = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(\w+) has invited you to join the party.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wants to join</name>
						<script>if yourParty() then
  send("party invite " .. matches[2])
  if xaos.config.autoguard then
    send("guard " .. matches[2])
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.*) wants to join</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Party Beckon</name>
						<script>local becktarget = string.trim(matches[2])
if isInParty(becktarget) then
  if isLeader(becktarget) then   
    expandAlias("followleader")
  else
    send("follow " .. becktarget)
    expandAlias("overrideleader " .. becktarget)
  end
  send("tell " .. becktarget .. " Following you")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) beckons for you to follow.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Reldi QOL</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>party</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>partyguard</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Guard Success</name>
								<script>local text = matches[1]
feedManager(text)
send("gtell ^W[UI]^R:^G".. tostring(matches[2]).. " has been GUARDED.^^")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}You will now guard (.*) from attackers.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unguard Success</name>
								<script>local text = matches[1]
feedManager(text)
send("gtell ^W[UI]^R:^G".. tostring(matches[2]).. " has been UNGUARDED.^^")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}You will stop guarding (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Asked for Guard</name>
								<script>if yourParty() then
  local target = matches[2]
  local theText = "guard " .. target
  send (theText)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#0000ff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}(.*) tells the group '(G|g)(U|u)(A|a)(R|r)(D|d)'$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>partyheal</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Asked for Heal</name>
								<script>--You can change the healVar with the alias.
			local target = matches[2]
			local healVar = qolWithReldi.healword or "heal"
			local theText = "C " .. healVar .." " .. target
			send (theText)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#00aaff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}(.*) tells the group '(H|h)(E|e)(A|a)(L|l)'$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>partyrescue</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rescue Success</name>
								<script>local text = matches[1]
			feedManager(text)
			local theText = "gtell ^W[UI]^R:^G".. tostring(matches[2]).. " has been successfully rescued.^^"
			send (theText)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}You rescue (.*)!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Asked for Rescue</name>
								<script>if yourParty() then
  local target = matches[2]
  local theText = "rescue " .. target
  send (theText)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#00aaff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}(.*) tells the group '(R|r)(E|e)(S|s)(C|c)(U|u)(E|e)'$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Buffs</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Affects</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Start Check Buffs</name>
						<script>affectgrab=true
for key,value in pairs(xaos.buffs) do
  xaos.buffs[key] = false
end

xaos.bufflist = {}

if gagmode then
  deleteLine()
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are affected by the following:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - center</name>
						<script>xaos.buffs.statusCenter=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Skill: discipline        modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - berserk</name>
						<script>xaos.buffs.statusBerserk=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string> Skill: berserk           modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - resolve</name>
						<script>xaos.buffs.statusResolve=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Skill: resolve           modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - warcry</name>
						<script>xaos.buffs.statusWarcry=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Skill: warcry            modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - bless</name>
						<script>xaos.buffs.statusBless=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Spell: bless             modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - trance</name>
						<script>xaos.buffs.statusTrance=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Skill: trance            modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>GetList</name>
						<script>table.insert(xaos.bufflist,string.trim(matches[2]))
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:\s*)(?:Skill:|Spell:| misc:|Effect:) (.*) (modifies|grants|makes|adds|gives|will)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>AffectGrabs</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return affectgrab</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>GetList</name>
							<script>if gagmode then
  deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(?:Skill:|Spell:| misc:|Effect:)</string>
								<string>(modifies)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prompt reset</name>
							<script>affectgrab=false

if gagmode then
  statcount = statcount+1
else
  echo(checkbuffs().missing)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isXaosPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>BuffMode</name>
					<script>--BuffMode is for combat buffs that cause delay.  If you are following someone, turning this off will help
--you keep up.</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return xaos.config.buffmode</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defeated</name>
						<script>local mastermind = table.contains(string.split(xaos.traits," "),"mastermind")

if (xaos.buffs.statusBerserk==false and xaos.class.warrior==true and (xaos.config.berserkovercenter or mastermind)) then
  send("berserk")
end
if (xaos.buffs.statusBless==false and (xaos.class.cleric==true or xaos.class.isclass("paladin") or xaos.class.isclass("disciple"))) then
  send("cast bless")
end
if (xaos.buffs.statusWarcry==false and (xaos.class.isclass("knight") or xaos.class.isclass("berserker"))) then
  send("warcry")
end
if (xaos.buffs.statusResolve==false and xaos.class.barbarian==true and (not xaos.config.berserkovercenter or mastermind)) then
  send("resolve")
end
if (xaos.buffs.statusCenter==false and xaos.class.warrior==true and (not xaos.config.berserkovercenter or mastermind)) then
  send("center")
end
if (xaos.buffs.statusTrance==false and xaos.class.thief==true) then
  send("trance")
end
if (xaos.buffs.statusSpellSlip==false and (xaos.class.isclass("rake"))) then
  send("cast 'spell slip")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Combat true</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string> is in awful condition</string>
							<string>has some big nasty wounds and scratches</string>
							<string>has quite a few wounds </string>
							<string>is in excellent condition </string>
							<string>looks pretty hurt</string>
							<string>has some small wounds and bruises </string>
							<string>No way!  You are still fighting!</string>
							<string>You are still in combat!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Berserk Drop</name>
						<script>if combat then 
  send("berserk")
end
xaos.buffs.statusBerserk=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel your pulse slow down.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Berserk Fail</name>
						<script>if combat then 
  send("berserk")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your pulse speeds up, but nothing happens.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Berserk Success</name>
						<script>xaos.buffs.statusBerserk=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your pulse races as you are consumed by rage!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Warcy Drop</name>
						<script>if (xaos.buffs.statusWarcry==false and (xaos.class.primary=="knight" or xaos.class.primary=="berserker")) then
  send("warcry")
end
xaos.buffs.statusWarcry=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The effects of the warcry die.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Warcry Fail</name>
						<script>send("warcry")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You couldn't wrap your tongue around those yells.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>warcry success</name>
						<script>xaos.buffs.statusWarcry=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You yell out a glorious warcry!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bless drop</name>
						<script>xaos.buffs.statusBless = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel less righteous.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bless Success</name>
						<script>xaos.buffs.statusBless=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel righteous.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Your fury subsides.</name>
						<script>if combat then
send("fury")
else
statusFuryTry = false
end
xaos.buffs.statusFury=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your fury subsides.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You fail to build upon the rage.</name>
						<script>if combat then
send("fury")
else
statusFuryTry = false
end
xaos.buffs.statusFury=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You fail to build upon the rage.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You shudder with barely controlled rage!</name>
						<script>xaos.buffs.statusFury=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You shudder with barely controlled rage!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Resolve Drop</name>
						<script>send("resolve")
xaos.buffs.statusResolve=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your incredible resolve fades!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Resolve Fail</name>
						<script>send("resolve")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your resolve fails you!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Resolve Success</name>
						<script>xaos.buffs.statusResolve=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are filled with unshakeable resolve!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>center successs</name>
						<script>xaos.buffs.statusCenter=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your senses sharpen and time slows.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>center drop</name>
						<script>xaos.buffs.statusCenter=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lose your focus.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trance Drop</name>
						<script>xaos.buffs.statusTrance=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You end your trance.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trance Success</name>
						<script>xaos.buffs.statusTrance=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You enter a deep trance.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rake</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prepared to spell slip</name>
							<script>statusSpellSlip = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You prepare yourself for dodging.</string>
								<string>You are already prepared...</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Spell slip fall</name>
							<script>statusSpellSlip = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You lose the edge.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Hero Empowers</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hero Empowers</name>
					<script>empowerincrease()

if fullautoempower then
continueempower()
else
  
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You feel empowered! \((.*) hero points remaining\).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Start Empower Grab</name>
					<script>startempowergrab=true
xaos.heroempowers={}

if gagmode then
  deleteLine()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Available empowerments:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Empower Grab</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return startempowergrab</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Grab Empower</name>
						<script>for k=1,table.size(matches),3 do
  local ind = (k-1)
  --echo(ind)
  local cost = string.trim(matches[2+ind])
  local name = string.trim(matches[3+ind])
  local current = (cost-40)/40
  
  table.insert(xaos.heroempowers,{cost=cost,name=name,current=current})
end

if gagmode then
  deleteLine()
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([0-9]+)\s+(?:[-0-9]+)  (.{22})</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt Finish</name>
						<script>startempowergrab=false
table.sort(xaos.heroempowers,function (e1,e2) return tonumber(e1.cost) &lt; tonumber(e2.cost) end)

if gagmode then
  statcount = statcount+1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hero Empower Extra Gag</name>
						<script>if gagmode then
  deleteLine()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Cost  Empower   </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Beta</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return xaos.config.betamode</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sorting</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return sortingmode</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sorting</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return issorting</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gear Sorting</name>
							<script>local quality = string.trim(multimatches[1][2])
local cur = tonumber(string.trim(multimatches[2][2]))
local max = tonumber(string.trim(multimatches[2][3]))

itemwordcount =0

--echo (100*cur/max)
if quality=="artifact" then
  --send("e;drop '" .. lastid .. ";w;clear")
  send("put '" .. lastid .. "' pink ")
elseif quality=="epic" then
  if (100*cur/max) &lt;= 60 then
    send("put '" .. lastid .. "' gold")
  else
    --send("drop '" .. lastid)
    --send("e;drop '" .. lastid .. ";w;clear")
    send("put '" .. lastid .. "' brown ")
  end
elseif quality == "supreme" then
  if (100*cur/max) &lt;= 60 then
    send("put '" .. lastid .. "' silver")
  else
    --send("e;d;drop '" .. lastid .. ";u;w;clear")
    send("put '" .. lastid .. "' maroon")
  end
else
  send("put '" .. lastid .. "' sheer")
end
expandAlias("id " .. lastid)
--tempTimer(3,function () expandAlias("id " .. lastid) end)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Quality:  (.*)</string>
								<string>Enchantment: (.*)/(.*)  </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>End Sort</name>
							<script>issorting=false
send("look")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile>C:/Windows/media/tada.wav</mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are not carrying that.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Item Bound</name>
							<script>issorting=false
send("look")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You can't drop a bound item.</string>
								<string>You can not mix bound and unbound items.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Out of Space</name>
							<script>--issorting=false
send("bclear;e;d;w;get spool;make new cloth backpack;size giant;source 2 sew;color " .. matches[2] .. ";proceed")
send("e;u;w;drop " .. matches[2])
expandAlias("id " .. lastid)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile>C:/Windows/media/chord.wav</mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(?:.*) won\'t fit, a (.*) backpack hasn't enough room</string>
								<string>A (.*) backpack has reached its maximum items limit</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Cant put container in backpack</name>
							<script>issorting=false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile>C:/Windows/media/chord.wav</mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Putting (.*) into a (.*) backpack would be bad.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ran out of mana</name>
							<script>send("sleep")
tempTimer(20,function () send("wake");expandAlias("id " .. lastid) end)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You don't have enough mana.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>None there try next word</name>
							<script>issorting=false
itemwordcount = itemwordcount + 1
send("look")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>I see no (?:.*)?here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Look an item!</name>
						<script>--t 
local item = string.trim(multimatches[1][2])

if rex.match(item,[[A (?:\w*) backpack lies here]]) == nil then

  item = rex.gsub(item,[[^(A |The )]],"")
  item = rex.gsub(item,[[lies here\.$]],"")
  item = rex.gsub(item,[[on the ground here\.$]],"")
  item = string.trim(item)
  --debugecho(item)
  local pattern = "(\\w*)"
  for i=1,itemwordcount do 
    pattern= "(?:\\w*) " .. pattern
  end
  debugecho(pattern)
  item = rex.match(item,pattern)
  issorting = true
  debugecho(item)
  if item ~= nil and item ~= "" then
    send("clear")
    send("get all." .. item)
    expandAlias("id " .. item)
  end
  
  

end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>\[(?:.*)\] (?:\(Magical\) )?(?:\(Glowing\) )?(?:\(Humming\) )?(?:\(Visored\) )?(?:\(Spiked\) )?(.*)</string>
							<string>return not issorting</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>XUI</name>
				<script>--Created by Marchosias
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return mysettings.UIType == "XUI"</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Damage Calc</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>End Round</name>
						<script>if (RoundCalc.mine.damage&gt;0 or RoundCalc.opp.damage&gt;0) then
  TotalCalc.Combine(RoundCalc)
  RoundCalc.Clear()  
  --TotalCalc.Display()
end
--echo(RoundCalc.damage .. " a: " .. string.format("%5.2f",TotalCalc.damage/TotalCalc.count))
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Damage</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Parry</name>
							<script>RoundCalc.mine.parry = RoundCalc.mine.parry + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You (.*)parry </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dodge</name>
							<script>RoundCalc.mine.dodge = RoundCalc.mine.dodge + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You dodge</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Misses you</name>
							<script>RoundCalc.mine.miss = RoundCalc.mine.miss + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>pathetic (.*) misses you</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Reflects off you</name>
							<script>RoundCalc.mine.reflect = RoundCalc.mine.reflect + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>reflects off you</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Damage</name>
							<script>local damcount = matches[3]
local damtype = matches[2]

if damcounts == nil then
  damcounts = {}
end
if damcounts[damtype] == nil then
  damcounts[damtype]=0
end
damcounts[damtype]=damcounts[damtype]+damcount
--debugecho(RoundCalc.mine.damage)
--debugecho(RoundCalc.mine.hit)
RoundCalc.mine.damage = tonumber(RoundCalc.mine.damage) + tonumber(damcount)
RoundCalc.mine.hit = tonumber(RoundCalc.mine.hit) + 1

--local strlen = string.len(matches[1])
local strlen = tonumber(mainWindowWrap) - string.len(matches[1]) - string.len(damcount) - 3 --3 for scroll bar
if strlen &lt; 0 then --word wrap
  
end
local spacer = ""
for i=1,strlen do
  spacer = spacer .. " "
end
cecho("&lt;yellow&gt;" .. spacer .. damcount)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your \w+(?: critical)?(?: precise)?(?: propelled)? (.*) (?:misses|nicks|lightly skins|skins|lightly grazes|grazes|scratches|scrapes|hits|strikes|wounds|injures|mauls|scars|maims|mangles|destroys|decimates|guts|leaves GASHES|forever SCARS|DEMOLISHES|MASSACRES|DEVASTATES|does UNSPEAKABLE|SPLATTERS|-ANNIHILATES-|-=OBLITERATES=-|-=EVICERATES=-|-=LAYS WASTE=-) .*\((\d+) dam\)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Phase</name>
							<script>RoundCalc.mine.phase = RoundCalc.mine.phase + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You phase to avoid</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Block</name>
							<script>RoundCalc.mine.block = RoundCalc.mine.block + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You block </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Misses</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Parry</name>
							<script>RoundCalc.opp.parry = RoundCalc.opp.parry + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>parries your </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dodge</name>
							<script>RoundCalc.opp.dodge = RoundCalc.opp.dodge + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>dodges your </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Misses you</name>
							<script>RoundCalc.opp.miss = RoundCalc.opp.miss + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>pathetic (.*) misses you</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Reflects off you</name>
							<script>RoundCalc.opp.reflect = RoundCalc.opp.reflect + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>reflects off you</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Block</name>
							<script>RoundCalc.opp.block = RoundCalc.opp.block + 1
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> blocks your </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Incoming Damage</name>
							<script>RoundCalc.opp.damage = RoundCalc.opp.damage + tonumber(matches[2])
RoundCalc.opp.hit = RoundCalc.opp.hit + 1


local strlen = tonumber(mainWindowWrap) - string.len(matches[1]) - string.len(matches[2]) - 3 --3 for scroll bar
local spacer = ""
for i=1,strlen do
  spacer = spacer .. " "
end
cecho("&lt;red&gt;" .. spacer .. matches[2])
--cecho("&lt;red&gt;   " .. matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^.+ your .+\. \((\d+) dam\)$</string>
								<string>^.+ you\. \((\d+) dam\)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Phase</name>
							<script>-- debugecho("phased")
RoundCalc.opp.phase = RoundCalc.opp.phase + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>phases to avoid your</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Heals</name>
						<script>local strlen = tonumber(mainWindowWrap) - string.len(matches[1]) - string.len(matches[2]) - 3 --3 for scroll bar
local spacer = ""
for i=1,strlen do
  spacer = spacer .. " "
end
cecho("&lt;green&gt;" .. spacer .. matches[2])

--cecho("&lt;green&gt;   " .. matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:.*)\(([0-9]+) heal\)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Prompt Script</name>
					<script>if statcount &gt;= maxstatcount then
  gagmode = false
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isXaosPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>XaosUI</name>
				<script>--Created by Noax</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return mysettings.UIType == "XaosUI"</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>UI</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Comms</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>OOC</name>
							<script>cecho("&lt;DimGrey&gt; @" .. tostring(getTime(true, "hh:mm:ssap")))
selectCurrentLine()
copy()
appendBuffer("UI.OOC")
if tostring(UI.CurrentComms) ~= "OOC" then
  enableTimer("OOCFlash")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}(.*)\soocs '(.+)'$</string>
								<string>^\s{0,1}An immortal oocs '(.+)'$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Room</name>
							<script>cecho("&lt;DimGrey&gt; @" .. tostring(getTime(true, "hh:mm:ssap")))
selectCurrentLine()
copy()
appendBuffer("UI.Room")
if tostring(UI.CurrentComms) ~= "Room" then
  enableTimer("RoomFlash")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}(.*) says '(.*)'$</string>
								<string>^\s{0,1}(.*) say '(.*)'$</string>
								<string>^\s{0,1}(.*) yells '(.*)'$</string>
								<string>^\s{0,1}(.*) yell '(.*)'$</string>
								<string>^\s{0,1}(.*) grunts '(.*)'$</string>
								<string>^\s{0,1}(.*) grunt '(.*)'$</string>
								<string>^\s{0,1}(.*) groans '(.*)'$</string>
								<string>^\s{0,1}(.*) groan '(.*)'$</string>
								<string>^\s{0,1}(.*) whispers '(.*)'$</string>
								<string>^\s{0,1}(.*) whisper '(.*)'$</string>
								<string>^\s{0,1}(.*) says to (.*) '(.*)'$</string>
								<string>^\s{0,1}(.*) whispers to you '(.*)'$</string>
								<string>^\s{0,1}You say to (.*) '(.*)'$</string>
								<string>^\s{0,1}(.*) whispers to (\w+)\s'(.*)'$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Group</name>
							<script>cecho("&lt;DimGrey&gt; @" .. tostring(getTime(true, "hh:mm:ssap")))
selectCurrentLine()
copy()
appendBuffer("UI.Group")
if tostring(UI.CurrentComms) ~= "Group" then
  enableTimer("GroupFlash")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}(.*) tells the group '(.*)'$</string>
								<string>^\s{0,1}You tell the group '(.+)'$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>IC</name>
							<script>cecho("&lt;DimGrey&gt; @" .. tostring(getTime(true, "hh:mm:ssap")))
selectCurrentLine()
copy()
appendBuffer("UI.IC")
if tostring(UI.CurrentComms) ~= "IC" then
  enableTimer("ICFlash")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}(.*) ICs '(.*)'$</string>
								<string>^\s{0,1}You ic '(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tell</name>
							<script>cecho("&lt;DimGrey&gt; @" .. tostring(getTime(true, "hh:mm:ssap")))
selectCurrentLine()
copy()
appendBuffer("UI.Tell")
if tostring(UI.CurrentComms) ~= "Tell" then
  enableTimer("TellFlash")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}You tell (\w+) '(.*)'$</string>
								<string>^\s{0,1}.{0,1}(\w+) tells you '(.+)'$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Who</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>immortals</name>
								<script>clearWindow("UI.Who")
UI.Who:disableAutoWrap()
UI.Who:setWrap(75)
UI.Who:echo("\n")
selectCurrentLine()
copy()
appendBuffer("UI.Who")
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^     \-\=Immortals\=\-$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>immortalsOnline</name>
								<script>selectCurrentLine()
copy()
appendBuffer("UI.Who")
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\[\s{0,3}\w+\s{0,3}\] (\&lt;wizi\&gt; ){0,1}(\&lt;incog\&gt; ){0,1}(\[AFK\] ){0,1}(\[OLC\] ){0,1}(\w+).+$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>characters</name>
								<script>UI.Who:echo("\n")
selectCurrentLine()
copy()
appendBuffer("UI.Who")
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^     \-\=Characters\=\-$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>charactersOnline</name>
								<script>selectCurrentLine()
copy()
appendBuffer("UI.Who")
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^( N|  )(\[(HCRP|\sRP\s|\s{4})\])\s.+$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>peopleOnline</name>
								<script>UI.Who:echo("\n")
selectCurrentLine()
copy()
appendBuffer("UI.Who")
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^People online right now\: (\d+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>extras</name>
								<script>UI.Who:echo("\n")
selectCurrentLine()
copy()
appendBuffer("UI.Who")
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Total hero levels gained so far\: \d+$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>expMod</name>
								<script>selectCurrentLine()
copy()
appendBuffer("UI.Who")
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Current Exp Mod\: \d+%$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ColorMenus</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>menuHeaderFooter</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[][][][&lt;" ..
    UI.theme.Color6 ..
    "&gt;]&lt;" ..
    UI.theme.Color1 ..
    "&gt;[&lt;" ..
    UI.theme.Color6 ..
    "&gt;]&lt;" ..
    UI.theme.Color1 ..
    "&gt;[&lt;" ..
    UI.theme.Color6 ..
    "&gt;]&lt;" ..
    UI.theme.Color1 ..
    "&gt;[&lt;" ..
    UI.theme.Color6 ..
    "&gt;][][][][][][][][][][][][][][][][][][][][][][][][][][&lt;" ..
    UI.theme.Color5 ..
    "&gt;]&lt;" ..
    UI.theme.Color6 ..
    "&gt;[&lt;" ..
    UI.theme.Color5 ..
    "&gt;]&lt;" ..
    UI.theme.Color6 ..
    "&gt;[&lt;" ..
    UI.theme.Color5 ..
    "&gt;]&lt;" ..
    UI.theme.Color6 ..
    "&gt;[&lt;" ..
    UI.theme.Color5 ..
    "&gt;]&lt;" ..
    UI.theme.Color6 ..
    "&gt;[&lt;" ..
    UI.theme.Color5 ..
    "&gt;][][][]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^[\[\]]{80}$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>menuBlanks</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;                                                                            &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{76}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>MenuEnd</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText("\nYour command:")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your command\:$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>menuTitle</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;                                &lt;" ..
    UI.theme.Color6 ..
    "&gt;-=&lt;" ..
    UI.theme.Color2 ..
    "&gt;X&lt;" ..
    UI.theme.Color6 ..
    "&gt;-&lt;" ..
    UI.theme.Color2 ..
    "&gt;A&lt;" ..
    UI.theme.Color6 ..
    "&gt;-&lt;" ..
    UI.theme.Color2 ..
    "&gt;O&lt;" ..
    UI.theme.Color6 ..
    "&gt;-&lt;" ..
    UI.theme.Color2 ..
    "&gt;S&lt;" ..
    UI.theme.Color6 ..
    "&gt;=-&lt;" ..
    UI.theme.Color6 ..
    "&gt;                                 &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]\n"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{32}\-\=X\-A\-O\-S\=\-\s{33}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>menuDikuLine2</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;                    Tom Madsen, and Katja Nyboe                             &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]\n"
  )
  cecho(
    "&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;                                                                            &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]\n"
  )
  cecho(
    "&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;        MudletUI by Reldi and Noax                                          &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]\n"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{20}Tom Madsen and Katja Nyboe\s{30}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>menuDikuLine1</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;    Diku created by Sebastian Hammer, Michael Seifert, Hanz Stirfeldt       &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]\n"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{4}Diku created by Sebastian Hammer, Michael Seifert, Hanz Stirfeldt\s{7}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>menuMerc</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;    Merc created by Furey, Hatchet, and Kahn                                &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]\n"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{4}Merc created by Furey, Hatchet and Kahn\s{33}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>menuFounded</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;    Xaos founded by Ragnar                                                  &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]\n"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{4}Xaos founded by Ragnar\s{50}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>menuLogin</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  &lt;" ..
    UI.theme.Color6 ..
    "&gt;Login&lt;" ..
    UI.theme.Color2 ..
    "&gt; as an existing player                                               &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]\n"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{2}Login as an existing player\s{47}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>menuCreate</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  &lt;" ..
    UI.theme.Color6 ..
    "&gt;Create&lt;" ..
    UI.theme.Color2 ..
    "&gt; a new player profile                                               &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]\n"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{2}Create a new player profile\s{47}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>menuQuick</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  &lt;" ..
    UI.theme.Color6 ..
    "&gt;Quick&lt;" ..
    UI.theme.Color2 ..
    "&gt; login a character                                                   &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]\n"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{2}Quick login a character\s{51}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>menuExit</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  &lt;" ..
    UI.theme.Color6 ..
    "&gt;Exit&lt;" ..
    UI.theme.Color2 ..
    "&gt; Xaos                                                                 &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]\n"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{2}Exit Xaos\s{65}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileWelcome</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  Welcome " ..
    tostring(matches[2]) ..
    tostring(matches[3]) ..
    "&lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]  Welcome (\w+)(\s+)\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileEmail</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  Email:  " ..
    tostring(matches[2]) ..
    tostring(matches[3]) ..
    "&lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]  Email\:  (\w+\@\w+\.\w+)(\s+)\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileHCRP</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  Your &lt;firebrick&gt;H&lt;red&gt;C&lt;blue&gt;R&lt;MidnightBlue&gt;P&lt;" ..
    UI.theme.Color2 ..
    "&gt; characters are:                                                 &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]  Your HCRP characters are\:\s+\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileHCRPHeaders</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;       Name             RP Points   Hours  Offiline XP                      &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{7}Name\s{13}RP Points\s{3}Hours\s{2}Offline XP\s{23}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileHCRPChar</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;       " ..
    matches[2] ..
    "&lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{7}(\w+\s+\d+\/\d+\s+\d+\s+\d+\s+)\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileRoster</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  Your regular character roster:                                            &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]  Your regular character roster\:\s+\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileRosterHeaders</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;        Name          Hrs   Name          Hrs   Name          Hrs           &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{8}Name\s+Hrs\s+Name\s+Hrs\s+Name\s+Hrs\s+\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileRosterChars</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;        " ..
    matches[2] ..
    matches[3] ..
    "&lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{8}(\w+\s+\d+\s+\w+\s+\d+\s+\w+\s+\d+)(\s+)\[\]$</string>
								<string>^\[\]\s{8}(\w+\s+\d+\s+\w+\s+\d+)(\s+)\[\]$</string>
								<string>^\[\]\s{8}(\w+\s+\d+)(\s+)\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileHours</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  Hours Played: " ..
    matches[2] ..
    "&lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]\s{2}Hours Played\: (\d+\s+)\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfilePlayView</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  (&lt;" ..
    UI.theme.Color6 ..
    "&gt;P&lt;" ..
    UI.theme.Color2 ..
    "&gt;)lay an existing character            (&lt;" ..
    UI.theme.Color6 ..
    "&gt;V&lt;" ..
    UI.theme.Color2 ..
    "&gt;)iew daily statistics           &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]  \(P\)lay an existing character\s{12}\(V\)iew daily statistics\s{11}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileCreate</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  (&lt;" ..
    UI.theme.Color6 ..
    "&gt;C&lt;" ..
    UI.theme.Color2 ..
    "&gt;)reate a new character                                                  &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]  \(C\)reate a new character\s{50}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileDelete</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  (&lt;" ..
    UI.theme.Color6 ..
    "&gt;D&lt;" ..
    UI.theme.Color2 ..
    "&gt;)elete a character from your roster                                     &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]  \(D\)elete a character from your roster\s{37}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileUpdate</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  (&lt;" ..
    UI.theme.Color6 ..
    "&gt;U&lt;" ..
    UI.theme.Color2 ..
    "&gt;)pdate contact address                                                  &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]  \(U\)pdate contact address\s{50}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>pfileExit</name>
							<script>deleteLine()
if UI.booted == true then
  cinsertText(
    "\n&lt;" ..
    UI.theme.Color1 ..
    "&gt;[]&lt;" ..
    UI.theme.Color2 ..
    "&gt;  (&lt;" ..
    UI.theme.Color6 ..
    "&gt;E&lt;" ..
    UI.theme.Color2 ..
    "&gt;)xit back to main menu                                                  &lt;" ..
    UI.theme.Color5 ..
    "&gt;[]"
  )
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[\]  \(E\)xit back to main menu\s{50}\[\]$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tactics</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>tactics</name>
							<script>UI.offense.Tactics = matches[2]
if tostring(UI.CurrentChar2) == "Offense" then
  UI.UpdateLabelOffense()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}Your current tactics:  (\w+(\sbrawler){0,1})$</string>
								<string>^\s{0,1}Your tactics are now\:\s\s(\w+(\sbrawler){0,1})</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>brawler on</name>
							<script>if string.find(UI.offense.Tactics, 'brawler') == false then
  UI.offense.Tactics = UI.offense.Tactics .. " brawler"
end
if tostring(UI.CurrentChar2) == "Offense" then
  UI.UpdateLabelOffense()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You will switch opponents as opportunities present themselves\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>brawler off</name>
							<script>if string.find(UI.offense.Tactics, 'brawler') == true then
  UI.offense.Tactics = string.gsub(UI.offense.Tactics, "brawler", "")
end
if tostring(UI.CurrentChar2) == "Offense" then
  UI.UpdateLabelOffense()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You will no longer switch opponents as opportunities present themselves\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Style</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>style</name>
							<script>UI.offense.Style = matches[2]
if tostring(UI.CurrentChar2) == "Offense" then
  UI.UpdateLabelOffense()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You are currently fighting in (.*) style\.$</string>
								<string>^Your fighting style is now (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Login and Logout</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>logout</name>
							<script>loggedin = false
disableTimer("StupidDataPull")
expandAlias("scripterOff")
disableTimer("qolFailSafe")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Alas\, all good things must come to an end\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>login</name>
							<script>loggedin = true
UI.equipment = {}
damagePool = damagePool or {}
dpsPool = dpsPool or {}
UI.party.Members = UI.party.Members or {}
ncom("Sorry about this ugly data pull, Ill fix it in the future")
enableTimer("StupidDataPull")
enableTimer("qolFailSafe")
expandAlias("UIForce")
gagmode = true
send("style", false)
send("auto", false)
send("emergency", false)
send("tactics", false)
send("bugout", false)
tempTimer(5, [[gagmode = false]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Welcome to Xaos MUD where anything is possible if you put your mind to it\!  $</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>reconnect</name>
							<script>loggedin = true
UI.equipment = {}
damagePool = damagePool or {}
dpsPool = dpsPool or {}
UI.party.Members = UI.party.Members or {}
ncom("Sorry about this ugly data pull, Ill fix it in the future")
enableTimer("StupidDataPull")
enableTimer("qolFailSafe")
expandAlias("UIForce")
gagmode = true
send("style", false)
send("auto", false)
send("emergency", false)
send("tactics", false)
send("bugout", false)
tempTimer(5, [[gagmode = false]])
tempTimer(5, [[rcom("Don\'t forget to reconfigure scripter and turn qolWithReldi hacks back on.")]])
tempTimer(5, [[feedManager("Don\'t forget to reconfigure scripter and turn qolWithReldi hacks back on.")]])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Reconnected character\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>jacked</name>
							<script>loggedin = false
disableTimer("StupidDataPull")
expandAlias("scripterOff")
disableTimer("qolFailSafe")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You\'ve just been character jacked\!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>killed</name>
							<script>loggedin = false
disableTimer("StupidDataPull")
expandAlias("scripterOff")
disableTimer("qolFailSafe")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As part of your death you are frozen\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>AffectsNew</name>
							<script>UI.affects = {}
affect = nil
if gagmode == true then
  deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>100</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}You are affected by the following:$</string>
								<string>^\s{0,1}You are not affected by anything.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>PermTopLine</name>
								<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = matches[3]
local stat = "&lt;" .. C2 .. "&gt;modifies&lt;" .. C1 .. "&gt; " .. matches[4]
local amount = "&lt;" .. C2 .. "&gt;by&lt;" .. C1 .. "&gt; " .. matches[5]
local timer = "&lt;" .. C2 .. "&gt;permanently"
if UI.affects[affect] == nil then
  UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(timer)}
else
  table.insert(
    UI.affects[affect], tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(timer)
  )
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>30</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(  misc| Skill| Spell)\:\s(.*)\s{1,17}modifies\s(.*)\sby\s(\-{0,1}\d+)\spermanently$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>PermExtraLines</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
local stat = "&lt;" .. C2 .. "&gt;modifies&lt;" .. C1 .. "&gt; " .. matches[2]
local amount = "&lt;" .. C2 .. "&gt;by&lt;" .. C1 .. "&gt; " .. matches[3]
local timer = "&lt;" .. C2 .. "&gt;permanently"
table.insert(
  UI.affects[affect], tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(timer)
)
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\s{26}modifies\s(.*)\sby\s(\-{0,1}\d+)\spermanently$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>TimerTopLine</name>
								<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = matches[3]
local stat = "&lt;" .. C2 .. "&gt;modifies&lt;" .. C1 .. "&gt; " .. matches[4]
local amount = "&lt;" .. C2 .. "&gt;by&lt;" .. C1 .. "&gt; " .. matches[5]
local timer = matches[6]
local formatedHours = rex.match(tostring(timer), [[(\d+)\shour(s){0,1}]])
local formatedMinutes = rex.match(tostring(timer), [[(\d+)\sminute(s){0,1}]])
local formatedSeconds = rex.match(tostring(timer), [[(\d+)\ssecond(s){0,1}]])
local formatedTimer = "&lt;" .. C2 .. "&gt;"
if tonumber(formatedHours) ~= nil then
  formatedTimer = formatedTimer .. formatedHours .. "h:"
end
if tonumber(formatedMinutes) ~= nil then
  formatedTimer = formatedTimer .. formatedMinutes .. "m:"
end
if tonumber(formatedSeconds) ~= nil then
  formatedTimer = formatedTimer .. formatedSeconds .. "s"
end
UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(formatedTimer)}
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>30</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(  misc| Skill| Spell)\:\s(.*)\s{1,17}modifies\s(.*)\sby\s(\-{0,1}\d+)\sfor\s(.*)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>TimerExtraLine</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
local stat = "&lt;" .. C2 .. "&gt;modifies&lt;" .. C1 .. "&gt; " .. matches[2]
local amount = "&lt;" .. C2 .. "&gt;by&lt;" .. C1 .. "&gt; " .. matches[3]
local timer = matches[4]
local formatedHours = rex.match(tostring(timer), [[(\d+)\shour(s){0,1}]])
local formatedMinutes = rex.match(tostring(timer), [[(\d+)\sminute(s){0,1}]])
local formatedSeconds = rex.match(tostring(timer), [[(\d+)\ssecond(s){0,1}]])
local formatedTimer = "&lt;" .. C2 .. "&gt;"
if tonumber(formatedHours) ~= nil then
  formatedTimer = formatedTimer .. formatedHours .. "h:"
end
if tonumber(formatedMinutes) ~= nil then
  formatedTimer = formatedTimer .. formatedMinutes .. "m:"
end
if tonumber(formatedSeconds) ~= nil then
  formatedTimer = formatedTimer .. formatedSeconds .. "s"
end
table.insert(
  UI.affects[affect], tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(formatedTimer)
)
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\s{26}modifies\s(.*)\sby\s(\-{0,1}\d+)\sfor\s(.*)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Exotic Formats</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList />
								<regexCodePropertyList />
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Wyrm Strength</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = "wyrm strength"
local stat = matches[3]
local amount = matches[4]
local timer = "&lt;" .. C2 .. "&gt;permanently"
UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(timer)}
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^ Spell: (.*) (adds occasiona)l (elemental punches) (permanently)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Irregular Warfare</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = "irregular warfare"
local stat = "chance to"
local amount = matches[3]
if tostring(amount) == "double cast" then
	amount = "double cast"
elseif tostring(amount) == "sneak attacks through defenses" then
	amount = "bypass a defense"
end
local timer = "&lt;" .. C2 .. "&gt;permanently"
UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(timer)}
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^ Skill\: irregular warfare you will (attempt to) (sneak attacks through defenses) (permanently)$</string>
										<string>^ Skill\: irregular warfare you will (attempt to) (double cast) (permanently)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Steel Veil</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = "steel veil       "
local stat = matches[3]
local amount = matches[4]
local timer = "&lt;" .. C2 .. "&gt;permanently"
UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(timer)}
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^Effect\:\s(.*)\s{1,17}will (activate veil) (on backstab) (permanently)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hero Recall</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = "hero recall      "
local stat = "hero recall"
local amount = "cooldown timer"
local timer = matches[3]
local formatedHours = rex.match(tostring(timer), [[(\d+)\shour(s){0,1}]])
local formatedMinutes = rex.match(tostring(timer), [[(\d+)\sminute(s){0,1}]])
local formatedSeconds = rex.match(tostring(timer), [[(\d+)\ssecond(s){0,1}]])
local formatedTimer = "&lt;" .. C2 .. "&gt;"
if tonumber(formatedHours) ~= nil then
  formatedTimer = formatedTimer .. formatedHours .. "h:"
end
if tonumber(formatedMinutes) ~= nil then
  formatedTimer = formatedTimer .. formatedMinutes .. "m:"
end
if tonumber(formatedSeconds) ~= nil then
  formatedTimer = formatedTimer .. formatedSeconds .. "s"
end
UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(formatedTimer)}
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\stimer\:\shrecall\s{11}modifies\s(.*)\sfor\s(.*)\.$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Phase</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = "phase            "
local stat = "gives phase"
local amount = "defense"
local timer = matches[2]
local formatedTimer = "&lt;" .. C2 .. "&gt;"
if tostring(timer) == "permanently" then
  formatedTimer = "&lt;" .. C2 .. "&gt;permanently"
else
  local formatedHours = rex.match(tostring(timer), [[(\d+)\shour(s){0,1}]])
  local formatedMinutes = rex.match(tostring(timer), [[(\d+)\sminute(s){0,1}]])
  local formatedSeconds = rex.match(tostring(timer), [[(\d+)\ssecond(s){0,1}]])
  if tonumber(formatedHours) ~= nil then
    formatedTimer = formatedTimer .. formatedHours .. "h:"
  end
  if tonumber(formatedMinutes) ~= nil then
    formatedTimer = formatedTimer .. formatedMinutes .. "m:"
  end
  if tonumber(formatedSeconds) ~= nil then
    formatedTimer = formatedTimer .. formatedSeconds .. "s"
  end
end
UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(formatedTimer)}
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\sSpell\:\sphase\s{13}adds phasing defense (.*)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Custom</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = "custom affect    "
local stat = "&lt;" .. C2 .. "&gt;modifies&lt;" .. C1 .. "&gt; " .. matches[2]
local amount = "&lt;" .. C2 .. "&gt;by&lt;" .. C1 .. "&gt; " .. matches[3]
local timer = "&lt;" .. C2 .. "&gt;permanently"
UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(timer)}
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^affect: custom affect     modifies (.*) by (.*) permanently$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Inspiration</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = "inspiration      "
local stat = "improves crafting quality"
local amount = "&lt;" .. C2 .. "&gt;by&lt;" .. C1 .. "&gt; " .. matches[2]
local timer = "&lt;" .. C2 .. "&gt;permanently"
UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(timer)}
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^ Spell\: inspiration       increases next crafting by (\d+) quality level\(s\) permanently$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Permanency</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = "permanency       "
local stat = "makes select"
local amount = "spells permanent"
local timer = "&lt;" .. C2 .. "&gt;permanently"
UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(timer)}
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^ Spell: permanency        makes select spells permanent permanently$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Detect Invis</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = "detect invis     "
local stat = "sight through"
local amount = "basic invis"
local timer = matches[2]
local formatedTimer = "&lt;" .. C2 .. "&gt;"
if tostring(timer) == "permanently" then
  formatedTimer = "&lt;" .. C2 .. "&gt;permanently"
else
  local formatedHours = rex.match(tostring(timer), [[(\d+)\shour(s){0,1}]])
  local formatedMinutes = rex.match(tostring(timer), [[(\d+)\sminute(s){0,1}]])
  local formatedSeconds = rex.match(tostring(timer), [[(\d+)\ssecond(s){0,1}]])
  if tonumber(formatedHours) ~= nil then
    formatedTimer = formatedTimer .. formatedHours .. "h:"
  end
  if tonumber(formatedMinutes) ~= nil then
    formatedTimer = formatedTimer .. formatedMinutes .. "m:"
  end
  if tonumber(formatedSeconds) ~= nil then
    formatedTimer = formatedTimer .. formatedSeconds .. "s"
  end
end
UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(formatedTimer)}
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^ Spell\: detect invis      adds sight through basic invisibility (.*)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Fly</name>
									<script>local C1 = UI.theme.Color2
local C2 = UI.theme.Color6
setTriggerStayOpen("PermTopLine", 0)
setTriggerStayOpen("TimerTopLine", 0)
affect = "fly               "
local stat = "grants"
local amount = "flight"
local timer = matches[2]
local formatedTimer = "&lt;" .. C2 .. "&gt;"
if tostring(timer) == "permanently" then
  formatedTimer = "&lt;" .. C2 .. "&gt;permanently"
else
  local formatedHours = rex.match(tostring(timer), [[(\d+)\shour(s){0,1}]])
  local formatedMinutes = rex.match(tostring(timer), [[(\d+)\sminute(s){0,1}]])
  local formatedSeconds = rex.match(tostring(timer), [[(\d+)\ssecond(s){0,1}]])
  if tonumber(formatedHours) ~= nil then
    formatedTimer = formatedTimer .. formatedHours .. "h:"
  end
  if tonumber(formatedMinutes) ~= nil then
    formatedTimer = formatedTimer .. formatedMinutes .. "m:"
  end
  if tonumber(formatedSeconds) ~= nil then
    formatedTimer = formatedTimer .. formatedSeconds .. "s"
  end
end
UI.affects[affect] = {tostring(stat) .. "," .. tostring(amount) .. "," .. tostring(formatedTimer)}
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^ Spell: fly               grants flight (.*)$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Effects</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>EffectsNew</name>
							<script>UI.boons = {}
UI.defenses.Dodge = 0
UI.defenses.UnarmedBlock = 0
UI.defenses.Parry = 0
UI.defenses.SecondaryParry = 0
UI.defenses.ShieldBlock = 0
UI.defenses.Phase = 0
UI.defenses.LowerLeftParry = 0
UI.defenses.LowerRightParry = 0
UI.defenses.TailParry = 0
UI.defenses.ShieldRecharge = 0
UI.defenses.ShieldCapacity = 0
UI.defenses.ShieldReduction = 0
UI.items.Artifacts = 0
UI.items.ArtifactsMax = "?"
if gagmode == true then
  deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>999</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>+------------------------------ Armor -------------------------------+</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>NoVars</name>
								<script>if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\sDamtype\s+AC\s+AC%\s+Damtype\s+AC\s+AC%\s+Damtype\s+AC\s+AC%\s+|$</string>
									<string>+---------------------------- Offenses ------------------------------+</string>
									<string>+----------------------------- Weapons ------------------------------+</string>
									<string>+------------------------------- Exp --------------------------------+</string>
									<string>+----------------------------- Defenses -----------------------------+</string>
									<string>+--------------------------------------------------------------------+</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>0</integer>
									<integer>0</integer>
									<integer>0</integer>
									<integer>0</integer>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Physical Res</name>
								<script>UI.defenses.ArmorClass = matches[2]
UI.defenses.ArmorPerc = matches[3]
--= matches[4]
--= matches[5]
--= matches[6]
--= matches[7]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Slash\s+-{0,1}(\d+)\s+(\d+)%\s+Bash\s+-{0,1}(\d+)\s+(\d+%)\s+Pierce\s+-{0,1}(\d+)\s+(\d+%)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>FireColdMental</name>
								<script>UI.defenses.Warding = matches[2]
UI.defenses.WardingPerc = matches[3]
--= matches[4]
--= matches[5]
--= matches[6]
--= matches[7]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Fire\s+-{0,1}(\d+)\s+(\d+)%\s+Cold\s+-{0,1}(\d+)\s+(\d+%)\s+Mental\s+-{0,1}(\d+)\s+(\d+%)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>MagicLightNegative</name>
								<script>--= matches[2]
--= matches[3]
--= matches[4]
--= matches[5]
--= matches[6]
--= matches[7]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Magic\s+-{0,1}(\d+)\s+(\d+%)\s+Light\s+-{0,1}(\d+)\s+(\d+%)\s+Negative\s+-{0,1}(\d+)\s+(\d+%)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>HolyUnholyLightning</name>
								<script>--= matches[2]
--= matches[3]
--= matches[4]
--= matches[5]
--= matches[6]
--= matches[7]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Holy\s+-{0,1}(\d+)\s+(\d+%)\s+Unholy\s+-{0,1}(\d+)\s+(\d+%)\s+Lightning\s+-{0,1}(\d+)\s+(\d+%)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>SoundAcidPoison</name>
								<script>--= matches[2]
--= matches[3]
--= matches[4]
--= matches[5]
--= matches[6]
--= matches[7]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Sound\s+-{0,1}(\d+)\s+(\d+%)\s+Acid\s+-{0,1}(\d+)\s+(\d+%)\s+Poison\s+-{0,1}(\d+)\s+(\d+%)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Diseases</name>
								<script>--= matches[2]
--= matches[3]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Disease\s+-{0,1}(\d+)\s+(\d+%)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Hitroll</name>
								<script>UI.offense.Hitroll = matches[2]
UI.offense.DefenseBreak = matches[3]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Hitroll:\s{0,3}(\d+)\s+for\s+(\d+)%\s+raw defense breaking\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>DamRoll</name>
								<script>UI.offense.Damroll = matches[2]
UI.offense.Damage = matches[3]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Damroll:\s{0,3}(\d+)\s+for\s+(\d+)%\s+damage\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Min Damage</name>
								<script>--= matches[2]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Damroll grants\s{0,1}(\d+)\s+minimum damage\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Crit Strike</name>
								<script>UI.offense.CritChance = matches[2]
UI.offense.CritDamage = matches[3]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Critical strike chance:\s{0,1}(\d+)\s+for\s+(\d+)%\s+damage\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Character Speed</name>
								<script>UI.offense.Speed = matches[2]
UI.offense.TotalSpeed = matches[3]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Character speed:\s{0,1}(\d+)\s+total speed is\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Character Damage</name>
								<script>UI.offense.CharacterDamage = matches[2]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Character damage:\s{0,1}(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Spell Damage</name>
								<script>UI.offense.SpellDamage = matches[2]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Spell damage:\s{0,1}(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Heal Modifier</name>
								<script>--= matches[2]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Character heal modifier:\s{0,1}(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Right Hand Damage</name>
								<script>--= matches[2]
--= matches[3]
--= matches[4]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+(Right Hand Damage)\:\s+Average:(\d+)\s+Min:\s+(\d+)\s+Max:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Right Hand Speed</name>
								<script>--= matches[2]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+(Right Hand Speed)\:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Left Hand Damage</name>
								<script>--= matches[2]
--= matches[3]
--= matches[4]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+(Left Hand Damage)\:\s+Average:(\d+)\s+Min:\s+(\d+)\s+Max:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Left Hand Speed</name>
								<script>--= matches[2]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+(Left Hand Speed)\:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unarmed Damage</name>
								<script>--= matches[2]
--= matches[3]
--= matches[4]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+(Unarmed Damage)\:\s{0,1}Average:(\d+)\s+Min:\s+(\d+)\s+Max:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unarmed Speed</name>
								<script>--= matches[2]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+(Unarmed Damage)\:\s{0,1}Average:(\d+)\s+Min:\s+(\d+)\s+Max:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ascend</name>
								<script>UI.character.xpMod = matches[2]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\sAscend based XP mod\: (\d+)\s{1,45}\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Dodge</name>
								<script>if matches[2] == "Base Dodge" then
  UI.defenses.BaseOrCombat = "Base"
  UI.defenses.Dodge = matches[3]
elseif matches[2] == "Combat Dodge" then
  UI.defenses.BaseOrCombat = "Combat"
  UI.defenses.Dodge = matches[3]
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+(Base Dodge)\:\s+(\d+)\s+\|$</string>
									<string>^\|\s+(Combat Dodge)\:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Primary Parry</name>
								<script>UI.defenses.Parry = matches[3]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+(Base Primary Parry)\:\s+(\d+)\s+\|$</string>
									<string>^\|\s+(Combat Primary Parry)\:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Secondary Parry</name>
								<script>UI.defenses.SecondaryParry = matches[3]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+(Base Secondary Parry)\:\s+(\d+)\s+\|$</string>
									<string>^\|\s+(Combat Secondary Parry)\:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unarmed Block</name>
								<script>UI.defenses.UnarmedBlock = matches[3]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+(Base Unarmed Block)\:\s+(\d+)\s+\|$</string>
									<string>^\|\s+(Combat Unarmed Block)\:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shield Block</name>
								<script>UI.defenses.ShieldBlock = matches[3]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+(Base Shield Block)\:\s+(\d+)\s+\|$</string>
									<string>^\|\s+(Combat Shield Block)\:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Phase</name>
								<script>UI.defenses.Phase = matches[4]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+((Base|Combat) Phase)\:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Damage Reduction</name>
								<script>UI.defenses.ShieldCapacity = matches[2]
UI.defenses.ShieldReduction = matches[3]
UI.defenses.ShieldRecharge = matches[4]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s+Total Capacity:\s+(\d+)\s+Reduction\:\s+(\d+)\s+Recharge Rate:\s+(\d+)\s+\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Opponent if Fighting</name>
								<script>--= matches[2]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>\|\sFighting\:\s(.*?)\s{29}\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Boons</name>
								<script>table.insert(UI.boons, matches[2])
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>You are benefitting from the (.*) boon.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Quality</name>
								<script>--= matches[2]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your maximum allowed quality is\: (\w+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>0</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Max Artis</name>
								<script>UI.items.Artifacts = matches[2]
UI.items.ArtifactsMax = matches[3]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Number of artifacts equipped\: (\d) \((\d+) max\)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Equipment</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>equipmentNew</name>
							<script>UI.equipmentCard = {}
UI.equipment.RingCount = 0
UI.equipment.NeckCount = 0
UI.equipment.WristCount = 0
UI.equipment.FloatCount = 0
UI.equipment.InstallCount = 0
for i = 1, 23 do
  UI.equipment[i] = "None"
end
if gagmode == true then
  deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>25</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}You are wearing:$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>finger</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
UI.equipment.RingCount = tonumber(UI.equipment.RingCount) + 1
if tonumber(UI.equipment.RingCount) == 1 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[1] = "Nothing"
  else
    UI.equipment[1] = wornObject
  end
elseif tonumber(UI.equipment.RingCount) == 2 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[2] = "Nothing"
  else
    UI.equipment[2] = wornObject
  end
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;worn on finger\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>neck</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
UI.equipment.NeckCount = tonumber(UI.equipment.NeckCount) + 1
if tonumber(UI.equipment.NeckCount) == 1 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[3] = "Nothing"
  else
    UI.equipment[3] = wornObject
  end
elseif tonumber(UI.equipment.NeckCount) == 2 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[4] = "Nothing"
  else
    UI.equipment[4] = wornObject
  end
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;worn on neck\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>torso</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[5] = "Nothing"
else
  UI.equipment[5] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;worn on torso\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>head</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Spiked",
    "&lt;span style=\"color: firebrick;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[6] = "Nothing"
else
  UI.equipment[6] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;worn on head\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>legs</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[7] = "Nothing"
else
  UI.equipment[7] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;worn on legs\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>feet</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[8] = "Nothing"
else
  UI.equipment[8] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;worn on feet\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>hands</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[9] = "Nothing"
else
  UI.equipment[9] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;worn on hands\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>body</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[10] = "Nothing"
else
  UI.equipment[10] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;worn about body\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>waist</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[11] = "Nothing"
else
  UI.equipment[11] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;worn around waist\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>wrist</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
UI.equipment.WristCount = tonumber(UI.equipment.WristCount) + 1
if tonumber(UI.equipment.WristCount) == 1 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[12] = "Nothing"
  else
    UI.equipment[12] = wornObject
  end
elseif tonumber(UI.equipment.WristCount) == 2 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[13] = "Nothing"
  else
    UI.equipment[13] = wornObject
  end
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;worn on wrist\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>rhand</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[14] = "Nothing"
else
  UI.equipment[14] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;held in right hand\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>lhand</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[15] = "Nothing"
else
  UI.equipment[15] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;held in left hand\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>wtail</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[16] = "Nothing"
else
  UI.equipment[16] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;wielded by tail\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>float</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
UI.equipment.FloatCount = tonumber(UI.equipment.FloatCount) + 1
if tonumber(UI.equipment.FloatCount) == 1 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[17] = "Nothing"
  else
    UI.equipment[17] = wornObject
  end
elseif tonumber(UI.equipment.FloatCount) == 2 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[21] = "Nothing"
  else
    UI.equipment[21] = wornObject
  end
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;floating nearby\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>tail</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[18] = "Nothing"
else
  UI.equipment[18] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;worn on tail\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>llhand</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[19] = "Nothing"
else
  UI.equipment[19] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;lower left hand\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>lrhand</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[20] = "Nothing"
else
  UI.equipment[20] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;lower right hand\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dualwield</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
if tostring(matches[2]) == "Nothing" then
  UI.equipment[14] = "Nothing"
else
  UI.equipment[14] = wornObject
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;held with both hands\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>install</name>
								<script>local wornObject =
  string.gsub(
    matches[3], "Artifact", "&lt;span style=\"color: red;\"&gt;Artifact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Glowing",
    "&lt;span style=\"color: yellow;\"&gt;Glowing&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Humming", "&lt;span style=\"color: white;\"&gt;Humming&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject,
    "Magic",
    "&lt;span style=\"color: purple;\"&gt;Magicfact&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Spiked", "&lt;span style=\"color: grey;\"&gt;Spiked&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Visored", "&lt;span style=\"color: grey;\"&gt;Visored&lt;span style=\"color: lightgrey;\"&gt;"
  )
local wornObject =
  string.gsub(
    wornObject, "Bound", "&lt;span style=\"color: teal;\"&gt;Bound&lt;span style=\"color: lightgrey;\"&gt;"
  )
UI.equipment.InstallCount = tonumber(UI.equipment.InstallCount) + 1
if tonumber(UI.equipment.InstallCount) == 1 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[24] = "Nothing"
  else
    UI.equipment[24] = wornObject
  end
elseif tonumber(UI.equipment.InstallCount) == 2 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[25] = "Nothing"
  else
    UI.equipment[25] = wornObject
  end
elseif tonumber(UI.equipment.InstallCount) == 3 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[26] = "Nothing"
  else
    UI.equipment[26] = wornObject
  end
elseif tonumber(UI.equipment.InstallCount) == 4 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[27] = "Nothing"
  else
    UI.equipment[27] = wornObject
  end
elseif tonumber(UI.equipment.InstallCount) == 5 then
  if tostring(matches[2]) == "Nothing" then
    UI.equipment[28] = "Nothing"
  else
    UI.equipment[28] = wornObject
  end
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,8}\&lt;installed on\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hero Empower</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>EmpowerNew</name>
							<script>UI.empowers = {}
if gagmode == true then
  deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>14</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}Available empowerments\:$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Empower</name>
								<script>if tonumber(#matches) == 12 then
  local empower1 = matches[4]
  local empower2 = matches[8]
  local empower3 = matches[12]
  UI.empowers[empower1] = ((tonumber(matches[2]) / 40) - 1) * tonumber(matches[3])
  UI.empowers[empower2] = ((tonumber(matches[6]) / 40) - 1) * tonumber(matches[7])
  UI.empowers[empower3] = ((tonumber(matches[10]) / 40) - 1) * tonumber(matches[11])
elseif tonumber(#matches) == 4 then
  local empower1 = matches[4]
  UI.empowers[empower1] = ((tonumber(matches[2]) / 40) - 1) * tonumber(matches[3])
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>(\d+)\s{0,4}(\-{0,1}\d+)\s{2}(hitpoints|saves|speed|warding|mana|hit roll|damage roll|armor class|regen hp|regen mana|necromantic casting|abjurational casting|alterational casting|conjurational casting|enchantment casting|divinitive casting|illusional casting|invocational casting|beguilery casting|religion casting|maladictive casting|resist fire|resist cold|resist lightning|resist mental|resist magic|resist poison|resist acid|resist holy|resist negative|resist unholy|resist disease|resist light|resist sound|resist blunt|resist slash|resist pierce|)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>key line</name>
								<script>if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Cost  Empower   $</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Inventory</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>InventoryNew</name>
							<script>UI.items.Inventory = {}
clearWindow("UI.ItemsList")
UI.ItemsList:resetAutoWrap()
if gagmode == true then
  deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>100</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}You are carrying\:$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>inventory lines</name>
								<script>if matches[2] == "Nothing" then
  selectString("Nothing.", 1)
  setBgColor(getBgColor())
  setFgColor(getFgColor())
  replace("You are carrying nothing.")
  selectCurrentLine()
  copy()
  appendBuffer("UI.ItemsList")
else
  selectCurrentLine()
  copy()
  appendBuffer("UI.ItemsList")
end
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s(\(\d+\)|\(\s\d\)|\s{4,5})\s(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \])\s(.*){0,1}$</string>
									<string>     (Nothing)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Score</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>scoreNew</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>ScoreLines</name>
								<script>if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}\|\-{68}\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>NameLevel</name>
								<script>UI.character.Affliction = "none"
UI.character.AfflictionTier = "none"
UI.character.AfflictionTime = 0
UI.name.Name = matches[2]
--= matches[3]
UI.name.Level = matches[4]
if matches[5] ~= nil then
  UI.name.PercToLevel = matches[6]
end
--= matches[7]
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>6</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|\s*Name\:\s*(\w+)\s+(\w+)\:\s{0,1}(\d+)\s{0,4}(\((\d+)\s{0,1}\%\)){0,1}\s{34,}\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sex Class Religion</name>
									<script>UI.character.Sex = matches[2]
UI.name.Class = matches[3]
UI.character.Religion = matches[4]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Sex:\s*(\w+)\s+Class:(.+)Religion:(.+)\s*\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Age Race Caste</name>
									<script>UI.character.Age = matches[2]
UI.name.Race = matches[3]
UI.character.Caste = matches[4]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Age:\s*(\d+)\s+Race:\s*(\w+|\w+\s\w+)\s*Caste:\s*(\w+)\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Weight Favor</name>
									<script>UI.character.Weight = matches[2]
UI.character.Favor = matches[4]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Weight:\s*(\d+)lbs(\s+Favour:\s*(\d+|-\d+)\s+|(\s*))\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Affliction</name>
									<script>if matches[2] ~= nil then
  UI.character.Affliction = matches[2]
  UI.character.AfflictionTier = matches[3]
  if matches[4] ~= nil then
    UI.character.AfflictionTime = matches[4]
  end
  if matches[5] ~= nil then
    UI.character.AfflictionTimeVar = matches[5]
  end
  if gagmode == true then
    deleteLine()
  end
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\| Affliction\: (.*)\/(.*) for (\d+) (\w+)\s+\|$</string>
										<string>^\| Affliction\: (.*)\/(.*) very recently\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>AttributesSatus</name>
								<script>if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>10</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|-{22} Attributes\/Status -{27}\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Str Health XTL</name>
									<script>UI.character.StrMax = matches[2]
UI.character.Str = matches[3]
--= matches[4]
--= matches[5]
--= matches[6]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s+Str:\s*(\d+)\/(\d+)\s+Health:\s*(\d+)\/(\d+)\s+XTL:\s*(\d+)%\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Int Mana Trains</name>
									<script>UI.character.IntMax = matches[2]
UI.character.Int = matches[3]
--= matches[4]
--= matches[5]
UI.character.Trains = matches[6]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s+Int:\s*(\d+)\/(\d+)\s+Mana:\s*(\d+)\/(\d+)\s+Trains:\s*(\d+)\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Dex Hitroll</name>
									<script>UI.character.DexMax = matches[2]
UI.character.Dex = matches[3]
--= matches[4]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s+Dex:\s*(\d+)\/(\d+)\s*Hitroll:\s*(\d+)\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Con Hero Points Damroll</name>
									<script>UI.character.ConMax = matches[2]
UI.character.Con = matches[3]
if tostring(matches[4]) == "                                  " then
  UI.character.HeroPoints = 0
else
  UI.character.HeroPoints = matches[4]
end
--= matches[5]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s+Con:\s*(\d+)\/(\d+)\s+Hero Points:\s*(\-{0,1}\d+)\s*Damroll:\s*(\d+)\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Speed HP Regen</name>
									<script>--= matches[2]
UI.defenses.HPRegen = matches[3]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s{0,20}Speed:\s{0,2}(\d+)\s{0,20}HP\sRegen:\s(\d+)\/[r][n][d]\s{0,20}\|\s{0,1}$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Hunger Thirst Mana Regen</name>
									<script>UI.character.HungerMax = matches[2]
UI.character.Hunger = matches[3]
UI.character.ThirstMax = matches[4]
UI.character.Thirst = matches[5]
UI.defenses.ManaRegen = matches[6]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Hunger:\s*(\d+)\/(\d+)\s*Thirst:\s*(\d+)\/(\d+)\s*Mana Regen:\s*(\d+)\/[r][n][d]\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Wis Moves Saves</name>
									<script>UI.character.WisMax = matches[2]
UI.character.Wis = matches[3]
--= matches[4]
--= matches[5]
UI.defenses.Saves = matches[6]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s+Wis:\s*(\d+)\/(\d+)\s+Moves:\s*(\d+)\/(\d+)\s*Saves:\s*-(\d+)\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Traits</name>
									<script>local traitsString = string.trim(matches[2])
local traitsTable = string.split(traitsString, " ")
UI.traits = traitsTable
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Traits:\s((\w+\s){1,10})\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Items</name>
								<script>if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>4</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|----------------------------- Items --------------------------------\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Items Eq Weight</name>
									<script>UI.items.Items = matches[2]
UI.items.ItemsMax = matches[3]
UI.items.eqWeight = matches[4]
UI.items.eqWeightMax = matches[5]
--= matches[5]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Items\:\s*(\d+)\/(\d+)\s*Eq weight\:\s*(\d+)\/(\d+)\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Gold Frags Dodge Factor</name>
									<script>UI.items.Gold = matches[2]
UI.items.Frags = matches[3]
UI.character.DodgeFactor = matches[4]
--= matches[5]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Gold:\s*(\d+)\s*Frags:\s*(\d+)\s*Dodge factor:\s*(\d+)%\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Silver EQ weight Spell Factor</name>
									<script>UI.items.Silver = matches[2]
UI.items.Souls = matches[3]
UI.character.SpellFactor = matches[4]
--= matches[5]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Silver:\s*(\d+)\s*Souls:\s*(\d+)\s*Spell factor:\s*(\d+)%\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Defenses</name>
								<script>if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>10</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|---------------------------- Defenses ------------------------------\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>DefTitles</name>
									<script>if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Damtype\s*AC\s*Res\s*Damtype\s*AC\s*Res\s*Damtype\s*AC\s*Res\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Slash Bash Pierce</name>
									<script>UI.defenses.SlashRes = matches[3]..matches[4]
UI.defenses.BashRes = matches[6]..matches[7]
UI.defenses.PierceRes = matches[9]..matches[10]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Slash\s*(\d+)%\s*(\s|[-])(\d+)%\s*Bash\s*(\d+)%\s*(\s|[-])(\d+)%\s*Pierce\s*(\d+)%\s*(\s|[-])(\d+)%\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Fire Cold Mental</name>
									<script>UI.defenses.FireRes = matches[3]..matches[4]
UI.defenses.ColdRes = matches[6]..matches[7]
UI.defenses.MentalRes = matches[9]..matches[10]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Fire\s*(\d+)%\s*(\s|[-])(\d+)%\s*Cold\s*(\d+)%\s*(\s|[-])(\d+)%\s*Mental\s*(\d+)%\s*(\s|[-])(\d+)%\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Magic Light Negative</name>
									<script>UI.defenses.MagicRes = matches[3]..matches[4]
UI.defenses.LightRes = matches[6]..matches[7]
UI.defenses.NegativeRes = matches[9]..matches[10]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Magic\s*(\d+)%\s*(\s|[-])(\d+)%\s*Light\s*(\d+)%\s*(\s|[-])(\d+)%\s*Negative\s*(\d+)%\s*(\s|[-])(\d+)%\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Holy Unholy Lightning</name>
									<script>UI.defenses.HolyRes = matches[3]..matches[4]
UI.defenses.UnholyRes = matches[6]..matches[7]
UI.defenses.LightningRes = matches[9]..matches[10]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Holy\s*(\d+)%\s*(\s|[-])(\d+)%\s*Unholy\s*(\d+)%\s*(\s|[-])(\d+)%\s*Lightning\s*(\d+)%\s*(\s|[-])(\d+)%\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Sound Acid Poison</name>
									<script>UI.defenses.SoundRes = matches[3]..matches[4]
UI.defenses.AcidRes = matches[6]..matches[7]
UI.defenses.PoisonRes = matches[9]..matches[10]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Sound\s*(\d+)%\s*(\s|[-])(\d+)%\s*Acid\s*(\d+)%\s*(\s|[-])(\d+)%\s*Poison\s*(\d+)%\s*(\s|[-])(\d+)%\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Disease</name>
									<script>UI.defenses.DiseaseRes = matches[3]..matches[4]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Disease\s*(\d+)%\s*(\s|[-])(\d+)%\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>SpellCasting</name>
								<script>if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>6</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\|--------------------- Spell Casting Ability ------------------------\|$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Base Necro Abjur Alter</name>
									<script>UI.casting.Base = matches[2]
UI.casting.Necro = matches[3]
UI.casting.Abjur = matches[4]
UI.casting.Alter = matches[5]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Base\s*(\d+)\s*Necro\s*(\d+)\s*Abjur\s*(\d+)\s*Alter\s*(\d+)\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Conju Encha Divin Illus</name>
									<script>UI.casting.Conju = matches[2]
UI.casting.Encha = matches[3]
UI.casting.Divin = matches[4]
UI.casting.Illus = matches[5]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Conju\s*(\d+)\s*Encha\s*(\d+)\s*Divin\s*(\d+)\s*Illus\s*(\d+)\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Invoc Begui Relig Malad</name>
									<script>UI.casting.Invoc = matches[2]
UI.casting.Begui = matches[3]
UI.casting.Relig = matches[4]
UI.casting.Malad = matches[5]
if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\|\s*Invoc\s*(\d+)\s*Begui\s*(\d+)\s*Relig\s*(\d+)\s*Malad\s*(\d+)\s+\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>blankCasting</name>
									<script>if gagmode == true then
  deleteLine()
end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>5</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>^\| {68}\|$</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>1</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Events</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>treasure loot</name>
							<script>local treasure = {[[coin of the defiler]], [[fragment of the fallen]], [[unaligned soul]], [[(Aftifact)]], [[piece of the Goddess]],
	[[pulsing piece of Chaos]]
}

local corpses = {[[corpse]], [[pile of dust]]}

local grabbedObj = matches[2]

local grabbedFrom = matches[3]

local isLoot = false

for k,v in pairs(corpses) do
	if rex.match(grabbedFrom, v) == ture then
		isLoot = true
		break

	end

end

if isLoot == true then
	for k,v in pairs(treasure) do
		if rex.match(grabbedObj, v) == true then
			local message = "You looted some Treasure"
			if tostring(message) ~= tostring(UI.feedlastmessage) then
				UI.feedlastmessage = message
				echo("UI.FeedList",message .. tostring(getTime(true,"hh:mm:ssap")))

			end

		end

	end

end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You get (.*) from (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>exp gained</name>
							<script>local exp = matches[2]
local timestamp = rex.match(tostring(getEpoch()), [[^(\d+)\.\d+$]])
local aDayOld = tonumber(timestamp) - 86400
if expPool == nil then
  expPool = {}
end
table.insert(expPool, exp .. "," .. timestamp)
for k,v in pairs(expPool) do
	local time = rex.match(tostring(v), [[^.*\,(.*)$]])
	if tonumber(time) &lt; tonumber(aDayOld) then
		table.remove(expPool, k)
	end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have gained (\d+) experience\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>ding gained</name>
							<script>feedManager("You gained a level!")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have reached enough experience to level\!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>DPS</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>reporting</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>dps</name>
								<script>local damage = matches[2]
local timestamp = rex.match(tostring(getEpoch()), [[^(\d+)\.\d+$]])
local aDayOld = tonumber(timestamp) - 86400
if dpsPool == nil then
  dpsPool = {}
end
table.insert(dpsPool, damage .. "," .. timestamp)
for k,v in pairs(dpsPool) do
	local time = rex.match(tostring(v), [[^.*\,(.*)$]])
	if tonumber(time) &lt; tonumber(aDayOld) then
		table.remove(dpsPool, k)
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#00ff00</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Your .*\. \((\d+) dam\)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>taken</name>
								<script>local damage = matches[2]
local timestamp = rex.match(tostring(getEpoch()), [[^(\d+)\.\d+$]])
local aDayOld = tonumber(timestamp) - 86400
if damagePool == nil then
  damagePool = {}
end
table.insert(damagePool, damage .. "," .. timestamp)
for k,v in pairs(damagePool) do
	local time = rex.match(tostring(v), [[^.*\,(.*)$]])
	if tonumber(time) &lt; tonumber(aDayOld) then
		table.remove(damagePool, k)
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^.+ your .+\. \((\d+) dam\)$</string>
									<string>^.+ you\. \((\d+) dam\)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Party</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Party leader</name>
							<script>UI.party.Members = {}
UI.party.Minions = 0
UI.party.MaxMinions = 0
local leader = matches[2]
UI.party.Leader = leader
tempTimer(1.5, function() UI.UpdateLabelParty() end)
if gagmode == true then
  deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>13</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}(.*) Party\:$</string>
								<string>^\s{0,1}(.*) party\:$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Minion count</name>
								<script>local minions = tonumber(matches[2])
local maxminions = tonumber(matches[3])
UI.party.Minions = minions
UI.party.MaxMinions = maxminions
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^Minion count is (\d+) of (\d+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Member</name>
								<script>local member = tostring(matches[5])
table.insert(UI.party.Members, member)
if gagmode == true then
  deleteLine()
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>10</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>\s{0,1}\d+\)\s{0,1}(\d{0,3}\s{0,1}\%|\-{4}\s{0,1})\s{0,1}(\d{0,3}\s{0,1}\%|\-{4}\s{0,1})\s{0,1}(\d{0,3}\s{0,1}\%|\-{4}\s{0,1})\s{0,1}(.*)</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>Prompt hit</name>
									<script></script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>return isXaosPrompt()</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>4</integer>
									</regexCodePropertyList>
								</Trigger>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Alone</name>
							<script>if gagmode then
  deleteLine()
end
UI.party.Members = {UI.name.Name}
UI.party.Leader = UI.name.Name
UI.party.Minions = 0
UI.party.MaxMinions = 0
UI.UpdateLabelParty()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}You are not currently in a party\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>scripter</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hunt</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>is here!</name>
							<script>local extras = tostring(UI.CurrentExtras)
local boolVar =  qolWithReldi.ShowAll
if string.lower(tostring(scripter.Party)) == "follow" then
  send("bclear",boolVar)
  scripter.On = false
  killTimer(nextHunt)
  disableTimer(hunt)
	killTimer(catchupLeave)
	killTimer(catchupLeave2)
	killTimer(catchupLeft)
  killTimer(dirTimer)
	killTimer(catchup)
elseif scripter.On and scripter.Kill then
  send("kill " .. scripter.Target, boolVar)
end
  if extras == "Scripter" then
    UI.UpdateLabelScripter()
  end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>is here!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>is direction from here</name>
							<script>local boolVar =  qolWithReldi.ShowAll
if scripter.On then
  scripter.dir = matches[3]
  --send(scripter.dir,boolVar)
  dirTimer = tempTimer(0.5, [[send(scripter.dir, ]].. tostring(boolVar)..[[)]])
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(\S+?) is (\S+?) from here</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Disarm</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>disarmed</name>
							<script>local boolVar =  qolWithReldi.ShowAll
--]].. tostring(boolVar)..[[)]]
ncom("Disarm detected, attempting to wield " .. scripter.Disarm)
feedManager("You were disarmed")
for i = 1, 5 do
  tempTimer(i, [[send("wield " .. scripter.Disarm,]].. tostring(boolVar)..[[)]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>.* DISARMS you and sends .* flying\!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>wield detection</name>
							<script>if tostring(matches[2]) ~= "Nothing" then
  local wornObject = matches[3]
  local bannedWords =
    {
      [[artifact]],
      [[glowing]],
      [[humming]],
      [[magic]],
      [[spiked]],
      [[visored]],
      [[bound]],
      [[a]],
      [[an]],
      [[the]],
    }
  local words = {}
  local remWords = {}
  for w in string.gmatch(wornObject, "%w+") do
    table.insert(words, string.lower(w))
  end
  for key, word in pairs(words) do
    for index, banWord in pairs(bannedWords) do
      if tostring(word) == tostring(banWord) then
        table.insert(remWords, 1, key)
      end
    end
  end
  for k, v in pairs(remWords) do
    table.remove(words, v)
  end
  if scripter.Disarm ~= tostring(words[1]) then
    scripter.Disarm = words[1]
    ncom("Scripters Automatic Disarm detection has been set the keyword &lt;white&gt;" .. words[1])
    feedManager("Scripters Disarm keyword has been set to &lt;white&gt;" .. words[1])
  end
end
if tostring(UI.CurrentExtras) == "Scripter" then
  UI.UpdateLabelScripter()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,8}\&lt;held in right hand\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
								<string>^\s{0,8}\&lt;held with both hands\&gt;\s{2}(\[tiny    \]|\[small   \]|\[medium  \]|\[large   \]|\[huge    \]|\[giant   \]|\[massive \]|\[immense \]|\[monsterous\]|\[colossal\]|\[titanic \]|Nothing)(.*){0,1}$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Autoaction</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>autoaction</name>
							<script>local action = matches[2]
scripter.Auto = action
if gagmode == true then
  deleteLine()
end
if tostring(UI.CurrentExtras) == "Scripter" then
  UI.UpdateLabelScripter()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^      Current Action: (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>syntax</name>
							<script>if gagmode == true then
  deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^                          \&lt;\'clear\' will turn this off\&gt; $</string>
								<string>^      Syntax\:  autoaction \&lt;command string\&gt;$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>autoaction arg</name>
							<script>local action = matches[2]
scripter.Auto = action
if tostring(UI.CurrentExtras) == "Scripter" then
  UI.UpdateLabelScripter()
end
disableTrigger("emergencyaction arg")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You will now automatically execute (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Skinning and Butcher</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>skinning and butcher</name>
							<script>local boolVar =  qolWithReldi.ShowAll
if scripter.on then
  if scripter.Butcher then
    send("butcher cor", boolVar)
  end
  if scripter.Skin then
    send("skin cor", boolVar)
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>has been defeated!!$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bugout</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>bugout</name>
							<script>local bugout = matches[2]
scripter.Bugout = bugout
if gagmode == true then
  deleteLine()
end
if tostring(UI.CurrentExtras) == "Scripter" then
  UI.UpdateLabelScripter()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^      Current Value\: (\d+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>bugout arg</name>
							<script>local bugout = matches[2]
scripter.Bugout = bugout
if tostring(UI.CurrentExtras) == "Scripter" then
  UI.UpdateLabelScripter()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Once you are below (\d+)% hp you will attempt to hero recall\.  This is a safety not a guarantee\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>syntax</name>
							<script>if gagmode == true then
  deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>                      &lt;0 turns this off&gt;</string>
								<string>      Syntax:  bugout &lt;%hp you recall once below&gt;</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>buggedout</name>
							<script>expandAlias("scripterOff")
ncom("Bugout detected")
feedManager("You buggedout")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Bugout inputted\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Emergency</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>emergencyaction</name>
							<script>local action = matches[2]
scripter.EmergencyAction = action
if gagmode == true then
  deleteLine()
end
if tostring(UI.CurrentExtras) == "Scripter" then
  UI.UpdateLabelScripter()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^      Current Emergency Action\: (.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>emergencytrigger</name>
							<script>local trigger = matches[2]
scripter.EmergencyTrigger = trigger
if gagmode == true then
  deleteLine()
end
if tostring(UI.CurrentExtras) == "Scripter" then
  UI.UpdateLabelScripter()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^      Current Emergency Threshold\: (\d+)%$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>syntax</name>
							<script>if gagmode == true then
  deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>      Syntax:  emergencyaction &lt;command string&gt;</string>
								<string>                               &lt;'clear' will remove your action and turn this off&gt;</string>
								<string>                               &lt;'trigger' followed by a number will trigger when this happens&gt;</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>emergencyaction arg</name>
							<script>local action = matches[2]
scripter.EmergencyAction = action
if tostring(UI.CurrentExtras) == "Scripter" then
  UI.UpdateLabelScripter()
end
disableTrigger("emergencyaction arg")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You will now automatically execute (.*) when below (\d+)% hp\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>emergencytrigger arg</name>
							<script>local trigger = matches[2]
scripter.EmergencyTrigger = trigger
if tostring(UI.CurrentExtras) == "Scripter" then
  UI.UpdateLabelScripter()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Emergencyaction set to happen below (\d+)% hp\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wimpy</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>wimpy arg</name>
							<script>local wimpy = matches[2]
scripter.Wimpy = wimpy
if tostring(UI.CurrentExtras) == "Scripter" then
  UI.UpdateLabelScripter()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have opted to flee when your hit points are (\d+)% or less of total\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>wimpy 0</name>
							<script>local wimpy = 0
scripter.Wimpy = wimpy
if tostring(UI.CurrentExtras) == "Scripter" then
  UI.UpdateLabelScripter()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have opted to never auto-flee\, manually only\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>fled</name>
							<script>feedManager("Your fled combat")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have fled from combat\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Party</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>party request</name>
							<script>local boolVar =  qolWithReldi.ShowAll
local pc = matches[2]
if scripter.Party == "lead"  then
  send("party invite " .. pc, boolVar)
  feedManager("You invited " .. pc .. " to your party")
end

if scripter.Party == "open"  then
  send("party form", boolVar)
  send("party invite " .. pc, boolVar)
  feedManager("You invited " .. pc .. " to your party")
  scripter.Party = "lead"
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}(\w+) has requested to join your party\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>party offer</name>
							<script>local boolVar =  qolWithReldi.ShowAll
local pc = matches[2]
if scripter.Party == "open" then
  send("party join " .. pc, boolVar)
  feedManager(pc .. " has invited you to their party")
  scripter.Party = "follow"
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}(\w+) has invited you to join the party\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>party follow</name>
							<script>local boolVar =  qolWithReldi.ShowAll
local pc = matches[2]
if scripter.Party == "lead" then
  send("party invite " .. pc, boolVar)
  feedManager("You invited " .. pc .. " to your party")
end

if scripter.Party == "open"  then
  send("party form")
  send("party invite " .. pc, BoolVar)
  feedManager("You invited " .. pc .. " to your party")
  scripter.Party = "lead"
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}(\w+) now follows you\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>party beckon</name>
							<script>local boolVar =  qolWithReldi.ShowAll
local pc = matches[2]
if scripter.Party == "open" then
  send("follow " .. pc, boolVar)
  feedManager(pc .. " has asked you to follow")
  scripter.Party = "follow"
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}(\w+) beckons you to follow.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Combat</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Combat false</name>
							<script>combat = false
enableTimer("hunt")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>has been defeated!!</string>
								<string>You blink out of existence!</string>
								<string>You hit the ground!</string>
								<string>You backflip from combat!</string>
								<string>You have fled from combat</string>
								<string>has fled!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Combat true</name>
							<script>combat = true
disableTimer("hunt")
killTimer("nextHunt")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> is in awful condition</string>
								<string>has some big nasty wounds and scratches</string>
								<string>has quite a few wounds </string>
								<string>is in excellent condition </string>
								<string>looks pretty hurt</string>
								<string>has some small wounds and bruises </string>
								<string>No way!  You are still fighting!</string>
								<string>You are still in combat!</string>
								<string>You are too busy fighting!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Catchup</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>catchup</name>
							<script>local boolVar =  qolWithReldi.ShowAll
local leaver = matches[2]
if string.lower(leaver) == string.lower(scripter.Leader) then
	scripter.dir = matches[4]
	catchupLeave2 = tempTimer(tonumber(scripter.Rate-1.5), [[send(scripter.dir,]].. tostring(boolVar)..[[)]])
	catchupLeave = tempTimer(scripter.Rate,[[expandAlias("catchup",false)]])
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\s{0,1}(\w+)\s(leaves|swims|crawls|sneaks|flies)\s(north|south|east|west|up|down)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>arrival</name>
							<script>local arriver = matches[2]
if string.lower(arriver) == string.lower(scripter.Leader) then
	if scripter.Party == "follow" then
		killTimer(catchupLeave)
		killTimer(catchupLeave2)
		killTimer(catchUpLeft)
		killTimer(catchup)
    killTimer(dirTimer)
    killTimer(nextHunt)
    disableTimer(hunt)
    scripter.On = false
    if tostring(UI.CurrentExtras) == "Scripter" then
      UI.UpdateLabelScripter()
    end
	end
end </script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(\w+)\s(arrives|swims|crawls|sneaks|flies)\sfrom\sthe\s(north|south|east|west|up|down)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>follow leader</name>
							<script>local party = string.lower(tostring(scripter.Party))
local leader = tostring(matches[2])
if party == "follow" then
  scripter.Leader = leader
	killTimer(catchupLeave)
	killTimer(catchupLeave2)
	killTimer(catchupLeft)
	killTimer(catchup)
  killTimer(dirTimer)
  killTimer(nextHunt)
  disableTimer(hunt)
  scripter.On = false
	if scripter.Kill then
		scripter.Kill = false
	end
  if tostring(UI.CurrentExtras) == "Scripter" then
    UI.UpdateLabelScripter()
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#00ff00</mFgColor>
							<mBgColor>#000000</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You follow (.{0,100})\.$</string>
								<string>You now follow (.{0,100})\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>caught</name>
							<script>if string.lower(matches[5])==string.lower(scripter.Leader) then
	send("bclear",false)
	killTimer(catchupLeave)
	killTimer(catchupLeave2)
	killTimer(catchupLeft)
  killTimer(dirTimer)
	killTimer(catchup)
  killTimet(dirTimer)
  disableTimer(hunt)
  killTimer(nextHunt)
  scripter.On = false

  if tostring(UI.CurrentExtras) == "Scripter" then
    UI.UpdateLabelScripter()
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\[(E|M|H|S)\]\s+\[(.*)\](\s\(.*\)|)\s+(.*)\sis\shere(.*)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>left behind</name>
							<script>local boolVar =  qolWithReldi.ShowAll
local person = tostring(matches[2])
killTimer(catchupLeave2)
if scripter.Party == "follow" then
  if scripter.Leader == person then
    send(scripter.dir,boolVar)
    killTimer(catchupLeave)
    catchupLeft = tempTimer(1, [[expandAlias("catchup", false)]])
  end
  if tostring(UI.CurrentExtras) == "Scripter" then
    UI.UpdateLabelScripter()
  end
 end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You try to follow (.+) but they are moving too quickly\.$</string>
								<string>You try to follow, but (.+) is moving too quickly\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Prompt Script</name>
					<script>-- Any code that should happen on a new prompt line goes in here to reduce essesive triggers.
--update guages with prompt data
UI.UpdateGuages()
--trigger chain closures
setTriggerStayOpen("EffectsNew", 0)
setTriggerStayOpen("NameLevel", 0)
setTriggerStayOpen("AttributesSatus", 0)
setTriggerStayOpen("Items", 0)
setTriggerStayOpen("Defenses", 0)
setTriggerStayOpen("SpellCasting", 0)
setTriggerStayOpen("AffectsNew", 0)
setTriggerStayOpen("InventoryNew", 0)
setTriggerStayOpen("EmpowerNew", 0)
--feed events based on HP
if tonumber(xPrompt.hp) &lt;= tonumber(scripter.EmergencyTrigger) then
  feedManager("You HP is below Emergency Trigger levels")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isXaosPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Specific Loot</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Glowing Humming Loot!</name>
				<script>if corpsedigging then
send("get '" .. fixstring(matches[3]) .. "' cor")
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\[(.*)\] \(Glowing\) \(Humming\) (?:a |an |the )(.*) (?:of)</string>
					<string>\[(.*)\] \(Humming\) (?:a |an |the )(.*) (?:of)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Torn Weave Robe</name>
				<script>if corpsedigging then
--send("get '" .. fixstring(matches[3]) .. "' cor")
send("get torn cor;put torn back")
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>[large   ] a torn weave robe</string>
					<string>[medium  ] a torn weave robe</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>echo start look in corpse</name>
				<script>
--A Sorcerer's robe 
if string.trim(matches[2]) ~= "A surplus backpack" then
corpsedigging=true
debugwrite("--digging")
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>(.*) holds:</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Look in corpse</name>
				<script>send("l i corpse")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>has been defeated!!</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Gains</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Spells Start</name>
				<script>gainmode = "spells"</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Spell gains:</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>New trigger</name>
				<script>gainmode="uncategorized"</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>-------------------------------------- Uncategorized skills --------------------------------------</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Prompt reset</name>
				<script>gainmode=""</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return isXaosPrompt()</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>All</name>
				<script>
if gainmode=="spells" then
  for i=2,12,3 do
    --echo(string.trim(matches[i]))
    send("gain " .. string.trim(matches[i]))
  end
  
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>([^0-9]+)([0-9]+)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Archive, for future use</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Data</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>counting</name>
					<script>enemyCount = enemyCount + 1</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CountUp</name>
						<script>enemyCount = enemyCount or 0
enemyCount = enemyCount + 1


debugc("EnemyCount iterated, currently at "..enemyCount)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>\[\s+\w+\s\w+\s+\] </string>
							<string>\[\s+\w+\s+\] </string>
							<string>\[\s+\w+\s\w+\s+\w+\s\] </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CountDown</name>
						<script>enemyCount = enemyCount or 0
enemyCount = enemyCount -1


debugc("EnemyCount iterated, currently at "..enemyCount)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>has been defeated</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Count Reset</name>
						<script>enemyCount = 0


debugc("EnemyCount iterated, currently at "..enemyCount)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\[Exits\: \w+ \] </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>level collection</name>
				<script>

--if leveltotals[xaos.Level] == nil then
--  leveltotals[xaos.Level] = 0
--else
--  leveltotals[xaos.Level] = leveltotals[xaos.Level] + 1
--end

--local currentmax = tonumber(xaos.Level)*2
--if (tonumber(leveltotals[xaos.Level]) &gt;= tonumber(currentmax)) then
--  cecho("data","[ Alert ] You gained a level! - " .. xaos.Level .. " - " .. xaos.LevelPercent .."\n")
--end
expandAlias("scoreeat")
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You gained a level!</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Highest damage collection</name>
				<script>--echo(tonumber(matches[2]))
if highestdam == nil then
  highestdam = tonumber(matches[2])
elseif tonumber(matches[2]) &gt; tonumber(highestdam) then
  highestdam = tonumber(matches[2])
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Your .*\. \((\d+) dam\)$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Temporary</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Scrollspam</name>
					<script>if scrollSpam then
  send("buy giant;rec giant")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are already mighty as a titan!</string>
						<string>You mispronounce a syllable.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Fcuking wizi imms</name>
				<script>


captureOOC("&lt;cadet_blue&gt;","OOC","&lt;gray&gt;","Wizi Imm", "&lt;cadet_blue&gt;", matches[2])


if gagging then
	deleteLine()
end
--createChatConsole()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>An immortal oocs '(.+)'$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Buffs</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mentalist</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Combat Ease</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>divided will tracking</name>
							<script>divided = true

autoMode = "mentalist debuff"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have divided the will</string>
								<string>will appears to already be divided.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Reset on death</name>
							<script>divided = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>has been defeated</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Critical</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Third Eye False</name>
							<script>buffThirdEye = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your third eye closes.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Third Eye True</name>
							<script>buffThirdEye = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are already under that power.</string>
								<string>The third eye opens and your sight extends!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Thief</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Warrior stuff</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Warcry true</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You yell out a glorious warcry!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Determination on</name>
						<script>determ = true
determValue = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You will absorb damage as long as you have (\d+) mana or more.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Determination false</name>
						<script>determ = false
determValue = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Determination turned off.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You are centered</name>
						<script>statusCenter = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your senses sharpen and time slows.</string>
							<string>You are as focused as you can be.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Not centered</name>
						<script>statusCenter = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lose your focus.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>Xaos</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
			<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>Full Update</name>
				<script>updatestats()
copytoprofile()</script>
				<command></command>
				<packageName></packageName>
				<time>00:05:00.000</time>
			</Timer>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>xaos-ui-0120</name>
				<script></script>
				<command></command>
				<packageName>xaos-ui-0120</packageName>
				<time>00:00:00.000</time>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>xaos-ui-0120</name>
					<script></script>
					<command></command>
					<packageName>xaos-ui-0120</packageName>
					<time>00:00:00.000</time>
					<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
						<name>Combat_timer</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.000</time>
						<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
							<name>disarm check</name>
							<script>
wielded = wielded or sword
if statusDisarm==true then
	send("wield "..wielded)
end
</script>
							<command></command>
							<packageName></packageName>
							<time>00:00:03.000</time>
						</Timer>
						<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
							<name>Specialized</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<time>00:00:00.000</time>
							<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
								<name>Utility</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<time>00:00:00.000</time>
								<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
									<name>healing Util</name>
									<script>
if auto_hunt and autoHeal then
  if (current_health &lt; 90 and not combat) then
    send("bclear;"..autoHealCommand)
  end
end
inputAttack = inputAttack or nil
if (current_health &lt; autoHealThreshold and autoAction ~= "c heal" and autoHeal) then
  send("auto "..autoHealCommand)
	autoAction = autoHealCommand
  debugc("Evaluated and found that healing is needed. Switching to auto heal")
	autoMode = "auto heal"
end
if (current_health &gt; 85 and autoAction == autoHealCommand and autoHeal and autoMode == "auto heal") then
  send("auto " .. inputAttack)
	autoMode = "normal"
  debugc("Evaluated and found I am healed. Switching to an attack")
end</script>
									<command></command>
									<packageName></packageName>
									<time>00:00:03.000</time>
								</Timer>
							</TimerGroup>
							<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
								<name>pledges</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<time>00:00:00.000</time>
								<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
									<name>pledges</name>
									<script>
if autoRenovi and renoviAvailable and tonumber(current_mana)&lt;tonumber(renoviThreshold) then
	send("cast renovi")
end</script>
									<command></command>
									<packageName></packageName>
									<time>00:00:03.000</time>
								</Timer>
								<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
									<name>Prosel</name>
									<script>if current_health &lt; 50 then
	send("cast prosel")
end</script>
									<command></command>
									<packageName></packageName>
									<time>00:00:03.000</time>
								</Timer>
							</TimerGroup>
						</TimerGroup>
					</TimerGroup>
					<TimerGroup isActive="no" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
						<name>Ilkin Spam</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<time>00:00:08.000</time>
						<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
							<name>Ilkin spam</name>
							<script>send("cast harmony Mmmmm")</script>
							<command></command>
							<packageName></packageName>
							<time>00:00:08.000</time>
						</Timer>
					</TimerGroup>
				</TimerGroup>
			</TimerGroup>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>Enchanting Extras</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>DE Boot</name>
					<script>send("disenchant " .. disenchantTarget)
--send("disenchant charged axe")
--send("disenchant static blade")</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:05.200</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Check Skills</name>
					<script>send("skills")</script>
					<command></command>
					<packageName></packageName>
					<time>00:05:00.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Make Master Stab</name>
					<script>send("make new master ench;show;pro;put all.master cloak")</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:15.000</time>
				</Timer>
			</TimerGroup>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>auto_hunt</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>hunt listener</name>
					<script>  --if not statusHunting then
  
    if auto_hunt then 
  
  			expandAlias("auto_hunt") 
  
  	end
  	
  	debugc("[ Debug ] Hunt listener is firing, auto_hunt status is "..tostring(auto_hunt).."\n")
  	
  	if obsessionMode then
  		hunting = false
  	end
  
  --end
  

	
	
</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:04.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>leader listener</name>
					<script>  if not hunting then
  
    if auto_hunt then 
  
  			expandAlias("auto_hunt") 
  
  	end
  	
  	debugc("[ Debug ] Hunt listener is firing, auto_hunt status is "..tostring(auto_hunt).."\n")
  	
  
  end
  

	
	
</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:02.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>scan listener</name>
					<script>  
  if auto_hunt and not targetFound then 

			expandAlias("auto_hunt") 

	end
	
	debugc("[ Debug ] Hunt listener is firing, auto_hunt status is "..tostring(auto_hunt).."\n")
	
	if obsessionMode then
		--hunting = false
	end

	
	
</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Combat Reset  Timer</name>
					<script>--Fail safe which resets combat if no combat has been had in that timeframe.


if auto_hunt and (getEpoch()-lastcombattime) &gt; 10 and combat then
  combat=false
  hunting=false
  targetFound=false
  send("scan")
  echo("combat reset")
end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:10.000</time>
				</Timer>
			</TimerGroup>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>QOL</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:01:06.000</time>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>drinkTimer</name>
					<script>
if xaos.config.drinkMode=="soup" then
	send("drink soup")
elseif xaos.config.drinkMode=="creation" then
	send("cast create food;get all.mush;eat mush;eat mush;eat mush;eat mush")
	send("cast create spring;drink;drink;drink;drink")
elseif xaos.config.drinkMode == "butchery" then
	send("but cor;get all.meat;eat meat;eat meat;eat meat;eat meat;eat meat;eat meat;drop all.meat")
	send("drink "..xaos.config.customDrink)
elseif xaos.config.drinkMode == "corpse" then
	send("get cor;eat cor")
	send("drink "..xaos.config.customDrink)
end
</script>
					<command></command>
					<packageName></packageName>
					<time>00:01:00.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Go away silver</name>
					<script>send("drop 10000 silver")</script>
					<command></command>
					<packageName></packageName>
					<time>00:10:00.000</time>
				</Timer>
			</TimerGroup>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>XUI</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>XPRate</name>
					<script>table.insert(xpcollector,{time=getTime(true,"HH.mm"),xp=xpCollection1})
table.insert(killcollector,{time=getTime(true,"HH.mm"),kills=killCount})


if (xpCollection1) &gt; topXPCollection then
	topXPCollection = (xpCollection1)
end

if (killCount) &gt; topKillCollection then
	topKillCollection = (killCount)
end

xpCollection1 = 0
killCount = 0

displaytimespan = displaytimespan or 5

updateKillbars(displaytimespan)
updateXPbars(displaytimespan)





</script>
					<command></command>
					<packageName></packageName>
					<time>00:01:00.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Update Combat</name>
					<script>clearWindow("CombatList")


cecho("CombatList",damageDisplay(TotalCalc))

</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Party Timer</name>
					<script>

local lbltext = "" --"Party&lt;br/&gt;"
local lbltext2 = ""
local maxsize = 6

local lblentries = {}
table.insert(lblentries,"")
table.insert(lblentries,"")

local index = 1
for k,v in pairs(xaos.party.members) do
  if k&gt;maxsize then
    index=2
  end

  local lblhp = "   " .. string.trim(tostring(v.hp))
  lblhp = string.sub(lblhp,string.len(lblhp)-2,string.len(lblhp))
  lblhp = string.gsub(lblhp," ","&amp;nbsp;")
  
  local tmplbl = string.sub(v.name.."   ",1,4) .. "   " .. lblhp 
  tmplbl = string.gsub(tmplbl," ","&amp;nbsp;")
  --tmplbl = tmplbl .. "&lt;br/&gt;"
  tmplbl = tmplbl .. "&lt;br/&gt;"
  
  lblentries[index] = lblentries[index] .. tmplbl
end
for k=1,5 do
  for j=1,2 do
    lblentries[j] = lblentries[j] .. "&lt;br/&gt;"
  end
end
partyDisplay:echo(lblentries[1])
partyDisplay2:echo(lblentries[2])</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.500</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>User Timer</name>
					<script>

local lbltext = "&lt;div style='white-space: pre-wrap;padding:5px;'&gt;"
lbltext = lbltext .. xaos.charactername .. "&lt;br/&gt;&lt;br/&gt;"
lbltext = lbltext .."Level    : " .. xaos.Level .. " (" .. xaos.LevelPercent .. "%)" .. "&lt;br/&gt;"

lbltext = lbltext .."Tactics  : " .. tostring(xaos.tactics) .. "&lt;br/&gt;"
lbltext = lbltext .."Style    : " .. tostring(xaos.fightingstyle) .. "&lt;br/&gt;"

lbltext = lbltext .. "&lt;/div&gt;"
userDisplay:echo(lbltext)</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.500</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Party Grab</name>
					<script>partystatusgrab=true
send("party",false)
--deleteLine()</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:05.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Quest Update</name>
					<script>local function clearquestwindows()
  clearWindow("queststatus")
  clearWindow("queststatuswin")
end
local function writequestwindows(text)
  cecho("queststatus",text)
  cecho("queststatuswin",text)
end
clearquestwindows()

writequestwindows("Current Quests: \n")

local remquest

if questfiltertype == "qm" then
  for qk,qv in pairs(xaos.quests) do 
    if qv.qm == questfiltername then
      writequestwindows("\n&lt;medium_turquoise&gt;" .. qv.name .. " - " .. qv.qm .. "\n")
  
      for ok,ov in pairs(qv.objectives) do
        writequestwindows(" (" .. ov.current .. "/" .. ov.max .. ") " .. ov.name .. "\n")
      end
    end
  end 
elseif questfiltertype == "q" then
  for qk,qv in pairs(xaos.quests) do 
    if qv.name == questfiltername then
      writequestwindows("\n&lt;medium_turquoise&gt;" .. qv.name .. " - " .. qv.qm .. "\n")
  
      for ok,ov in pairs(qv.objectives) do
        writequestwindows(" (" .. ov.current .. "/" .. ov.max .. ") " .. ov.name .. "\n")
      end
    end
  end 
else
  for qk=table.size(xaos.quests),1,-1 do
  --for qk,qv in pairs(xaos.quests) do 
    local qv=xaos.quests[qk]
    writequestwindows("\n&lt;medium_turquoise&gt;" .. qv.name .. " - " .. qv.qm .. "\n")
  
    if xaos.autoquest.autoquest_currentquest ~= "" and qv.name == xaos.autoquest.autoquest_currentquest then
      remquest = qv
    end
  
    for ok,ov in pairs(qv.objectives) do
      writequestwindows(" (" .. ov.current .. "/" .. ov.max .. ") " .. ov.name .. "\n")
    end
  end
end

if remquest ~= nil then

  writequestwindows("\nAutoQuest:\n")

  writequestwindows("\n&lt;medium_turquoise&gt;" .. remquest.name .. " - " .. remquest.qm .. "\n")
    
  for ok,ov in pairs(remquest.objectives) do
    writequestwindows(" (" .. ov.current .. "/" .. ov.max .. ") " .. ov.name .. "\n")
  end
      
end





</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Update Score</name>
					<script>clearWindow("ScoreList")

cecho("ScoreList","\n&lt;white&gt;Fighting\n")
cecho("ScoreList","Tactics             : " .. tostring(xaos.tactics) .. "\n")
cecho("ScoreList","Style               : " .. tostring(xaos.fightingstyle) .. "\n")
cecho("ScoreList","\n&lt;white&gt;Level\n")
cecho("ScoreList","Level               : " .. tostring(xaos.Level) .. "\n")
cecho("ScoreList","Level %             : " .. tostring(xaos.LevelPercent) .. "\n")
--cecho("ScoreList","Level Dings         : " .. tostring(leveltotals[currentLevel]) .. "\n")
--cecho("ScoreList","Ratio               : " .. tostring(xaos.LevelPercent / leveltotals[currentLevel]) .. "\n")

--local asc = levelratio[(xaos.Level%100)]
--local curpercent = (tonumber(xaos.LevelPercent)/100)
--local ratiomax = levelratio[(xaos.Level%100)]+((levelratio[(xaos.Level%100)+1]-levelratio[(xaos.Level%100)])*(tonumber(xaos.LevelPercent)/100))

--cecho("ScoreList","Ascend %            : " .. tostring(string.format("%2.2f",100*(levelratio[(xaos.Level%100)]+((levelratio[(xaos.Level%100)+1]-levelratio[(xaos.Level%100)])*(tonumber(xaos.LevelPercent)/100))))) .. "\n")
cecho("ScoreList","Ascend %            : " .. tostring(string.format("%2.2f",calcAscendPercent(xaos.Level,xaos.LevelPercent))) .. "\n")
--cecho("ScoreList","Ascend %            : " .. tostring(ratiomax) .. "\n")
cecho("ScoreList","\n&lt;white&gt;Score\n")
cecho("ScoreList","Fragments           : " .. tostring(xaos.currency.frags) .. "\n")

--cecho("ScoreList",damageDisplay(TotalCalc))

</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Update Variables</name>
					<script>


clearWindow("VariableList")

--cecho("VariableList","&lt;white&gt;Buffs\n")
--for key,value in pairs(xaos.buffs) do
--  local formattedkey = string.sub(key,7) .. "                    "
--  formattedkey = string.sub(formattedkey,1,20)
--  cecho("VariableList", formattedkey .. ": " .. tostring(value) .. "\n")
--end

local function writevariablename(name,value,linkcommand)
  name = string.sub(name .. "                    ",1,20)
  if linkcommand == nil then
    cecho("VariableList",name)
  else
    cechoLink("VariableList","&lt;grey&gt;" .. name,linkcommand,"Click to set input syntax",true)
  end
  cecho("VariableList",": " .. value .. "\n")
end

cecho("VariableList","\n&lt;white&gt;Scripting\n")
writevariablename("Is Scripting",tostring(auto_hunt))
--cecho("VariableList","Is Scripting        : " .. tostring(auto_hunt) .. "\n")
writevariablename("Area",tostring(xaos.scripting.area.name))
writevariablename("Max Mobs",tostring(xaos.config.scripting.maxmobs),'cecho("&lt;cyan&gt;maxmobs #");printCmdLine"maxmobs "')

writevariablename("Hunt Wait",tostring(xaos.config.scripting.huntwait),[[cecho("&lt;cyan&gt;huntwait #");printCmdLine"huntwait "]])
--cechoLink("VariableList", "&lt;grey&gt;Hunt Wait",[[cecho("&lt;cyan&gt;huntwait #");printCmdLine"huntwait "]],"Click to set input syntax",true)
--cecho("VariableList","           : " .. tostring(xaos.config.scripting.huntwait) .. "\n")
writevariablename("End Combat Wait",tostring(xaos.config.scripting.endcombatwait),[[cecho("&lt;cyan&gt;endcombatwait #");printCmdLine"endcombatwait "]])
--cechoLink("VariableList", "&lt;grey&gt;End Combat Wait",[[cecho("&lt;cyan&gt;endcombatwait #");printCmdLine"endcombatwait "]],"Click to set input syntax",true)
--cecho("VariableList","     : " .. tostring(xaos.config.scripting.endcombatwait) .. "\n")
writevariablename("Killing",tostring(killTarget))
--cecho("VariableList","Killing             : " .. tostring(killTarget) .. "\n")
writevariablename("Hunting",tostring(huntTarget))
--cecho("VariableList","Hunting             : " .. tostring(huntTarget) .. "\n")
writevariablename("Following",tostring(followTarget) .. "  (" .. tostring(statusFollowing) .. ")")
--cecho("VariableList","Following           : " .. tostring(followTarget) .. "  (" .. tostring(statusFollowing) .. ")\n")
writevariablename("Has Leader",tostring(statusLeader))
--cecho("VariableList","Has Leader          : " .. tostring(statusLeader) .. "\n")

writevariablename("Auto Loot",tostring(xaos.config.scripting.autoLoot),[[cecho("&lt;cyan&gt;autoloot &lt;comma separated list&gt;");printCmdLine"autoloot "]])
--cechoLink("VariableList", "&lt;grey&gt;Auto Loot",[[cecho("&lt;cyan&gt;autoloot &lt;comma separated list&gt;");printCmdLine"autoloot "]],"Click to set input syntax",true)
--cecho("VariableList","           : " .. tostring(xaos.config.scripting.autoLoot) .. "\n")
writevariablename("Auto Pickup",tostring(xaos.config.scripting.autoPickup),[[cecho("&lt;cyan&gt;autopickup &lt;comma separated list&gt;");printCmdLine"autopickup "]])
--cechoLink("VariableList", "&lt;grey&gt;Auto Pickup",[[cecho("&lt;cyan&gt;autopickup &lt;comma separated list&gt;");printCmdLine"autopickup "]],"Click to set input syntax",true)
--cecho("VariableList","         : " .. tostring(xaos.config.scripting.autoPickup) .. "\n")
--writevariablename("Scan Mode",tostring(xaos.config.scripting.scan_mode))
--cecho("VariableList","Scan Mode           : " .. tostring(xaos.config.scripting.scan_mode) .. "\n")
writevariablename("Find Mode",tostring(xaos.config.scripting.findmode))
--cecho("VariableList","Find Mode           : " .. tostring(xaos.config.scripting.findmode) .. "\n")
writevariablename("Buff Mode",tostring(xaos.config.buffmode) ,[[printCmdLine"buffmode"]])
--cechoLink("VariableList", "&lt;grey&gt;Buff Mode",[[printCmdLine"buffmode"]],"Click to set input syntax",true)
--cecho("VariableList","           : " .. tostring(xaos.config.buffmode) .. "\n")
writevariablename("Berserk over Center",tostring(xaos.config.berserkovercenter),[[printCmdLine"xconfig berserkovercenter"]])
--cechoLink("VariableList", "&lt;grey&gt;Berserk over Center",[[printCmdLine"xconfig berserkovercenter"]],"Click to set input syntax",true)
--cecho("VariableList"," : " .. tostring(xaos.config.berserkovercenter) .. "\n")
writevariablename("Min HP",tostring(xaos.config.scripting.minhp),[[cecho("&lt;cyan&gt;xconfig minhp # (0-100)");printCmdLine"xconfig minhp "]])
--cechoLink("VariableList", "&lt;grey&gt;Min HP",[[cecho("&lt;cyan&gt;xconfig minhp # (0-100)");printCmdLine"xconfig minhp "]],"Click to set input syntax",true)
--cecho("VariableList","              : " .. tostring(xaos.config.scripting.minhp) .. "\n")
writevariablename("Min Mana",tostring(xaos.config.scripting.minmana),[[cecho("&lt;cyan&gt;xconfig minmana # (0-100)");printCmdLine"xconfig minmana "]])
--cechoLink("VariableList", "&lt;grey&gt;Min Mana",[[cecho("&lt;cyan&gt;xconfig minmana # (0-100)");printCmdLine"xconfig minmana "]],"Click to set input syntax",true)
--cecho("VariableList","            : " .. tostring(xaos.config.scripting.minmana) .. "\n")
writevariablename("Wielded",tostring(wielded))
--cecho("VariableList","Wielded             : " .. tostring(wielded) .. "\n")
if xaos.config.debugmode then
cecho("VariableList","Combat              : " .. tostring(combat) .. "\n")
cecho("VariableList","targetFound         : " .. tostring(targetFound) .. "\n")
cecho("VariableList","targetFoundID       : " .. tostring(targetFoundID) .. "\n")
end

cecho("VariableList","\n&lt;white&gt;UI\n")
writevariablename("Show Exp",tostring(xaos.config.show_killed),[[printCmdLine"showkills"]])
--cechoLink("VariableList", "&lt;grey&gt;Show Exp",[[printCmdLine"showkills"]],"Click to set input syntax",true)
--cecho("VariableList","            : " .. tostring(xaos.config.show_killed) .. "\n")
</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
			</TimerGroup>
			<TimerGroup isActive="no" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>XaosUI</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>UI</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.000</time>
					<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
						<name>Comms</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.000</time>
						<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
							<name>OOCFlash</name>
							<script>UI.OOCtab:flash()</script>
							<command></command>
							<packageName></packageName>
							<time>00:00:02.000</time>
						</Timer>
						<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
							<name>RoomFlash</name>
							<script>UI.Roomtab:flash()</script>
							<command></command>
							<packageName></packageName>
							<time>00:00:02.000</time>
						</Timer>
						<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
							<name>GroupFlash</name>
							<script>UI.Grouptab:flash()</script>
							<command></command>
							<packageName></packageName>
							<time>00:00:02.000</time>
						</Timer>
						<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
							<name>ICFlash</name>
							<script>UI.ICtab:flash()</script>
							<command></command>
							<packageName></packageName>
							<time>00:00:02.000</time>
						</Timer>
						<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
							<name>TellFlash</name>
							<script>UI.Telltab:flash()</script>
							<command></command>
							<packageName></packageName>
							<time>00:00:02.000</time>
						</Timer>
					</TimerGroup>
					<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>StupidDataPull</name>
						<script>local boolVar =  qolWithReldi.ShowAll
	--]].. tostring(boolVar)..[[)]]
	if loggedin then
	gagmode = true
	tempTimer(
		.5,
		[[
	send("Score",]].. tostring(boolVar)..[[)
	send("Effects",]].. tostring(boolVar)..[[)
	send("Affects",]].. tostring(boolVar)..[[)
	send("Equip", ]].. tostring(boolVar)..[[)
	send("Inven", ]].. tostring(boolVar)..[[)
	send("hero empower", ]].. tostring(boolVar)..[[)
	send("Party", ]].. tostring(boolVar)..[[)
	]]
	)
	tempTimer(7, [[gagmode = false]])
	tempTimer(
		7,
		function()
			UI.UINameDisplay()
			UI.CharClick(UI.CurrentChar)
			UI.Char2Click(UI.CurrentChar2)
			UI.Char3Click(UI.CurrentChar3)
			UI.ExtrasClick(UI.CurrentExtras)
		end
	)
	end</script>
						<command></command>
						<packageName></packageName>
						<time>00:01:00.000</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>resizeTimer</name>
						<script>--This should be disabled by default
	--Get window size
	local main_width, main_height = getMainWindowSize()
	--cecho("&lt;firebrick&gt;[ ALERT ] - &lt;white_smoke&gt;sysWindowResizeEvent: ".. ResizeMan.main_width .."x".. ResizeMan.main_height .."\n")
	--Calculate new console size
	local left = (tonumber(main_width) / 4)
	--cecho("&lt;firebrick&gt;[ ALERT ] - &lt;white_smoke&gt;Left Set to "..left.."\n")
	local right = (tonumber(main_width) / 4)
	--cecho("&lt;firebrick&gt;[ ALERT ] - &lt;white_smoke&gt;Right Set to "..right.."\n")
	local top = 0
	--cecho("&lt;firebrick&gt;[ ALERT ] - &lt;white_smoke&gt;Top Set to "..top.."\n")
	local bottom = (tonumber(main_height) / 10)
	--cecho("&lt;firebrick&gt;[ ALERT ] - &lt;white_smoke&gt;Bottom Set to "..bottom.."\n\n")
	-- Set Main Window Size
	setBorderBottom(bottom)
	setBorderLeft(left)
	setBorderRight(right)
	setBorderTop(top)
	--rewrap miniconoles
	UI.Room:resetAutoWrap()
	UI.Room:reposition()
	UI.Group:resetAutoWrap()
	UI.Group:reposition()
	UI.OOC:resetAutoWrap()
	UI.OOC:reposition()
	UI.IC:resetAutoWrap()
	UI.IC:reposition()
	UI.Tell:resetAutoWrap()
	UI.Tell:reposition()
	UI.Who:resetAutoWrap()
	UI.Who:reposition()
	UI.ItemsList:resetAutoWrap()
	UI.ItemsList:reposition()
	UI.AffectsList:resetAutoWrap()
	UI.AffectsList:reposition()
	UI.FeedList:resetAutoWrap()
	UI.FeedList:reposition()
	--Set Main Window Font and Font Size
	--setFont("main", UI.Font)
	--setFontSize("main", UI.FontSize)
	disableTimer("resizeTimer")</script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.100</time>
					</Timer>
					<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>StupidDps</name>
						<script>if tostring(UI.CurrentExtras) == "Damage" then
	UI.UpdateLabelDamage()
	end </script>
						<command></command>
						<packageName></packageName>
						<time>00:00:03.000</time>
					</Timer>
					<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
						<name>Hourly Damage Report</name>
						<script>reporting = UI.reporting or false

	if reporting then
	local sixtydamageDealt, sixtystrikes, sixtydps, sixtydamageTaken, sixtyhits, sixtydph = UI.DPSCalc(3600)
	send("tell autoarena Total Damage: " ..
				sixtydamageDealt..
				" on " ..
				sixtystrikes ..
				" Strikes, for an average of "..
				sixtydps ..
				" Damage Per Strike.", false)
	end</script>
						<command></command>
						<packageName></packageName>
						<time>01:00:00.000</time>
					</Timer>
				</TimerGroup>
			</TimerGroup>
		</TimerGroup>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Xaos</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Config</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Help</name>
					<script>local command = string.lower(string.trim(matches[2]))
local helpdesc = {}

table.insert(helpdesc,
  {name="script",
   commands={
    {name="setarea",options="&lt;name&gt;?",desc="Sets the current area, for use in scan mode.  Supplying no name will show a list."},
    {name="cleararea",options="",desc="Clears the current area."},
    {name="startscripting",options="&lt;name&gt;?",desc="Starts scripting the current area, or if a name is included, starts hunting the mob name.  In BETA."},   
    {name="stopscripting",options="",desc="Stops the current script."},
    {name="followleader",options="",desc="Will attempt to stay with your party leader. This will AUTO switch if the leader changes."},
    {name="overrideleader",options="&lt;name&gt;",desc="This will override the leader, to force following someome.  Make sure this is the exact name of the character."},
    {name="phunt",options="&lt;mob&gt;",desc="Prey Hunt: Set target and kill to &lt;mobname&gt; and start hunting.  This does not work with scan mode."},
    --{name="fhunt",options="&lt;friend&gt;",desc="Friend Hunt: Set target to &lt;name&gt;, clear kill and start hunting"},
    {name="detectarea",options="",desc="Will attempt to determine the current area.  Make sure you are surrounded by area mobs."},
   }
  }
)
table.insert(helpdesc,
  {name="scriptconfig",
   commands={
    {name="endcombatwait",options="",desc="Sets how long to wait at the end of combat, before continuing."},
    {name="huntwait",options="",desc="Sets how long to wait before every hunt or scan action, before continuing."},
    {name="setinitial",options="&lt;command&gt;",desc="Will execute this command, once at the start of combat per mob."},
    {name="autoloot",options="&lt;comma seperated list of items&gt;",desc="Will attempt to loot the items from every corpse."},
    {name="autopickup",options="&lt;comma seperated list of items&gt;",desc="Will attemp to pickup the items after every death."},
    {name="maxmobs",options="&lt;number&gt;",desc="Sets the maximum number of scriptable mobs before it will move into a room.  If over the limit will attempt to pull with lightning bolt."},
    {name="scanmode",options="",desc="Turns on/off scan mode for scripting."},
    {name="findmode",options="",desc="Turns on/off find mode for scripting.  If one of your party members gets left behind, it will try and go find them."},
    {name="buffmode",options="",desc="Turns on/off whether you will try and use buffs such as berserk, turning off can help with staying with your party leader."},
    {name="xconfig",options="&lt;berserkovercenter|minmana|minhp&gt;",desc="Sets configuration options"},
   }
  }
)
table.insert(helpdesc,
  {name="empowers",
   commands={
    {name="fullempower",options="",desc="Starts the empower process.  Used for when you have alot of hero points (aka ascend)"},
    {name="startempower",options="&lt;all&gt;?",desc="Will full empower either ac resists, or all resists. (5 times each)"},
    {name="autoempower",options="&lt;set/remove/view&gt; &lt;name&gt;? &lt;percent&gt;?",desc="Will automatically empower whenever you kill or run fullempower based on your ratios.  view will show you your current configuration."},
   }
  }
)
table.insert(helpdesc,
  {name="quest",
   commands={
    {name="questfilter",options="qf &lt;qm|q|clear&gt; &lt;name?&gt;",desc="Filters the quest list based on the provided questmaster(qm) or quest."},
    {name="autoquest",options="aq &lt;questname|questnumber|clear|queue&gt;",desc="Will attempt to complete all kill objectives in a quest. In BETA."},
   }
  }
)
table.insert(helpdesc,
  {name="other",
   commands={
    {name="multi",options="&lt;#&gt; &lt;command&gt;",desc="runs the command # of times, use {id} in the command string to reference the number."},
    {name="afkmode",options="&lt;on|off|show&gt;?",desc="turns on afkmode, this starts tracking things that happen when you are away.  Turning it off will present the xp difference and loot gained."},
    {name="showkills",options="",desc="Turns on/off kill counters in the data window."},
    {name="stash/unstash",options="",desc="Your stash is whatever you are currently wearing on your body. This works as eiterh stash &lt;item&gt; or get all.item stash"},
    {name="beckon",options="",desc="If you are in the same party as a person, will get them to turn on their hunt triggers to you."},
    {name="gt guard",options="",desc="Will request a guard from the leader."},
    {name="gt rescue",options="",desc="Will request a rescue from the leader."},
    {name="gt heal",options="",desc="Will request a heal from your party."},
    {name="rescueall",options="",desc="Will try to rescue all players in the party."},
   }
  }
)
table.insert(helpdesc,
  {name="gear",
   
   commands={
    {name="wearall",options="&lt;name&gt;",desc="Will put on a full set of gear based on a name (for spell up sets)"},
    {name="wearnormal",options="",desc="Will put on your normal gear (set with seteq)"},
    {name="seteq",options="",desc="Sets your 'normal' gear"},
   }
  }
)
table.insert(helpdesc,
  {name="damagescenario",
   commands={
    {name="SetScenario",options="&lt;roundcount&gt; &lt;name&gt;",desc=""},
    {name="ClearScenario",options="",desc="Resets the current scenario."},
    {name="FinishScenario",options="",desc="Ends the current scenario and adds it to the array."},
    {name="ShowScenario",options="",desc="Displays the log window for the scenario."},
   }
  }
)
table.insert(helpdesc,
  {name="craft",
   desc="IN BETA",
   commands={
    {name="setcrafting",options="&lt;size&gt; &lt;colour&gt; &lt;quality&gt;",desc="set the crafting parameters\n\tcolor: orange=conjuration, teal=enchantment, pink=religion, maroon=abjuration"},
    {name="makespellset",options="",desc=""},
   }
  }
)
table.insert(helpdesc,
  {name="enchant",
   desc="IN BETA",
   commands={
    {name="setenchant",options="",desc=""},
    {name="startenchant",options="&lt;target&gt;",desc=""},
   }
  }
)

table.insert(helpdesc,
  {name="sort",
   desc="IN BETA",
   commands={
    {name="sortroom",options="",desc=""},
    {name="sorthelp",options="",desc=""},
    {name="id",options="&lt;name&gt;",desc=""},
   }
  }
)


helpheadecho("UI Help")
helpheadecho("&lt;arg&gt; defines arguments, ? means its optional.")
--{name="",options="",desc=""}
if command == "" then
  helpheadecho("Available Help Sections")
  helpdescecho("type xhelp &lt;section&gt; for more")
  helpbodyecho("all")
  for k,v in pairs(helpdesc) do
    helpbodyecho(v.name)    
  end
  helpbodyecho("")
elseif command == "all" then
  for k,v in pairs(helpdesc) do
    helpheadecho(v.name) 
    if v.desc ~= nil then
      helpheaddescecho(v.desc)
    end   
    for ck,cv in pairs(v.commands) do
      helpbodyecho(cv.name .. " " .. cv.options)
      helpdescecho(cv.desc)
    end
  end
else
  local filttable = table.n_filter(helpdesc, function (item) return item.name==command end)
  for k,v in pairs(filttable) do
    helpheadecho(v.name)    
    for ck,cv in pairs(v.commands) do
      helpbodyecho(cv.name .. " " .. cv.options)
      helpdescecho(cv.desc)
    end
  end
end
</script>
					<command></command>
					<packageName></packageName>
					<regex>^xhelp(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>AFK Mode</name>
					<script>local command = "help"

if matches[2] ~= "" then
  command = matches[2]
  command = string.lower(string.trim(command))
end

if command == "help" then
  cecho("main","&lt;medium_turquoise&gt;\nAvailable Commands:\n")
  cecho("main","&lt;medium_turquoise&gt;  on\n")
  cecho("main","&lt;medium_turquoise&gt;  off\n")
  cecho("main","&lt;medium_turquoise&gt;  show\n")
elseif command == "on" then
  if not xaos.config.afkmode then
    overnight={}
    overnight.timerid = overnight.timerid or createStopWatch() 
    
    startStopWatch(overnight.timerid)
    
    overnight.currentLevelPercent = xaos.LevelPercent
    overnight.currentLevel=xaos.Level
    overnight.autoQuestTurnIn=auto_questTurnIn
    overnight.showKills = show_killed
    overnight.currentFrags=xaos.currency.frags
    --overnight.currentSouls=currentSouls
    
    lootcollector={}
    
    xaos.config.auto_questTurnIn=true
    xaos.config.show_kills=false
    xaos.config.afkmode = true
    
    cecho("data","&lt;medium_turquoise&gt;[AFK " .. getTime(true,"HH.mm") .. "] AFK Mode Activated\n")
  else
    cecho("data","&lt;medium_turquoise&gt;[AFK " .. getTime(true,"HH.mm") .. "] AFK Mode Already Active\n")
  end
elseif command == "off" then
  if xaos.config.afkmode then
    xaos.config.afkmode = false
    cecho("main","&lt;medium_turquoise&gt;AFK Mode Deactivated\n")
  
    cecho("main","&lt;medium_turquoise&gt;\nLoot:\n")
    for k,v in pairs(lootcollector) do
      echo(v.loot .. " @ " .. v.time .. "\n")
    end
  
    cecho("main","&lt;medium_turquoise&gt;\nXP\n")
    cecho("main","Levels: " .. string.format("%2.2f",(tonumber(xaos.Level) + (tonumber(xaos.LevelPercent)/100))-(tonumber(overnight.currentLevel) + (tonumber(overnight.currentLevelPercent)/100))))
    cecho("main","\n")
    --(tonumber(xaos.Level) + (tonumber(xaos.LevelPercent)/100))-(tonumber(overnight.currentLevel) + (tonumber(overnight.currentLevelPercent)/100))
    cecho("main","Ascend %: " .. string.format("%2.2f",calcAscendPercent(xaos.Level,xaos.LevelPercent)-calcAscendPercent(overnight.currentLevel,overnight.currentLevelPercent)))
    cecho("main","\n")
    
    local watchtime = getStopWatchBrokenDownTime(overnight.timerid)
    
    cecho("main","Timer   : D: " .. watchtime.days .. " H: " .. watchtime.days .. " H: " .. watchtime.hours .. " M: " .. watchtime.minutes .. " S: " .. watchtime.seconds)
    cecho("main","\n")
    cecho("main","\n")
    
    xaos.config.auto_questTurnIn=overnight.autoQuestTurnIn
    xaos.config.show_killed=overnight.showKills
    
    
    cecho("data","&lt;medium_turquoise&gt;[AFK " .. getTime(true,"HH.mm") .. "] AFK Mode Deactivated\n")
  else
    cecho("data","&lt;medium_turquoise&gt;[AFK " .. getTime(true,"HH.mm") .. "] AFK Mode Not Active\n")
  end
elseif command == "show" then
  if xaos.config.afkmode then
    cecho("main","&lt;medium_turquoise&gt;\nLoot:\n")
    for k,v in pairs(lootcollector) do
      echo(v.loot .. " @ " .. v.time .. "\n")
    end
  
    cecho("main","&lt;medium_turquoise&gt;\nXP\n")
    cecho("main","Levels  : " .. string.format("%2.2f",(tonumber(xaos.Level) + (tonumber(xaos.LevelPercent)/100))-(tonumber(overnight.currentLevel) + (tonumber(overnight.currentLevelPercent)/100))))
    cecho("main","\n")
    --(tonumber(xaos.Level) + (tonumber(xaos.LevelPercent)/100))-(tonumber(overnight.currentLevel) + (tonumber(overnight.currentLevelPercent)/100))
    cecho("main","Ascend %: " .. string.format("%2.2f",calcAscendPercent(xaos.Level,xaos.LevelPercent)-calcAscendPercent(overnight.currentLevel,overnight.currentLevelPercent)))
    cecho("main","\n")
    local watchtime = getStopWatchBrokenDownTime(overnight.timerid)
    cecho("main","Timer   : Days: " .. watchtime.days .. " Time: " .. string.format("%  2.0f",watchtime.hours) .. ":" .. string.format("%2.0f",watchtime.minutes) .. ":" .. string.format("%2.0f",watchtime.seconds))
    cecho("main","\n")
    cecho("main","\n")
  else
    cecho("main","&lt;red&gt;\n AFK Mode Not Active\n")
  end
end

</script>
					<command></command>
					<packageName></packageName>
					<regex>^afkmode(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>xconfig</name>
					<script>local command = string.trim(matches[2])
local args = matches[3]

if command == "" then
  hecho("Config Commands: \n")
  hecho("berserkovercenter\n")
  hecho("minmana\n")
  hecho("minhp\n")
end

if command == "berserk" or command=="berserkovercenter" then
  xaos.config.berserkovercenter = not xaos.config.berserkovercenter
  echo("Berserk Mode: " .. tostring(xaos.config.berserkovercenter))
end

if command == "minmana" then
  xaos.config.scripting.minmana = tonumber(args)
  echo("Min Mana: " .. tostring(xaos.config.scripting.minmana))
end

if command == "minhp" then
  xaos.config.scripting.minhp = tonumber(args)
  echo("Min HP: " .. tostring(xaos.config.scripting.minhp))
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^xconfig(?: )?(\w*)(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Debug Mode</name>
					<script>xaos.config.debugmode = not xaos.config.debugmode

echo("\n\n Debug Mode: " .. tostring(xaos.config.debugmode) .. "\n\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^debugmode</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Buff Mode</name>
					<script>xaos.config.buffmode = not xaos.config.buffmode

echo("\n\n Buff Mode: " .. tostring(xaos.config.buffmode) .. "\n\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^buffmode</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Beta Mode</name>
					<script>xaos.config.betamode = not xaos.config.betamode

echo("\n\n Beta Mode: " .. tostring(xaos.config.betamode) .. "\n\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^betamode</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Quests</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Turn In</name>
					<script>questTurnIn=true
last_xp_overflow = xp_overflow
last_current_xp = current_xp

expandAlias("questeat")

local queststoturnin = {}

if questmaster == "unknown" then
  queststoturnin = xaos.quests
else
  queststoturnin = quest_getqmquests(questmaster)
end
debugecho(table.size(queststoturnin))
for k,v in pairs(queststoturnin) do
  if quest_iscomplete(v.name) then
  --if quest_iscomplete(questname) then
      send("quest complete " .. v.name)
      --questinfo = questinfo .. "" .. questname .. "  - Completed\n"
    else
      --echo("InfoList","\n\n" .. questname .. "  - Not Complete\n\n")
      echo("\n\n" .. v.name .. "  - Not Complete\n\n")
      --questinfo = questinfo .. "" .. questname .. "  - Not Complete\n"
    end
end
send("quest list")
tempTimer(2,function () expandAlias("questeat") end)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^turnIn</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>autoTurnIn</name>
					<script>if auto_questTurnIn then
  auto_questTurnIn=false
  echo("\nAuto Turn In: off\n ")
else
  auto_questTurnIn=true
  echo("\nAuto Turn In: on\n")
end
</script>
					<command></command>
					<packageName></packageName>
					<regex>^auto[t|T]urn[I|i]n</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Quest eat</name>
					<script>questgag=true
questgagreadyforreset=false
send("quest cur")</script>
					<command></command>
					<packageName></packageName>
					<regex>^questeat</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>qf</name>
					<script>--echo(matches[1])

expandAlias("questfilter" .. string.sub(matches[1],3))  





</script>
					<command></command>
					<packageName></packageName>
					<regex>^qf(?: )?(\w*)?(?: )?(.*)?</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>questfilter</name>
					<script>local command = matches[2]
local name = matches[3]

--debugecho(command)
--debugecho(name)

if command == nil or command == "" then
 hecho("Available filters: qm, q")
else
  command = string.lower(string.trim(command))
  if command == "clear" then
    questfiltertype = ""
    questfiltername = ""
  else
    if command == "qm" then
      if name == nil or name == "" then        
        for k,v in pairs(xaos.questmasters) do
          echo("[" .. k .. "]\t" .. v.name .. "\n")
        end
      else
        if tonumber(name) ~= nil then
          questfiltername = xaos.questmasters[tonumber(name)].name
        else
          questfiltername = string.trim(name)
        end
        questfiltertype = command
        
      end
    end
  end
  

end






</script>
					<command></command>
					<packageName></packageName>
					<regex>^questfilter(?: )?(\w*)?(?: )?(.*)?</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>AutoQuest</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Auto Quest</name>
						<script>local questtocomplete = string.trim(matches[2])

if questtocomplete == "" then
  echo("Quests to complete\n")
  for k,v in pairs(quest_getstatus(false)) do
    echo(k .. ": " .. v.name .. " - " .. v.qm .. "\n")
  end
elseif questtocomplete == "clear" then
  autoquest_clear()
elseif questtocomplete == "queue" then
  xaos.autoquest.queue = {}
  for k,v in pairs(string.split(matches[3],",")) do
    table.insert(xaos.autoquest.queue,quest_getstatus(false)[tonumber(v)].name)
  end
  
  autoquest_setquest(xaos.autoquest.queue[1])
  autoquest_go()
elseif tonumber(questtocomplete) ~= nil then
  autoquest_setquest(quest_getstatus(false)[tonumber(questtocomplete)].name)
  autoquest_go()
  
else
  if matches[3] ~= nil then
    questtocomplete = questtocomplete .. " " .. string.trim(matches[3])
  end
  autoquest_setquest(questtocomplete)
  autoquest_go()

end



</script>
						<command></command>
						<packageName></packageName>
						<regex>^autoquest(?: )?(\w*)(?: )?(.*)?</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>ahunt</name>
						<script>send("bclear")

huntTarget = tostring(matches[2])

expandAlias("scripthunt")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ahunt (.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^aq (.*)</name>
						<script>expandAlias("autoquest " .. matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^aq(?: )?(.*)</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Archive</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Update Quest Window -QM</name>
						<script>local qm = matches[2]

clearWindow("queststatus")
table.sort(quests,
    function(elem1,elem2)
      --if table.size(elem1.objectives) == table.size(elem2.objectives) then
      local elem1comp = table.size(table.n_filter(elem1.objectives,function(item) return not item.complete end))
      local elem2comp = table.size(table.n_filter(elem2.objectives,function(item) return not item.complete end))
      if elem1comp ~= elem2comp then
        return elem1comp &lt; elem2comp
      else
        return elem1.name &lt; elem2.name 
      end
    end)
for key,value in pairs(quests) do
   if value.qm == qm then
    if table.size(value.objectives)==0 or table.size(table.n_filter(value.objectives,function(item) return not item.complete end))==0 then
      --if showcompplete then
      cecho("queststatus","\n&lt;grey&gt;" .. value.name .. " - " .. value.qm .. "\n")  
      --end
    else 
      cecho("queststatus","\n&lt;medium_turquoise&gt;" .. value.name .. " - " .. value.qm .. "\n")  
      for key2,value2 in pairs(value.objectives) do
        echo("queststatus"," " .. value2.name .. "\n")
      end
    end
  end
end

echo("update complete")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^updatequestsqm (.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Update Quest Window</name>
						<script>local showcomplete = matches[2]

clearWindow("queststatus")
table.sort(quests,
    function(elem1,elem2)
      --if table.size(elem1.objectives) == table.size(elem2.objectives) then
      local elem1comp = table.size(table.n_filter(elem1.objectives,function(item) return not item.complete end))
      local elem2comp = table.size(table.n_filter(elem2.objectives,function(item) return not item.complete end))
      if elem1comp ~= elem2comp then
        return elem1comp &lt; elem2comp
      else
        return elem1.name &lt; elem2.name 
      end
    end)
for key,value in pairs(quests) do
  --local elem2comp = table.size(table.n_filter(elem2.objectives,function(item) return not item.complete end))
  if table.size(value.objectives)==0 or table.size(table.n_filter(value.objectives,function(item) return not item.complete end))==0 then
    if showcomplete then
    cecho("queststatus","\n&lt;grey&gt;" .. value.name .. " - " .. value.qm .. "\n")  
    end
  else 
    cecho("queststatus","\n&lt;medium_turquoise&gt;" .. value.name .. " - " .. value.qm .. "\n")  
    for key2,value2 in pairs(value.objectives) do
      echo("queststatus"," " .. value2.name .. "\n")
    end
  end
  --echo("queststatus"," " .. matches[3] .. "\n")
end

echo("update complete")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^updatequests (.*)</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Enchanting</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>setenchant</name>
					<script>tableEnchantNum["22"]=1   --impart strength
tableEnchantNum["26"]=1   --impart intelligence
tableEnchantNum["25"]=1   --impart wisdom
tableEnchantNum["23"]=1   --impart dexterity
tableEnchantNum["24"]=1   --impart constitution
tableEnchantNum["10"]=1   --add saves
tableEnchantNum["6"]=0   --add hitpoints
tableEnchantNum["8"]=0   --add mana
   --add moves
   --add light
tableEnchantNum["3"]=1   --add speed
tableEnchantNum["1"]=4   --add hitroll
tableEnchantNum["2"]=0   --add damroll
tableEnchantNum["7"]=1   --regen hp
tableEnchantNum["9"]=1   --regen mana
tableEnchantNum["4"]=2   --armor physical
tableEnchantNum["5"]=3   --armor elemental
tableEnchantNum["14"]=5   --casting conjurational
tableEnchantNum["18"]=0   --casting invocational
tableEnchantNum["16"]=0   --casting enchantment

   --resist fire
   --resist cold
   --resist lightning
   --resist acid
   --resist holy
   --resist unholy
   --resist magic
   --resist negative
   --instill returning
   --instill sanguine touch
   --instill enkindling touch
   --instill glacial touch
   --instill static touch



   --add luck
tableEnchantNum["20"]=0   --casting necromantic
tableEnchantNum["11"]=0   --casting abjurational
tableEnchantNum["12"]=0   --casting alterational
tableEnchantNum["21"]=0   --casting religious
tableEnchantNum["15"]=0   --casting divinational
tableEnchantNum["17"]=0   --casting illusional
tableEnchantNum["13"]=0   --casting beguilery
tableEnchantNum["19"]=0   --casting maladictive
   --research
   --advanced research
   --greater research</script>
					<command></command>
					<packageName></packageName>
					<regex>setenchant</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>startenchant</name>
					<script>enchantTarget = string.trim(matches[2])
--send("get '" .. enchantTarget)
send("enchant '" .. enchantTarget .. "' table")
send("show")
startEnchant()</script>
					<command></command>
					<packageName></packageName>
					<regex>startenchant (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>disenchant</name>
					<script>disenchantTarget = matches[2]
send("disenchant " .. matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>det (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>showenchant</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex>showenchant</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Script</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>phunt</name>
					<script>send("bclear")
prey=matches[2]
huntTarget = tostring(matches[2])
killTarget = tostring(matches[2])

autoleaderswitch = false
expandAlias("scripthunt")</script>
					<command></command>
					<packageName></packageName>
					<regex>^phunt (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>fhunt</name>
					<script>followTarget=tostring(matches[2])

huntTarget = tostring(matches[2])
killTarget = ""
auto_hunt = true

autoleaderswitch = false
statusFollowing=true
statusLeader=false

enableTimer("hunt listener")
disableTimer("scan listener")
disableTimer("leader listener")

xaos.config.scripting.scan_mode = false
--send("auto ")
auto_hunt = true
xuicom(
  "You will attempt to stay with: " ..
  huntTarget
)
xuicom("Currently, tracking "..wielded.." as your wielded weapon.")
if statusFollowing then
  --This bit handles the "What do I do if I'm following someone?" question
  obsessionMode = true
  huntTarget = followTarget
  location = nil
  --xuicom("You are following " .. followTarget .. " and this script will attempt to hunt them.")
  --xuicom("Obsession mode is on by default. Use &lt;white&gt;obsessionoff&lt;light_blue&gt; to turn it off.\n")
  cechoLink(
    "[ XUI ] &lt;light_blue&gt;Click here for more info on obsession mode.\n",
    [[xuicom("Obsession mode inputs hunt aggressively in an attempt to keep up with the party leader.\n")]],
    "obsession mode info",
    true
  )
  if huntTarget then
  else
    variableCheck(huntTarget, "hunt location")
    auto_hunt = false
  end
end
combat = false
hunting = false</script>
					<command></command>
					<packageName></packageName>
					<regex>^fhunt (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>scripthunt</name>
					<script>auto_hunt = true
statusFollowing=false
statusLeader=false
followTarget = ""

if not xaos.config.scripting.scan_mode then
  enableTimer("hunt listener")
else
  disableTimer("hunt listener")
  send("scan")
end
disableTimer("scan listener")
disableTimer("leader listener")

send("auto ")
auto_hunt = true
xuicom(
  "You will attempt to automatically hunt something. Current settings indicate you're going to hunt " ..
  huntTarget
)
--xuicom("Currently, tracking "..wielded.." as your wielded weapon.")


combat = false
hunting = false</script>
					<command></command>
					<packageName></packageName>
					<regex>^scripthunt</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Auto Loot</name>
					<script>xaos.config.scripting.autoLoot = string.trim(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^auto[lL]oot(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Auto Pickup</name>
					<script>xaos.config.scripting.autoPickup = string.trim(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^auto[p|P]ickup(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Area</name>
					<script>local area = string.trim(matches[2])


local findmember = table.n_filter(xaos.areas,function (item) return item.name == area end)

if table.size(findmember) ~= 0 then

  
  xaos.scripting.area = findmember[1]
  --Set Area Overrides
  if xaos.scripting.area.scanmode ~= nil then xaos.config.scripting.scan_mode = xaos.scripting.area.scanmode end
  if xaos.scripting.area.huntWait ~= nil then xaos.config.scripting.huntwait = xaos.scripting.area.huntWait end
  if xaos.scripting.area.endcombatWait ~= nil then xaos.config.scripting.endcombatwait = xaos.scripting.area.endcombatWait end
  if xaos.scripting.area.maxmobs ~= nil then xaos.config.scripting.maxmobs = xaos.scripting.area.maxmobs end

  echo(" Area set to: " .. xaos.scripting.area.name .. "\n")
  cechoLink("&lt;cyan&gt;startscripting to go.\n", [[expandAlias("startscripting")]], "Click to send.", true)
  echo("\n\n")
else

  for k,v in pairs(xaos.areas) do
    echo("\t" .. v.name .. "\n")
  end   
  
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^setarea(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Clear Area</name>
					<script>  xaos.scripting.area = {}
  xaos.config.scripting.scan_mode = false
  
  echo(" Area Cleared")</script>
					<command></command>
					<packageName></packageName>
					<regex>^cleararea</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Start Scripting</name>
					<script>local prey = matches[2]


if prey ~= nil and prey ~= "" then

  expandAlias("cleararea")
  
  if huntWait==0 then
    huntWait=1
    if xaos.config.scripting.scan_mode then 
      send("scan")
    else
      expandAlias("phunt " .. prey)
    end
  end
  
  
  
else
  xaos.config.scripting.scan_mode = xaos.scripting.area.scanmode
  
  huntTarget = xaos.scripting.area.keyword
  killTarget = xaos.scripting.area.killlist
  

  if xaos.scripting.area.name ~= nil then
    expandAlias("scripthunt")    
  else
    expandAlias("detectarea")
  end

end</script>
					<command></command>
					<packageName></packageName>
					<regex>^startscripting(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>lookfor</name>
					<script>followTarget=tostring(matches[2])

huntTarget = tostring(matches[2])
killTarget = ""
auto_hunt = true

statusFollowing=false

enableTimer("hunt listener")
disableTimer("scan listener")

xaos.config.scripting.scan_mode = false

--send("auto ")
auto_hunt = true
xuicom(
  "You will attempt to automatically hunt something. Current settings indicate you're going to hunt " ..
  huntTarget
)
xuicom("Currently, tracking "..wielded.." as your wielded weapon.")
if statusFollowing then
  --This bit handles the "What do I do if I'm following someone?" question
  obsessionMode = true
  huntTarget = followTarget
  location = nil
  xuicom("You are following " .. followTarget .. " and this script will attempt to hunt them.")
  xuicom("Obsession mode is on by default. Use &lt;white&gt;obsessionoff&lt;light_blue&gt; to turn it off.\n")
  cechoLink(
    "[ XUI ] &lt;light_blue&gt;Click here for more info on obsession mode.\n",
    [[xuicom("Obsession mode inputs hunt aggressively in an attempt to keep up with the party leader.\n")]],
    "obsession mode info",
    true
  )
  if huntTarget then
  else
    variableCheck(huntTarget, "hunt location")
    auto_hunt = false
  end
end
combat = false
hunting = false</script>
					<command></command>
					<packageName></packageName>
					<regex>^lookfor (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>followleader</name>
					<script>overriderleader = false
autoleaderswitch = true

leaderhunt(xaos.party.leader)</script>
					<command></command>
					<packageName></packageName>
					<regex>^followleader</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>newareakillcapture</name>
					<script>killcapturegrab=true
killcapture = {}</script>
					<command></command>
					<packageName></packageName>
					<regex>^newareakillcapture</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>detectareaa</name>
					<script>auto_hunt = false
detectmode=true
expandAlias("cleararea")
send("scan")</script>
					<command></command>
					<packageName></packageName>
					<regex>^detectarea</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>stopscripting</name>
					<script>disableTimer("hunt listener")
disableTimer("scan listener")
disableTimer("leader listener")

auto_hunt = false</script>
					<command></command>
					<packageName></packageName>
					<regex>^stopscripting</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>overrideleader</name>
					<script>overriderleader = true
autoleaderswitch = false

xuicom("Make sure this is set to the EXACT name of your target.")

leaderhunt(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^overrideleader (.*)</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Config</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>^findmode</name>
						<script>--xaos.config.scripting.findmode
xaos.config.scripting.findmode = not xaos.config.scripting.findmode

echo("\n\n Find Mode: " .. tostring(xaos.config.scripting.findmode) .. "\n\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^findmode</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^maxmob (.*)</name>
						<script>xaos.config.scripting.maxmobs=tonumber(matches[2])

echo("\n\n Max Mobs: " .. tostring(xaos.config.scripting.maxmobs) .. "\n\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^maxmobs (.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>scanmode</name>
						<script>if xaos.config.scripting.scan_mode then
  xaos.config.scripting.scan_mode=false
  echo("Scan Mode Off")
  
  if auto_hunt then
    enableTimer("hunt listener")
    disableTimer("scan listener")
  end
  
 else
  xaos.config.scripting.scan_mode=true
  disableTimer("hunt listener")
  if not combat then
    send("scan")
  end
  if xaos.config.scripting.huntwait == 0 then xaos.config.scripting.huntwait = 1 end
  echo("Scan Mode On")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^scanmode$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>huntwait</name>
						<script>xaos.config.scripting.huntwait=tonumber(matches[2])

echo("\n\n Max Mobs: " .. tostring(xaos.scripting.area.huntwait) .. "\n\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^huntwait (.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>setinitial</name>
						<script>

xaos.config.scripting.initialcommand=matches[2]



echo("\n\n Initial Combat Action: " .. tostring(xaos.config.scripting.initialcommand) .. "\n\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^setinitial (.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>endcombatwait</name>
						<script>xaos.config.scripting.endcombatwait=tonumber(matches[2])

echo("\n\n End Combat Wait: " .. tostring(xaos.config.scripting.endcombatwait) .. "\n\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^endcombatwait (.*)</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Crafting</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Set Crafting</name>
					<script>local makesize = string.trim(matches[2])
local makecol = string.trim(matches[3])
local makequal = string.trim(matches[4])

--color: orange=conjur, teal=enchantment, pink=religion

craftingparams = { colour= makecol, quality=makequal, size=makesize}

echo(display(craftingparams))</script>
					<command></command>
					<packageName></packageName>
					<regex>^setcrafting ([^\s\n]*) ([^\s\n]*) ([^\s\n]*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Make Cloth</name>
					<script>local maketype = string.trim(matches[2])

send("get spool")

if maketype == "scarf" then
send("make new cloth " .. maketype .. ";source 2 " .. craftingfurnaces.cloth .. ";source 1 spool;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
else
send("make new cloth " .. maketype .. ";source 1 " .. craftingfurnaces.cloth .. ";source 1 spool;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^makecloth (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Make Weap</name>
					<script>local maketype = string.trim(matches[2])

if maketype == "cloth scarf" then
send("make new " .. maketype .. ";source 2 sew;source 1 spool;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
else
send("make new " .. maketype .. ";source 1 metal;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^makeweap (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Make Jewelry</name>
					<script>local maketype = string.trim(matches[2])

if maketype == "scarf" then
send("make new " .. maketype .. ";source 2 sew;source 1 spool;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
else
send("make new " .. maketype .. ";source 1 metal;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^makejew (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>MakeClothSet</name>
					<script>
craftset = {
  -- "makejew simple ring",
  --"makejew simple ring",
  --"makejew simple necklace",
  --"makejew simple necklace",
  "makecloth shirt",
  "makecloth pants",
  "makecloth gloves",
  "makecloth robe",
  "makecloth belt",
  --"makejew simple bracelet",
  --"makejew simple bracelet",
  --"makeweap metal stil",
  --"makeweap metal stil",
  "makecloth hood",
  "makecloth boots",
  --"makeioun ioun",
}

craftfullstatus = true
craftsetiteration = 1

send(expandAlias(craftset[craftsetiteration]))</script>
					<command></command>
					<packageName></packageName>
					<regex>^makeclothset</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>MakeJewSet</name>
					<script>
craftset = {
   "makejew simple ring",
  "makejew simple ring",
  "makejew simple necklace",
  "makejew simple necklace",
  --"makecloth shirt",
  --"makecloth pants",
  --"makecloth gloves",
  --"makecloth robe",
  --"makecloth belt",
  "makejew simple bracelet",
  "makejew simple bracelet",
  --"makeweap metal stil",
  --"makeweap metal stil",
  --"makecloth hood",
  --"makecloth boots",
  --"makeioun ioun",
}

craftfullstatus = true
craftsetiteration = 1

send(expandAlias(craftset[craftsetiteration]))</script>
					<command></command>
					<packageName></packageName>
					<regex>^makejewset</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Make Ioun</name>
					<script>local maketype = string.trim(matches[2])

if maketype == "scarf" then
send("make new " .. maketype .. ";source 1 cutter;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
else
send("make new " .. maketype .. ";source 1 cutter;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^makeioun (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Furnaces</name>
					<script>local cloth = string.trim(matches[2])
local metal = string.trim(matches[3])
local gem = string.trim(matches[4])

--color: orange=conjur, teal=enchantment, pink=religion

craftingfurnaces = { cloth= cloth, metal=metal, gem =gem }

echo(display(craftingfurnaces))</script>
					<command></command>
					<packageName></packageName>
					<regex>^setfurnaces ([^\s\n]*) ([^\s\n]*) ([^\s\n]*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Make Metal</name>
					<script>local maketype = string.trim(matches[2])


send("make new " .. maketype .. ";source 1 " .. craftingfurnaces.metal .. ";quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^makemetal (.*)</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Gear Set</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>wearall (.*)</name>
					<script>for k,v in pairs(currentequipment) do
  if v.location == "worn on finger" or v.location=="worn on wrist" or v.location=="worn on neck" then
    send("remove '" .. v.item .."")
  end
end

local item = string.trim(matches[2])
send("wield " .. item .. " stil")
send("hold " .. item .. " stil")
send("wear '" .. item .. " ring' 'left finger")
send("wear '" .. item .. " ring' 'right finger")
send("wear '" .. item  .. " necklace' 'left neck")
send("wear '" .. item  .. " necklace' 'right neck")
send("wear '" .. item  .. " scarf' 'left neck")
send("wear '" .. item  .. " scarf' 'right neck")
send("wear '" .. item .. " shirt' torso")
send("wear '" .. item .. " hood' head")
send("wear '" .. item .. " glove' hand")
send("wear '" .. item .. " robe' body")
send("wear '" .. item .. " belt' waist")
send("wear '" .. item .. " bracelet' 'left wrist")
send("wear '" .. item .. " bracelet' 'right wrist")
send("wear '" .. item .. " ioun' float")
send("wear '" .. item .. " pants' legs")
send("wear '" .. item .. " boots' feet")</script>
					<command></command>
					<packageName></packageName>
					<regex>^wearall (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wearnormal</name>
					<script>for k,v in pairs(currentequipment) do
  if v.location == "worn on finger" or v.location=="worn on wrist" or v.location=="worn on neck" then
    send("remove '" .. v.item .."")
  end
end

local floatcount = 0 
for k,v in pairs(xaos.currentequip) do
  --held in right hand
  --held in left hand
  --held in both hands
  echo (v.location)
  if v.location == "held in right hand" or v.location=="held with both hands" then
    send("wield " .. v.item .."")
  elseif v.location == "held in left hand" then
    send("hold " .. v.item .."")
  elseif v.location == "floating nearby" then
    if floatcount == 0 then
    send("wear '" .. v.item .."' float")
    else
      send("kinetic '" .. v.item)
    end
    floatcount=floatcount+1
  else
    local temploc = string.gsub(v.location,"worn on ","")
    temploc = string.gsub(temploc,"worn about ","")
    temploc = string.gsub(temploc,"worn around ","")
    send("wear '" .. v.item .."' " .. temploc)
  end
end
--echo("Dont forget your kinetics!")</script>
					<command></command>
					<packageName></packageName>
					<regex>^wearnormal</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Equipment</name>
					<script>equipmentgrab=true
startequipmentgrab=false
xaos.currentequip = {}

send("eq")
--send("massage")</script>
					<command></command>
					<packageName></packageName>
					<regex>seteq</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^unwield</name>
					<script>send("rem '" ..wielded)
send("rem '" .. held)</script>
					<command></command>
					<packageName></packageName>
					<regex>^unwield</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^rewield</name>
					<script>send("wield " ..wielded)
if held ~= "" then
send("hold " .. held)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^rewield</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^stash (.*)</name>
					<script>send("put '" .. matches[2] .. "' '" ..xaos.backpack)</script>
					<command></command>
					<packageName></packageName>
					<regex>^stash (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^unstash (.*)</name>
					<script>send("get '" .. matches[2] .. "' '" ..xaos.backpack)</script>
					<command></command>
					<packageName></packageName>
					<regex>^unstash (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^stash (.*)</name>
					<script>send("put '" .. matches[2] .. "' '" ..xaos.backpack)</script>
					<command></command>
					<packageName></packageName>
					<regex>^put (.*) stash$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^unstash (.*)</name>
					<script>send("get '" .. matches[2] .. "' '" ..xaos.backpack)</script>
					<command></command>
					<packageName></packageName>
					<regex>^get (.*) stash$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>l(?:ook)? i(?:n)? stash</name>
					<script>send("look in '" ..xaos.backpack)</script>
					<command></command>
					<packageName></packageName>
					<regex>^l(?:ook)? i(?:n)? stash</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>XaosUI Scripting</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>auto_hunt</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>auto_hunt</name>
						<script>--deleteLine()

--Check if you're in combat or already hunting
--If in combat, do nothing
--If already hunting, do nothing
--If neither in combat, nor hunting, hunt
if not combat and not hunting and not restingMode then
	send("hunt "..huntTarget.."\n")
	hunting = true
	debugc("[ Debug ] &lt;light_blue&gt;auto_hunt is being invoked. Hunt target is "..huntTarget.."\n")

end

if current_mana &lt; 50  and autoRest then
	restingMode = true
end

if current_health &gt; 90 and current_mana &gt; 90 and restingMode then
	restingMode = false
	send("stand")
end

if restingMode and not combat then
	send("cast renovi")
	send("sleep")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^auto_hunt$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>follow</name>
						<script>followTarget = matches[2]
send("follow "..matches[2])
send("party join "..matches[2])
autoFollow = true

xuicom("For the purposes of the auto hunt feature, your follow target has been set.")
cecho("[ XUI ] &lt;light_blue&gt;You're now following "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^follow (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>customHunt</name>
						<script>huntTarget = tostring(matches[2])

xuicom("You've selected to automatically hunt "..matches[2])
xuicom("Please ensure your kill keyword matches using &lt;white&gt;customKill")</script>
						<command></command>
						<packageName></packageName>
						<regex>^customHunt (.*+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>customKill</name>
						<script>killTarget = tostring(matches[2])

xuicom("You've selected to automatically kill "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^customKill (.*+)$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Grouping</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Turn off obsession</name>
							<script>obsessionMode = false

xuicom("Obsession mode deactivated")</script>
							<command></command>
							<packageName></packageName>
							<regex>^obsessionoff$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>Auto set</name>
						<script>autoAttack = matches[2]
inputAttack = matches[2]
xuicom("Setting your autoattack to "..matches[2]..". If the script changes your auto settings for some reason, it will return to that.")
send("auto "..matches[2])

-- Note for future tampering. input Attack is modified here and the auto trigger</script>
						<command></command>
						<packageName></packageName>
						<regex>^auto (.*)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Auto enchantment</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Proc number</name>
						<script>enchantIteration = matches[2]
send("proc")</script>
						<command></command>
						<packageName></packageName>
						<regex>^proc (\d+)$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>xaos-ui-0120</name>
				<script></script>
				<command></command>
				<packageName>xaos-ui-0120</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>xaos-ui-0120</name>
					<script></script>
					<command></command>
					<packageName>xaos-ui-0120</packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>general</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>combat</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>wield</name>
								<script>deleteLine()
wielded = matches[2]
send("wield "..matches[2])
debugc("Setting wield variable to "..wielded)
xuicom(wielded.." now recognized as your primary weapon. If disarmed in combat, it will be sought to rewield.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^wield (\w+)$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Class QOL</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>mages</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>mageBuff</name>
									<script>terminus = table.size(mage_buff) 
send("cast permanency")
for i = 1,terminus do
	send("cast '"..mage_buff[i].."'")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>mageBuff</regex>
								</Alias>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>mentalists</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>mentalistGain</name>
										<script>terminus = table.size(mentalist_buffs) 
for i = 1,terminus do
	send("gain "..tostring(mentalist_buffs[i]))
end


for i = 1, table.size(mentalist_utility) do
	send("gain "..tostring(mentalist_utility[i]))
end

for i = 1, table.size(mentalist_combat) do
	send("gain "..tostring(mentalist_combat[i]))
end
</script>
										<command></command>
										<packageName></packageName>
										<regex>mentalistGain</regex>
									</Alias>
								</AliasGroup>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Clerics</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>autoHeal set</name>
									<script>autoHealThreshold = tonumber(matches[2])
xuicom("You will attempt to "..autoHealCommand.." when below "..matches[2].."% HP.")</script>
									<command></command>
									<packageName></packageName>
									<regex>autoHeal (\d+)</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>autoHeal Command</name>
									<script>
autoHealCommand = matches[2]


xuicom("You will attempt to "..autoHealCommand.." when below "..autoHealThreshold.."% HP.")</script>
									<command></command>
									<packageName></packageName>
									<regex>autoHC (.*)</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>pledges</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>renoviThreshold</name>
									<script>renoviThreshold = matches[2]
cecho("[ XUI ] &lt;light_blue&gt;You will attempt to use renovi below "..matches[2].." mana.\n")</script>
									<command></command>
									<packageName></packageName>
									<regex>^renoviThreshold (\d+)$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>warrior</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>auto determ</name>
									<script>determThresh = matches[2]
determThresh2 = matches[3]
xuicom("This utility will set your determination on when below "..determThresh.."% hitpoints to turn off when you have "..matches[3].." mana.")
</script>
									<command></command>
									<packageName></packageName>
									<regex>^autoDet (\d+) (\d+)\s*$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>auto determ 1 arg</name>
									<script>determThresh = matches[2]
xuicom("This utility will set your determination on when below "..determThresh.."% hitpoints.")
</script>
									<command></command>
									<packageName></packageName>
									<regex>^autoDet (\d+)$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>PlayerSettings</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>retrievePrompt</name>
								<script>xuicom("Restoring old prompt settings. Unfortunately this will be without your desired colors.")
send("prompt "..savedPrompt)</script>
								<command></command>
								<packageName></packageName>
								<regex>^retrievePrompt$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>marchPrompt</name>
								<script>xuicom("As a provisional measure, we're going to save your old prompt so you can get it back.")
send("prompt")
 

send("PROMPT HEALTH %h MANA %m MVM %v STIL %C XP %X Directions  %e  Hungry  %B %c")</script>
								<command></command>
								<packageName></packageName>
								<regex>^marchPrompt$</regex>
							</Alias>
							<AliasGroup isActive="no" isFolder="yes">
								<name>UI Settings</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="no" isFolder="no">
									<name>Health bar - color</name>
									<script>healthR = matches[2]
healthG = matches[2]
healthB = matches[2]
xuicom("Pushing your changes.")
hpbar:setColor(healthR,healthG,healthB)</script>
									<command></command>
									<packageName></packageName>
									<regex>healthCol (\d+)\s(\d+)\s(\d+)</regex>
								</Alias>
							</AliasGroup>
							<Alias isActive="yes" isFolder="no">
								<name>RP Say</name>
								<script>custom_say = custom_say or ""
send("say "..custom_say..matches[2])</script>
								<command></command>
								<packageName></packageName>
								<regex>^say (.+)</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>customSaySetter</name>
								<script>custom_say = matches[2]</script>
								<command></command>
								<packageName></packageName>
								<regex>^customSay (.*)</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>RP global</name>
								<script>custom_say = custom_say or ""
send("ic "..custom_say..matches[2])</script>
								<command></command>
								<packageName></packageName>
								<regex>^ic (.*)</regex>
							</Alias>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Utility settings</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>autoLog</name>
									<script>loginName = matches[2]
loginPW = matches[3]</script>
									<command></command>
									<packageName></packageName>
									<regex>^autoLog (\w+) (.+)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name></name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>QOL</name>
							<script>customDrink = matches[2]
xuicom("When presented the opportunity to drink from your inventory, you will drink "..matches[2])</script>
							<command></command>
							<packageName></packageName>
							<regex>^customDrink (.*)$</regex>
							<Alias isActive="yes" isFolder="no">
								<name>hero empowerment</name>
								<script>for i = 1,5 do
	send("hero empower "..matches[2])
end

send("hero empower")</script>
								<command></command>
								<packageName></packageName>
								<regex>^mhemp (.*+)$</regex>
							</Alias>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Faceless</name>
								<script>send("quest request fragments of the fallen god")
send("give fragment faceless")
send("give fragment faceless")
send("quest complete fragments of the fallen god")</script>
								<command></command>
								<packageName></packageName>
								<regex>shard_create</regex>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Utility</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Enchanting</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>encCons</name>
										<script>xuicom("Refactoring for " .. matches[2])
if matches[2] == "ember" then
  send("craft new ember;proc")
elseif matches[2] == "focus" then
  -- xuicom("I'm simulating crafting sources")
  send(
    "craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new focus;proc"
  )
elseif matches[2] == "source" then
  -- xuicom("I'm simulating crafting sources")
  for i = 1, 3 do
    send(
      "craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new focus;proc"
    )
  end
  send("craft new source;proc")
elseif matches[2] == "orb" then
  for i = 1, 2 do
    for i = 1, 3 do
      send(
        "craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new focus;proc"
      )
    end
    send("craft new source;proc")
  end
  send("craft new orb;proc")
else
  xuicom(
    "This utility accepts the arguments &lt;white&gt;ember&lt;light_blue&gt;,&lt;white&gt;focus&lt;light_blue&gt;, &lt;white&gt;source&lt;light_blue&gt;, &lt;white&gt;orb&lt;light_blue&gt;"
  )
  xuicom("Your input should look like &lt;white&gt;encCons ember 4")
  return
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^encCons (\w+)$</regex>
									</Alias>
								</AliasGroup>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Events</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>test</name>
								<script>raiseEvent("eventa")</script>
								<command></command>
								<packageName></packageName>
								<regex>^test$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="no" isFolder="yes">
							<name>assert</name>
							<script>local s = matches[2]

s = string.gsub(s, "%$", "\n")
feedTriggers("\n" .. s .. "\n")
echo("\n")</script>
							<command></command>
							<packageName></packageName>
							<regex>`assert (.*)</regex>
						</AliasGroup>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Sort</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Sort Room</name>
					<script>sortingmode=true
--issorting = true
itemwordcount=0
send("look")</script>
					<command></command>
					<packageName></packageName>
					<regex>^sortroom</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Sort Help</name>
					<script>cecho("&lt;cyan&gt;pink=artifact\n")
cecho("&lt;cyan&gt;gold=epic with space\n")
cecho("&lt;cyan&gt;silver=supreme with space\n")
cecho("&lt;cyan&gt;brown=epic full\n")
cecho("&lt;cyan&gt;maroon=supreme full\n")
cecho("&lt;cyan&gt;sheer=garbage\n")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^sorthelp</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Sort Stop</name>
					<script>sortingmode=false</script>
					<command></command>
					<packageName></packageName>
					<regex>^sortstop</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Sort Get</name>
					<script>issorting = true
expandAlias("get all." .. string.trim(matches[2]))
expandAlias("id " .. string.trim(matches[2]))

--gold=epic with space
--silver=supreme with space

--brown=epic full
--maroon=supreme full

--sheer=garbage</script>
					<command></command>
					<packageName></packageName>
					<regex>^startsortget (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Sort</name>
					<script>issorting = true
itemwordcount=0
--expandAlias("get all." .. string.trim(matches[2]))
expandAlias("id " .. string.trim(matches[2]))

--pink=artifact
--gold=epic with space
--silver=supreme with space
--brown=epic full
--maroon=supreme full
--sheer=garbage
</script>
					<command></command>
					<packageName></packageName>
					<regex>^startsort (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ID</name>
					<script>lastid = string.trim(matches[2])
send("c id '" .. matches[2])
</script>
					<command></command>
					<packageName></packageName>
					<regex>^id (.*)</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Misc</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Multi Command</name>
					<script>local counter = tonumber(matches[2])
local command = string.trim(matches[3])

--debugecho(counter)
--debugecho(command)
for i=1,counter do 
  --echo(i)
  local tempcom = string.gsub(command,"{id}",i)
  --debugecho(tempcom)
  expandAlias(tempcom)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^multi ([0-9]*) (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Multi Cont Command</name>
					<script>local counter = matches[2]
local command = matches[3]

if counter == "clear" then
  echo("clear")
else
  counter = tonumber(counter)
  command = string.trim(command)

  if multicommand == nil then
    multicommand = ""
  end
  
  if multicounter == nil then
    multicounter = 0
  end
  
  --Repeat
  if multicommand == command then
    multicounter = multicounter + 1
  else
    multicounter = 0
    multicommand = command
  end
  
  echo (1+(counter*multicounter))
  echo (counter+(counter*multicounter))
  
  for i=1+(counter*multicounter),counter+(counter*multicounter) do 
    echo(i)
    local tempcom = string.gsub(command,"{id}",i)
    debugecho(tempcom)
    expandAlias(tempcom)
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^multicont ([0-9]+)?(.*)</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>FullEmpower</name>
					<script>
send("hero empower hit roll")
--send("hero empower speed")
send("hero empower hitpoints")
send("hero empower regen hp")
send("hero empower armor class")
send("hero empower warding")

--xaos.config.empowerlist = {

if matches[2] ~= nil then

  local schools = string.split(string.trim(matches[2])," ")
  
  if not table.contains(schools,"mage") then
    send("hero empower damage roll")
  end
  
  if table.contains(schools,"invo") then
    send("hero empower invocational casting")
  end
  
  if table.contains(schools,"reli") then
    send("hero empower religion casting")
  end

  if table.contains(schools,"conj") then
    send("hero empower conjurational casting")
  end

  if table.contains(schools,"ench") then
    send("hero empower enchantment casting")
  end
  
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^[f|F]ull[e|E]mpower(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>facelessfrag</name>
					<script>send("give 2 frags faceless")
tempTimer(2,function () expandAlias("turnIn") end)
tempTimer(4,function () send("quest list") end)</script>
					<command></command>
					<packageName></packageName>
					<regex>^facelessfrag</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>showkills</name>
					<script>xaos.config.show_killed = not xaos.config.show_killed</script>
					<command></command>
					<packageName></packageName>
					<regex>^showkills</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>empoweriterate</name>
					<script>empoweriterate=1
</script>
					<command></command>
					<packageName></packageName>
					<regex>empoweriterate</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>^fragconvert</name>
					<script>send("quest request fragments of the fallen god")
send("give 2 frags faceless")
send("quest complete fragments of the fallen god")
send("quest request fragments of the fallen god")</script>
					<command></command>
					<packageName></packageName>
					<regex>^fragconvert</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>unlocklep</name>
					<script>send('unlock north 715124')</script>
					<command></command>
					<packageName></packageName>
					<regex>unlocklep</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Boss</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Rescue Whole Party</name>
					<script>for k,v in pairs(xaos.party.members) do
  if not v.charmie then
    if v.name ~= xaos.charactername then
      send("rescue " .. v.name)
    end
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^rescueall</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>DamageScenario</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>^FinishScenario (.*)</name>
					<script>table.insert(DamageScenarios,{name=matches[2],data=table.deepcopy (TotalCalc)})
--expandAlias("ClearScenario")</script>
					<command></command>
					<packageName></packageName>
					<regex>^FinishScenario (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^ClearScenario</name>
					<script>RoundCalc.Clear()
TotalCalc.Clear()</script>
					<command></command>
					<packageName></packageName>
					<regex>^ClearScenario</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^SetScenario (.*)</name>
					<script>scenario_round_count = tonumber(matches[2])
scenario_name = string.trim(matches[3])

expandAlias("ShowScenario")</script>
					<command></command>
					<packageName></packageName>
					<regex>^SetScenario ([0-9]*) (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ShowScenario</name>
					<script>combatwindow = Geyser.UserWindow:new({
    name = "combatwindow",
    x="80%",y="0%",height="500",width="300",
  })
  
combatdisplay = Geyser.MiniConsole:new({
  name="combat",
  x="2%", y="2%",
  autowrap=true,
  fgColor = "white",
  color = "black",
  width="96%", height="96%",
  fontSize=14,
  scrollBar = true,
},combatwindow)

combatdisplay:resetAutoWrap()

enableScrollBar("combat")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ShowScenario</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Score</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Set Score Variables</name>
					<script>scoregag=true
scoregrab=true
send("score")</script>
					<command></command>
					<packageName></packageName>
					<regex>scoreeat</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Beta</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="no" isFolder="no">
					<name>^checkbuffs</name>
					<script>echo(checkbuffs().missing)</script>
					<command></command>
					<packageName></packageName>
					<regex>^checkbuffs</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Empowers</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>FullEmpower</name>
					<script>fullautoempower=true
startempower()</script>
					<command></command>
					<packageName></packageName>
					<regex>^[f|F]ull[e|E]mpower(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>StartEmpower</name>
					<script>local command = matches[2]

if command == nil or command == "" then
  command=""
else
  command=string.trim(command)
end
expandAlias("multi 5 hero empower resist blunt")
expandAlias("multi 5 hero empower resist pierce")
expandAlias("multi 5 hero empower resist slash")

if command=="all" then
  temptime = 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist acid") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist cold") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist disease") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist fire") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist holy") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist light") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist lightning") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist magic") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist mental") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist negative") end)
  temptime = temptime + 1
  tempTimer(temptime,function ()expandAlias("multi 5 hero empower resist poison")  end)
  temptime = temptime + 1
  tempTimer(temptime,function ()expandAlias("multi 5 hero empower resist sound")  end)
  temptime = temptime + 1
  tempTimer(temptime,function ()expandAlias("multi 5 hero empower resist unholy")  end)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^[s|S]tart[e|E]mpower(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^autoempower</name>
					<script>local command = string.trim(matches[2])
local empoweritem = matches[3]
local amount = matches[4]

if empoweritem ~= nil then
  empoweritem = string.trim(empoweritem)
end

debugecho(empoweritem)
if command == "view" then
    helpheadecho("Auto Empower Configuration")
    local spacer = "                         "
    for k,v in pairs(xaos.config.empower) do
      helpbodyecho(string.sub(v.target .. spacer,1,25) .. ": " .. v.multiplier*100 .. "%")
    end
    helpbodyecho("")
    helpbodyecho("Buffer: " .. xaos.config.empowerbuffer)
    helpbodyecho("")
elseif command == "buffer" then
  xaos.config.empowerbuffer = tonumber(amount)
  helpbodyecho("")
  helpbodyecho("Buffer: " .. xaos.config.empowerbuffer)
  helpbodyecho("")
else
  --make sure it matches an actual empower
  if table.size(table.n_collect(xaos.heroempowers, function(elem) return elem.name == empoweritem end)) == 0 then
    echo("\n " .. empoweritem .. " is not a valid empower \n")
  else
  
    if command == "add" then
      table.insert(xaos.config.empower,{target=empoweritem,multiplier=amount/100})
    elseif command == "remove" then
      for i=1,table.size(xaos.config.empower) do
        if xaos.config.empower[i].target == empoweritem then
          table.remove(xaos.config.empower,i)
          break
        end
      end
    elseif command == "set" then
      local setempower = table.n_collect(xaos.config.empower, function(elem) return elem.target == empoweritem end)[1]
      if setempower == nil then
      table.insert(xaos.config.empower,{target=empoweritem,multiplier=amount/100})
      else
      setempower.multiplier=amount/100
      end
    end
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^autoempower (\w+)(?: )?([^0-9]+)?(?: )?([0-9]+)?</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>XUI</name>
				<script>if mysettings.UIType ~= "XUI" then return end</script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
			</AliasGroup>
			<AliasGroup isActive="no" isFolder="yes">
				<name>XaosUI</name>
				<script>if mysettings.UIType ~= "XaosUI" then return end</script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>UI</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>UIHelp</name>
						<script>local message =
  [[UI commands: &lt;white&gt;UIForce&lt;DarkSlateGrey&gt;, &lt;white&gt;UIAck&lt;DarkSlateGrey&gt;, &lt;white&gt;UITheme, &lt;white&gt;UIPrompt&lt;DarkSlateGrey&gt;, &lt;white&gt;UIColors&lt;DarkSlateGrey&gt;, &lt;white&gt;UILoad&lt;DarkSlateGrey&gt;,
           &lt;white&gt;UISave&lt;DarkSlateGrey&gt;, &lt;white&gt;UIModules&lt;DarkSlateGrey&gt;, &lt;white&gt;UISession&lt;DarkSlateGrey&gt;, and &lt;white&gt;UIHelp]]
ncom(message)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(h|H)(e|E)(l|L)(p|P)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>UIModules</name>
						<script>ncom("Available Modules")
cecho(
  "\n&lt;DarkSlateGrey&gt;           scripter\: scripting and automation tools &lt;white&gt;scripterHelp&lt;DarkSlateGrey&gt; for more info"
)
cecho(
  "\n&lt;DarkSlateGrey&gt;           questingWithNoax\: questmater interaction automation &lt;white&gt;questingHelp&lt;DarkSlateGrey&gt; for more info"
)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(m|M)(o|O)(d|D)(u|U)(l|L)(e|E)(s|S)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>UIAck</name>
						<script>ncom("This UI is a Geyser based MudletUI for XaosMud created by Noax and Reldi.")
cecho(
  "\n&lt;DarkSlateGrey&gt;           with thanks to our fellow players Beregost, Marchosias, Altair, Gobs, and Solious."
)
cecho(
  "\n&lt;DarkSlateGrey&gt;           And, A huge Thanks to Ragnar for capturing our imaginations for over a decade.\n"
)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(a|A)(c|C)(k|K)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>UISave</name>
						<script>UI.ConfigSave()
ncom("I broke this when I made the autoupdate, so it does nothing, sorry.")</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(s|S)(a|A)(v|V)(e|E)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>UILoad</name>
						<script>UI.ConfigLoad()
ncom("UI data and configuration has been loaded")</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(l|L)(o|O)(a|A)(d|D)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>UIForce</name>
						<script>local boolVar =  qolWithReldi.ShowAll
gagmode = true
tempTimer(
  .5,
  [[
	send("Score",]].. tostring(boolVar)..[[)
	send("Effects",]].. tostring(boolVar)..[[)
	send("Affects",]].. tostring(boolVar)..[[)
	send("Equip", ]].. tostring(boolVar)..[[)
	send("Inven", ]].. tostring(boolVar)..[[)
	send("hero empower",]].. tostring(boolVar)..[[)
	send("Party",]].. tostring(boolVar)..[[)
]]
)
tempTimer(5, [[gagmode = false]])
tempTimer(
5,
  function()
    UI.UINameDisplay()
    UI.CharClick(UI.CurrentChar)
    UI.Char2Click(UI.CurrentChar2)
    UI.Char3Click(UI.CurrentChar3)
    UI.ExtrasClick(UI.CurrentExtras)
  end
)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(F|f)(O|o)(R|r)(C|c)(E|e)$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Theme</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>UITheme custom</name>
							<script>local color1 = matches[15]
local color2 = matches[16]
local color3 = matches[17]
local matched1 = false
local matched2 = false
local matched3 = false
local message = "Error: "
for k, v in pairs(UI.colors) do
  if string.lower(color1) == string.lower(v) then
    matched1 = true
    color1 = tostring(v)
  end
  if string.lower(color2) == string.lower(v) then
    matched2 = true
    color2 = tostring(v)
  end
  if string.lower(color3) == string.lower(v) then
    matched3 = true
    color3 = tostring(v)
  end
end
if matched1 == false or matched2 == false or matched3 == false then
  if matched1 == false then
    message = tostring(message) .. tostring(color1) .. ", "
  end
  if matched2 == false then
    message = tostring(message) .. tostring(color2) .. ", "
  end
  if matched3 == false then
    message = tostring(message) .. tostring(color3) .. ", "
  end
  message = tostring(message) .. "-is invalid, Check your selections and try again."
  ncom(message)
else
  UI.ThemeCustom(color1, color2, color3)
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(t|T)(h|H)(e|E)(m|M)(e|E)\s(c|C)(u|U)(s|S)(t|T)(o|O)(m|M)\s(\w+)\s(\w+)\s(\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UITheme</name>
							<script>ncom("Available themes: Xaos, Reldi, Noax, Gobs, Solious, Blue, Green, Purple,")
cecho("\n&lt;DarkSlateGrey&gt;           Turquoise, White, Black, Grey, Random and Custom.")
echo("\n")
cecho("\n&lt;DarkSlateGrey&gt;           Syntax: &lt;white&gt;UITheme \&lt;ThemeName\&gt;")
echo("\n")
cecho(
  "\n&lt;DarkSlateGrey&gt;           Current: &lt;" ..
  UI.theme.Color1 ..
  "&gt;" ..
  UI.theme.Color1 ..
  " &lt;" ..
  UI.theme.Color5 ..
  "&gt;" ..
  UI.theme.Color5 ..
  " &lt;" ..
  UI.theme.Color6 ..
  "&gt;" ..
  UI.theme.Color6
)</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(t|T)(h|H)(e|E)(m|M)(e|E)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UITheme theme</name>
							<script>local theme = string.lower(matches[9])
if tostring(theme) == "custom" then
  ncom("Syntax: &lt;white&gt;UITheme Custom \&lt;color1\&gt; \&lt;color2\&gt; \&lt;color3\&gt;")
  echo("\n")
  cecho("\n&lt;DarkSlateGrey&gt;           for available colors enter &lt;white&gt;UIColors")
  cecho("\n&lt;DarkSlateGrey&gt;           There are three rules to test if a color will work.")
  cecho(
    "\n&lt;DarkSlateGrey&gt;           Rule 1\: If it is a two word color camel case it. E.G. DarkBlue"
  )
  cecho(
    "\n&lt;DarkSlateGrey&gt;           Rule 2\: If it is a one word color leave it all lowercase. E.G. blue"
  )
  cecho("\n&lt;DarkSlateGrey&gt;           Rule 3\: If it has an underscore remove it and follow rule 1.")
else
  UI.Theme(theme)
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(t|T)(h|H)(e|E)(m|M)(e|E)\s(\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UIColors</name>
							<script>local message = "&lt;DarkSlateGrey&gt;Available Colors: "
for k, v in pairs(UI.colors) do
  if tonumber(k) % 6 == 0 then
    if tostring(v) == "black" then
      message = tostring(message) .. "\n           &lt;grey&gt;" .. v .. "&lt;FloralWhite&gt;, "
    else
      message = tostring(message) .. "\n           &lt;" .. v .. "&gt;" .. v .. "&lt;FloralWhite&gt;, "
    end
  else
    if tostring(v) == "black" then
      message = tostring(message) .. "&lt;grey&gt;" .. v .. "&lt;FloralWhite&gt;, "
    else
      message = tostring(message) .. "&lt;" .. v .. "&gt;" .. v .. "&lt;FloralWhite&gt;, "
    end
  end
end
ncom(message)</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(c|C)(o|O)(l|L)(o|O)(r|R)(s|S)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UIFontSize</name>
							<script>local fontSize = matches[12]
UI.theme.FontSize = fontSize
expandAlias(UIForce)</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(f|F)(o|O)(n|N)(t|T)(s|S)(i|i)(z|Z)(e|E)\s(\d+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Prompt</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>UIPrompt prompt</name>
							<script>local prompt = string.lower(matches[10])
if tostring(prompt) == "noax" then
  send(
    "prompt %c^rHP %h ^bMana %m ^gMove %v ^yExp %X^o, ^wStyle:^o %C^w Room:^o %r ^wExits:^o %e%c^^"
  )
elseif tostring(prompt) == "marcho" then
  send(
    "prompt %c^rHEALTH %h ^bMANA %m ^gMVM %v ^wSTIL ^o%C ^yXP %X ^wDirections  ^o%e  ^wHungry  ^o%B %c^^"
  )
elseif tostring(prompt) == "obsc" then
  send("prompt %c^w&lt;^r%hhp ^b%mmn ^g%vmv^w&gt; &lt;^o%t^w&gt; &lt;^o%C^w&gt; &lt;^y%X^w&gt;%c^^")
elseif tostring(prompt) == "newbie" then
  send("prompt %c^w&lt;^r%h^r/ hp ^b%m/ m ^g%v/ mv^w&gt; [^y%X^w]%c^^")
elseif tostring(prompt) == "all" then
  send("prompt %c^w&lt;^r%hhp ^b%mm ^g%vmv^w&gt;%c^^")
elseif tostring(prompt) == "creation" then
  send("prompt %c^r%h Life ^b%m Mana ^g%v Moves^o,^y%X XP/lvl^o&gt;%c^^")
else
  ncom(tostring(prompt) .. " -is invalid, Check your selections and try again.")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(p|P)(r|R)(o|O)(m|M)(p|P)(t|T)\s(\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UIPrompt</name>
							<script>ncom("Available prompts: Noax, Marcho, Obsc, Newbie, All, and Creation")
echo("\n")
cecho("\n&lt;DarkSlateGrey&gt;           Syntax: &lt;white&gt;UIPrompt \&lt;PromptName\&gt;")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(p|P)(r|R)(o|O)(m|M)(p|P)(t|T)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Session</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>UISession</name>
							<script>ncom("Syntax: &lt;white&gt;UISession\&lt;reset\&gt;")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(S|s)(E|e)(S|s)(S|s)(I|i)(O|o)(N|n)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UISession reset</name>
							<script>local reset = matches[11]
if string.lower(reset) == "reset" then
  UI.Session = getTime()
	ncom("Session timer reset")
	feedManager("Session timer reset")
  if tostring(UI.CurrentExtras) == "Feed" then
    UI.UpdateLabelFeed()
  end
else
  ncom("Syntax: &lt;white&gt;UISession\&lt;reset\&gt;")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(S|s)(E|e)(S|s)(S|s)(I|i)(O|o)(N|n)\s(\w+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Exp</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Report</name>
							<script>ncom("Syntax: &lt;white&gt;Report \&lt;Min\|Hour\|Session\|time in seconds\&gt;")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(R|r)(E|e)(P|p)(O|o)(R|r)(T|t)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Report argWord</name>
							<script>local term = matches[8]
local total = 0
local dings = 0
if string.lower(term) == "min" then
  term = 60
  total = expPerTerm(term)
  dings = math.floor(tonumber(total) / 100000)
  ncom("Minute exp report: " .. total .. "exp \(" .. dings .. " dings\).")
  feedManager("Minute exp report: " .. total .. "exp \(" .. dings .. " dings\).")
elseif string.lower(term) == "hour" then
  term = 3600
  total = expPerTerm(term)
  dings = math.floor(tonumber(total) / 100000)
  ncom("Hourly exp report: " .. total .. "exp \(" .. dings .. " dings\).")
  feedManager("Hourly exp report: " .. total .. "exp \(" .. dings .. " dings\).")
elseif string.lower(term) == "session" then
  local now = math.floor(getEpoch())
  local session = tonumber(now) - tonumber(UI.SessionEpoch)
  if tonumber(session) &gt;= 86400 then
    session = 86400
  end
  term = session
  total = expPerTerm(term)
  dings = math.floor(tonumber(total) / 100000)
  ncom("Session exp report: " .. total .. "exp \(" .. dings .. " dings\).")
  feedManager("Session exp report: " .. total .. "exp \(" .. dings .. " dings\).")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(R|r)(E|e)(P|p)(O|o)(R|r)(T|t)\s(\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Report argNumber</name>
							<script>local term = matches[8]
local total = expPerTerm(term)
local dings = math.floor(tonumber(total)/100000)
ncom("Over " .. tostring(term) .. " seconds: " .. total .. "exp \(" .. dings .. " dings\).")
feedManager("Over " .. tostring(term) .. " seconds: " .. total .. "exp \(" .. dings .. " dings\).")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(R|r)(E|e)(P|p)(O|o)(R|r)(T|t)\s(\d+)$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="no" isFolder="yes">
				<name>qolWithReldi</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="no" isFolder="yes">
					<name>classes</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>barbarian</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>qolResolve</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>resolving</name>
								<script>local party = scripter.Party
local boolVar =  qolWithReldi.ShowAll
if party == "follow" then
  if combat then
    send("resolve",boolVar)
  else
    resolveTimer = tempTimer(1, [[expandAlias("resolving",false)]])
  end
else
  send("resolve",boolVar)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(R|r)(E|e)(S|s)(O|o)(L|l)(V|v)(I|i)(N|n)(G|g)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>resolving arg</name>
								<script>local arg = string.lower(tostring(matches[11]))
if arg == "on" then
  enableAlias("resolving")
  enableTimer("qolFailsafe")
  enableTrigger("resolving")
  rcom("Auto resolve is now &lt;white&gt;On")
  feedManager("Auto resolve is now &lt;white&gt;On")
  qolWithReldi.Resolving = true
elseif arg == "off" then
  disableAlias("resolving")
  rcom("Auto resolve is now &lt;white&gt;Off")
  feedManager("Auto resolve is now &lt;white&gt;Off")
  qolWithReldi.Resolving = false
else
  rcom(
    "Syntax: &lt;white&gt;Resolve &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;use '&lt;white&gt;help resolve&lt;DarkSlateGrey&gt;' to learn what it does."
  )
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(R|r)(E|e)(S|s)(O|o)(L|l)(V|v)(I|i)(N|n)(G|g)\s(\w+)$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>thief</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>qolTrance</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="no" isFolder="no">
								<name>trancing</name>
								<script>local party = scripter.Party
local boolVar =  qolWithReldi.ShowAll
if party == "follow" then
  if combat then
    send("trance",boolVar)
  else
    tranceTimer = tempTimer(1, [[expandAlias("trancing",false]])
  end
else
  send("trance",boolVar)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(T|t)(R|r)(A|a)(N|n)(C|c)(I|i)(N|n)(G|g)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>trancing arg</name>
								<script>local arg = tostring(string.lower(matches[10]))
if arg == "on" then
  enableAlias("trancing")
  enableTimer("qolFailsafe")
  enableTrigger("trancing")
  rcom("Auto trance is now &lt;white&gt;On")
  feedManager("Auto trance is now &lt;white&gt;On")
  qolWithReldi.Trancing = true
elseif arg == "off" then
  disableAlias("trancing")
  disableTrigger("trancing")
  rcom("Auto trance is now &lt;white&gt;Off")
  feedManager("Auto trance is now &lt;white&gt;Off")
  qolWithReldi.Trancing = false
else
  rcom(
    "Syntax: &lt;white&gt;trance &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;use '&lt;white&gt;help trance&lt;DarkSlateGrey&gt;' to learn what it does."
  )
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(T|t)(R|r)(A|a)(N|n)(C|c)(I|i)(N|n)(G|g)\s(\w+)$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>warrior</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>qolBerserk</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>berserking</name>
								<script>local party = scripter.Party
local boolVar =  qolWithReldi.ShowAll
if party == "follow" then
  if combat then
    send("berserk",boolVar)
  else
    berserkTimer = tempTimer(1, [[expandAlias("berserking",false]])
  end
else
  send("berserk",boolVar)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(B|b)(E|e)(R|r)(S|s)(E|e)(R|r)(K|k)(I|i)(N|n)(G|g)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>berserking arg</name>
								<script>local arg = tostring(string.lower(matches[12]))
local Berserker = false
local class = tostring(string.lower(UI.name.Class))
if string.match(class, "berserker") then
  Berserker = true
end
if arg == "on" then
  enableAlias("berserking")
  enableTimer("qolFailsafe")
  enableTrigger("berserking")
  if Berserker then
    enableTrigger("berserker")
  end
  rcom("Auto berserk is now &lt;white&gt;On")
  feedManager("Auto berserk is now &lt;white&gt;On")
  qolWithReldi.Berserking = true
elseif arg == "off" then
  disableAlias("berserking")
  disableTrigger("berserking")
  disableTrigger("berserker")
  rcom("Auto berserk is now &lt;white&gt;Off")
  feedManager("Auto berserk is now &lt;white&gt;Off")
  qolWithReldi.Berserking = false
else
  rcom(
    "Syntax: &lt;white&gt;Berserk &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;use '&lt;white&gt;help berserk&lt;DarkSlateGrey&gt;' to learn what it does."
  )
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(B|b)(E|e)(R|r)(S|s)(E|e)(R|r)(K|k)(I|i)(N|n)(G|g)\s(\w+)$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>qolCenter</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>centering</name>
								<script>local boolVar =  qolWithReldi.ShowAll
if not combat then
  send("center", boolVar)
else
  centerTimer = tempTimer(1, [[expandAlias("centering",false]])
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(C|c)(E|e)(N|n)(T|t)(E|e)(R|r)(I|i)(N|n)(G|g)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>centering arg</name>
								<script>local arg = tostring(string.lower(matches[11]))
if arg == "on" then
  enableAlias("centering")
  enableTimer("qolFailsafe")
  enableTrigger("centering")
  rcom("Auto center is now &lt;white&gt;On")
  feedManager("Auto center is now &lt;white&gt;On")
  qolWithReldi.Centering = true
elseif arg == "off" then
  disableAlias("centering")
  disableTrigger("centering")
  rcom("Auto center is now &lt;white&gt;Off")
  feedManager("Auto center is now &lt;white&gt;Off")
  qolWithReldi.Centering = false
else
  rcom(
    "Syntax: &lt;white&gt;Center &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;use '&lt;white&gt;help center&lt;DarkSlateGrey&gt;' to learn what it does."
  )
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(C|c)(E|e)(N|n)(T|t)(E|e)(R|r)(I|i)(N|n)(G|g)\s(\w+)$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>qolWarcry</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>warcrying</name>
								<script>local boolVar =  qolWithReldi.ShowAll
local party = scripter.Party
if party == "follow" then
  if combat then
    local arg = qolWithReldi.Warcry
    if string.lower(arg) ~= "none" then
      send("warcry "..arg,boolVar)
    else
      send("warcry",boolVar)
    end
  else
    warcryTimer = tempTimer(1, [[expandAlias("warcrying",false]])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(W|w)(A|a)(R|r)(C|c)(R|r)(Y|y)(I|i)(N|n)(G|g)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>warcrying arg</name>
								<script>local arg = tostring(matches[11])
if string.lower(arg) == "off" then
  disableAlias("warcrying")
  disableTrigger("warcrying")
  rcom("Auto warcry is now &lt;white&gt;Off")
  feedManager("Auto warcry is now &lt;white&gt;Off")
  qolWithReldi.Warcrying = false
elseif string.lower(arg) == "on" then
  enableAlias("warcrying")
  enableTimer("qolFailsafe")
  enableTrigger("warcrying")
  rcom("Auto warcry is now &lt;white&gt;On")
  feedManager("Auto warcry is now &lt;white&gt;On")
  qolWithReldi.Warcrying = true
elseif string.lower(arg) == "none" then
  rcom(
  	    "Warcry will stop yelling.\n"
  	  )
      qolWithReldi.Warcry = arg
else
  qolWithReldi.Warcry = arg
  rcom(
  	    "Warcry will now yell \"&lt;white&gt;" .. arg .. "&lt;DarkSlateGrey&gt;\"\n"
  	  )
end


</script>
								<command></command>
								<packageName></packageName>
								<regex>^(W|w)(A|a)(R|r)(C|c)(R|r)(Y|y)(I|i)(N|n)(G|g)\s(\w+)$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>misc</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="no" isFolder="no">
						<name>QuestComplete</name>
						<script>--This trigger will try to complete all quests it can.
--Syntax: "QuestComplete"
local boolVar =  qolWithReldi.ShowAll
for i=1, #questing.QuestsCompleted do
	send("Quest complete " ..questing.QuestsCompleted[i], boolVar)

end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(Q|q)(U|u)(E|e)(S|s)(T|t)(C|c)(O|o)(M|m)(P|p)(L|l)(E|e)(T|t)(E|)$</regex>
					</Alias>
					<AliasGroup isActive="no" isFolder="yes">
						<name>HeroEmpowerment</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>HeroEmpowerment arg</name>
							<script>--This trigger will try to empower the argument five (5) times.
--Syntax: "HeroEmpowerment arg"
local empower = matches[17]
local boolVar =  qolWithReldi.ShowAll
for i = 1,5 do
	send("hero empower "..empower, boolVar)
end

send("hero empower", boolVar)</script>
							<command></command>
							<packageName></packageName>
							<regex>^(H|h)(E|e)(R|r)(O|o)(E|e)(M|m)(P|p)(O|o)(W|w)(E|e)(R|r)(M|m)(E|e)(N|n)(T|t)\s(.*)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>HeroEmpowerment</name>
							<script>--This trigger will try to empower the argument five (5) times.
--Syntax: "HeroEmpowerment arg"
rcom(
    "Syntax: &lt;white&gt;HerEmpowerment &lt;Hero Empower&gt;\n            &lt;DarkSlateGrey&gt;This command will try to empower that hero empower five (5) times.\n            Use '&lt;white&gt;hero empower&lt;DarkSlateGrey&gt;' to see what the command accepts."
  )</script>
							<command></command>
							<packageName></packageName>
							<regex>^(H|h)(E|e)(R|r)(O|o)(E|e)(M|m)(P|p)(O|o)(W|w)(E|e)(R|r)(M|m)(E|e)(N|n)(T|t)$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>showall arg</name>
						<script>local arg = string.lower(tostring(matches[9]))
if arg == "on" then
  rcom("Showing all commands sent by the UI")
  feedManager("Showing all commands sent by the UI")
  qolWithReldi.ShowAll = true
elseif arg == "off" then
  rcom("Hiding all commands sent by the UI")
  feedManager("Hiding all commands sent by the UI")
  qolWithReldi.ShowAll = false
else
  rcom(
    "Syntax: &lt;white&gt;Showall &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;This will show or hide all commands automatically sent to the mud by the UI."
  )
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(S|s)(H|h)(O|o)(W|w)(A|a)(L|l)(L|l)\s{0,1}(\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>qolHelp</name>
						<script>local message =
  [[QOL commands: &lt;white&gt;Resolving&lt;DarkSlateGrey&gt;, &lt;white&gt;Trancing&lt;DarkSlateGrey&gt;, &lt;white&gt;Berserking&lt;DarkSlateGrey&gt;, &lt;white&gt;Centering&lt;DarkSlateGrey&gt;, &lt;white&gt;Warcrying&lt;DarkSlateGrey&gt;,
            &lt;white&gt;PartyHeal&lt;DarkSlateGrey&gt;, &lt;white&gt;PartyHealWord&lt;DarkSlateGrey&gt;, &lt;white&gt;PartyGuard&lt;DarkSlateGrey&gt;, &lt;white&gt;PartyRescue&lt;DarkSlateGrey&gt;, &lt;white&gt;QuestComplete
            &lt;white&gt;HeroEmpowerment&lt;DarkSlateGrey&gt;, &lt;white&gt;ShowAll&lt;DarkSlateGrey&gt;, and &lt;white&gt;QOLHelp]]
rcom(message)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(q|Q)(o|O)(l|L)\s{0,1}(h|H)(e|E)(l|L)(p|P)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>party</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>partyguard</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>partyguard arg</name>
							<script>local arg = tostring(string.lower(matches[12]))
if arg == "on" then
  enableTrigger("partyguard")
  rcom("You will now attempt to guard when asked.")
  feedManager("You will now attempt to guard when asked.")
  qolWithReldi.partyguard = "On"
elseif arg == "off" then
  disableTrigger("partyguard")
  rcom("You will no longer attempt to guard when asked.")
  feedManager("You will no longer attempt to guard when asked.")
  qolWithReldi.partyguard = "Off"
else
  rcom(
    "Syntax: &lt;white&gt;PartyGuard &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;Toggles whether or not you will attemtpt to guard."
  )
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(G|g)(U|u)(A|a)(R|r)(D|d)\s{0,1}(\w+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>partyheal</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>partyheal arg</name>
							<script>local arg = tostring(string.lower(matches[11]))
if arg == "on" then
  enableTrigger("partyheal")
  rcom("You will now attempt to heal when asked.")
  feedManager("You will now attempt to heal when asked.")
  qolWithReldi.partyheal = "On"
elseif arg == "off" then
  disableTrigger("partyheal")
  rcom("You will no longer attempt to heal when asked.")
  feedManager("You will no longer attempt to heal when asked.")
  qolWithReldi.partyheal = "Off"
else
  rcom(
    "Syntax: &lt;white&gt;PartyHeal &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;Toggles whether or not you will attemtpt to heal.\n            &lt;DarkSlateGrey&gt;Use &lt;white&gt;PartyHealWord Arg&lt;DarkSlateGrey&gt; to modify the spell attempted."
  )
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(H|h)(E|e)(A|a)(L|l)\s{0,1}(\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>partyhealword arg</name>
							<script>local arg = tostring(string.lower(matches[15]))
local Change = true
if arg == "reset" or arg == "heal"then
  arg = "heal"
  rcom("You new heal word is " ..arg..".")
  feedManager("You new heal word is " ..arg..".")
  qolWithReldi.healword = arg
elseif arg == "revitalize" then
  arg = "revitalize"
  rcom("You new heal word is " ..arg..".")
  feedManager("You new heal word is " ..arg..".")
  qolWithReldi.healword = arg
elseif arg == "mend" then
  arg = "mend"
  rcom("You new heal word is " ..arg..".")
  feedManager("You new heal word is " ..arg..".")
  qolWithReldi.healword = arg
else
  Change = false
  rcom(
    "Syntax: &lt;white&gt;PartyHealWord &lt;Heal|Mend|Revitalize|Reset&gt;."
  )
end
</script>
							<command></command>
							<packageName></packageName>
							<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(H|h)(E|e)(A|a)(L|l)(W|w)(O|o)(R|r)(D|d)\s{0,1}(\w+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>partyrescue</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>partyrescue arg</name>
							<script>local arg = tostring(string.lower(matches[13]))
if arg == "on" then
  enableTrigger("partyrescue")
  rcom("You will now attempt to rescue when asked.")
  feedManager("You will now attempt to rescue when asked.")
  qolWithReldi.partyrescue = "On"
elseif arg == "off" then
  disableTrigger("partyrescue")
  rcom("You will no longer attempt to rescue when asked.")
  feedManager("You will no longer attempt to rescue when asked.")
  qolWithReldi.partypescue = "Off"
else
  rcom(
    "Syntax: &lt;white&gt;PartyRescue &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;Toggles whether or not you will attemtpt to rescue.\n            &lt;DarkSlateGrey&gt;Use &lt;white&gt;PartyHealWord Arg&lt;DarkSlateGrey&gt; to modify the spell attempted."
  )
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(R|r)(E|e)(S|s)(C|c)(U|u)(E|e)\s{0,1}(\w+)$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage>
		<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
			<name>Left</name>
			<packageName></packageName>
			<script></script>
			<css></css>
			<commandButtonUp></commandButtonUp>
			<commandButtonDown></commandButtonDown>
			<icon></icon>
			<orientation>0</orientation>
			<location>0</location>
			<posX>0</posX>
			<posY>0</posY>
			<mButtonState>1</mButtonState>
			<sizeX>0</sizeX>
			<sizeY>0</sizeY>
			<buttonColumn>1</buttonColumn>
			<buttonRotation>0</buttonRotation>
			<buttonColor>#ffffff</buttonColor>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Help</name>
				<packageName></packageName>
				<script>expandAlias("xhelp all")</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Toggle Scripting</name>
				<packageName></packageName>
				<script>huntTarget = huntTarget or "Helpful Bob"
if auto_hunt then
  auto_hunt = false
  xuicom("You will no longer attempt to automatically hunt targets")
else
  send("auto ")
  auto_hunt = true
  xuicom(
    "You will attempt to automatically hunt something. Current settings indicate you're going to hunt " ..
    huntTarget
  )
	xuicom("Currently, tracking "..wielded.." as your wielded weapon.")
  if statusFollowing then
    --This bit handles the "What do I do if I'm following someone?" question
    obsessionMode = true
    huntTarget = followTarget
    location = nil
    xuicom("You are following " .. followTarget .. " and this script will attempt to hunt them.")
    xuicom("Obsession mode is on by default. Use &lt;white&gt;obsessionoff&lt;light_blue&gt; to turn it off.\n")
    cechoLink(
      "[ XUI ] &lt;light_blue&gt;Click here for more info on obsession mode.\n",
      [[xuicom("Obsession mode inputs hunt aggressively in an attempt to keep up with the party leader.\n")]],
      "obsession mode info",
      true
    )
    if huntTarget then
    else
      variableCheck(huntTarget, "hunt location")
      auto_hunt = false
    end
  end
end
combat = false
hunting = false</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
		</ActionGroup>
		<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
			<name>Middle</name>
			<packageName></packageName>
			<script></script>
			<css></css>
			<commandButtonUp></commandButtonUp>
			<commandButtonDown></commandButtonDown>
			<icon></icon>
			<orientation>1</orientation>
			<location>0</location>
			<posX>0</posX>
			<posY>0</posY>
			<mButtonState>1</mButtonState>
			<sizeX>0</sizeX>
			<sizeY>0</sizeY>
			<buttonColumn>1</buttonColumn>
			<buttonRotation>0</buttonRotation>
			<buttonColor>#ffffff</buttonColor>
		</ActionGroup>
		<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
			<name>Right</name>
			<packageName></packageName>
			<script></script>
			<css></css>
			<commandButtonUp></commandButtonUp>
			<commandButtonDown></commandButtonDown>
			<icon></icon>
			<orientation>0</orientation>
			<location>0</location>
			<posX>0</posX>
			<posY>70</posY>
			<mButtonState>1</mButtonState>
			<sizeX>0</sizeX>
			<sizeY>0</sizeY>
			<buttonColumn>1</buttonColumn>
			<buttonRotation>0</buttonRotation>
			<buttonColor>#ffffff</buttonColor>
			<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>General</name>
				<packageName></packageName>
				<script></script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>0</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>51</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>XUI Help</name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Change log</name>
						<packageName></packageName>
						<script>xuicom("Click a version number to see what was added.\n")
cechoLink(
  "0.1.3\n",
  [[xuicom("Made the bar interface more readable.\nAdded warriors to autogain\nAdded thieves to autogain\nFixed a bug when hunting with no target\nAdded a settings check function in the toolbar. This should help you see what settings you have toggled until I figure out a better UI solution.\nSelecting a script option will give the user more information\nFixed a bug that made auto renovi not auto renovi at all\nFollow mode exists now. See the help menu for information on how to use\nClass toggles refactored\nSearch mode has toggles now for fragments and money while auto hunting\nBroadened the scope of chaos hunt script\nGave cleric auto healing a much needed refactoring\nGave thief trance a much needed refactoring\n")]],
  "What was added in 0.1.3",
  true
)
cechoLink(
  "0.1.6\n",
  [[cecho("Added in a damage per round function. Should work out of the box.")]],
  "What was added in 0.1.6",
  true
)
cechoLink(
  "0.1.7\n",
  [[xuicom("Fixed it so auto should only be an alias when used at the start of a aline.\nAdded a quick and dirty resolve hack for barbarian.\nAdded fire widows and vicious driders to the hunting lists.")]],
  "What was added in 0.1.7",
  true
)
cechoLink(
  "0.1.8\n",
  [[xuicom("Cleaned up autofollow features. Should work more consistently.\nExtended the sustained DPR range to about 11 rounds. Should better reflect damage over time in terms of rounds.\nRounded numbers in the DPR meter.\nAdded an experience rate measurement.\nFixed a bug with customHunt that made it never work.XP Bar no longer shoots to the moon when you're over 100%. Now displays current non&gt;100 value and all the saved up dings.")]],
  "What was added in 0.1.8",
  true
)
cechoLink(
  "0.1.11\n",
  [[xuicom("Changed the incoming damager meter for the damage inertia function. This function will give you an at a glance way to tell if you're taking damage, or healing, and how much damage or healing you're receiving.\nAdded a scroll skillup utility. Activate it and buy and recite a scroll at the Viridian Spider.\nFixed some OOC patterns.\nAdded an enchantment refactoring utility. Activate it to retrieve the appropriate syntax.")]],
  "What was added in 0.1.11",
  true
)
cechoLink(
  "0.1.12\n",
  [[xuicom("Made the scaling in the XUI condition flow meter smoother. I accidentally tied it's rate of change to prompt instead of time.")]],
  "What was added in 0.1.12",
  true
)
cechoLink(
  "0.1.13\n",
  [[xuicom("Fixed some things with the condition flow bar, broke some other things. Fuck.")]],
  "What was added in 0.1.13",
  true
)
cechoLink(
  "0.1.14\n",
  [[xuicom("Added yeti undead to swamps rotation\nAuto heal now actual works\nAuto renovi should work without having to cast it first now.\nAuto trance will now recognize that it's fallen if someone knocks it off of you.\nA chat size customization has been added.\nChat timestamp toggle added.\nYou can now customize the delay on hunt in the autohunt script.\nRefactored chat features (Mostly just for me)")]],
  "What was added in 0.1.14",
  true
)
cechoLink(
  "0.1.15\n",
  [[xuicom("This changelog is now actually accessible.\nFixed an issue where gtell was logged twice.\nExtended full chat features to some that missed it.\nFixed the auto rearming function.\nShould no longer attempt to auto heal when that feature isn't selected.")]],
  "What was added in 0.1.15",
  true
)
cechoLink(
  "0.1.16\n",
  [[xuicom("Auto dividing will for mentalists.\nCooldown on auto reply to tells.\nAuto drink added. Four different options.\nAuto trance refactored. Should spam trance less, but spam auto trance more.")]],
  "What was added in 0.1.16",
  true
)
cechoLink(
  "0.1.17\n",
  [[xuicom("New &lt;white&gt;XP wave&lt;light_blue&gt; should help you visualize your XP flow. Each column is 10 minutes worth of data.")]],
  "What was added in 0.1.17",
  true
)

cechoLink(
  "0.1.19\n",
  [[xuicom("Bclear should now only trigger if you're in the auto script.\nAdded a warcry management function for knights/berserkers.\nCleaned up after myself in some backend stuff.\nAutomated proceed is now under QOL Auto.\nCleaned up gnolls scripting targets.\nCleaned up upper swamps scripting targets.\nCleaned up lower swamps scripting targets.\nHooded jerks now captured in gtell.\nThe OOC window will now update it's position in a lot more instances than before, meaning you can resize your window and OOC and it will update a new relative position.\nNew condition bar added. Should make combat more readable. Can be deactivated in XUI menu.\nGeneralized auto healing so you can now use heal, mass healing, mend, whatever.\nDetermThreshold is a thing now.\nGuerilla mode added for Guarng. Experimental, tempermental.\nWhen in auto scripting mode, the script will now stop and try to rest if your mana falls below a certain threshold.")]],
  "What was added in 0.1.19",
  true
)
</script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
					</Action>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>How to use</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Aggressive follow</name>
							<packageName></packageName>
							<script>xuicom("Just follow someone with the command &lt;white&gt;follow&lt;light_blue&gt; (make sure it's fully typed out) and then select autohunt.")</script>
							<css>		</css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>disarm protection</name>
							<packageName></packageName>
							<script>xuicom("XUI comes with built in disarm protection. It will first attempt to rewield immediately after being disarmed, if you don't immediately rewield it, it will continue to attempt to wield a weapon every round until successful.")
xuicom("To initialize this feature use &lt;white&gt;wield (arg)&lt;light_blue&gt;, being more specific using apostraphes is recommended so you will rewield precisely what you intend when disarmed.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>What is...</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Group of purple columns.</name>
							<packageName></packageName>
							<script>xuicom("This is the experience wave utility, intended to allow you to track your XP rate in an intuitive and visual way. Starting from the right, the XP wave function will begin to fill out as you kill, relative to the highest rate you've achieved. Each column is a 10 minute period of data, and overall all 6 columns track an hours worth of data.")

xuicom("In short, each column is 10 minutes and represents the % of xp per level you got.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Output box</name>
							<packageName></packageName>
							<script>xuicom("Under output: Last round tracks your last 3 seconds worth of damage information. Over time tracks the last 33 seconds worth of data on average. It attempts to only track what's happening in combat, but the data in this area may be dialed down by the amount of time you spend moving towards your target not doing any damage")
xuicom("Incoming: This is the condition flow utility. It tracks the last few rounds worth of data and reports back the relative change in your character's condition. Small and red means you, overall, took a small bit of damage. Small and green means that regardless of what happened in the last few rounds, overall you healed by a little. Black is neutral. Consider hero recalling if this bar is big and red.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
				</ActionGroup>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>XUI </name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Chat settings</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Spacing</name>
							<packageName></packageName>
							<script>if spacing then
	spacing = false
	cecho("&lt;light_blue&gt;[ XUI Settings ] Spacing in the miniconsole for chat will now be single.")
else
	spacing = true
	cecho("&lt;light_blue&gt;[ XUI Settings ] Spacing in the miniconsole for chat will now be double.")
end

createChatConsole()</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Gag chat input</name>
							<packageName></packageName>
							<script>if gagging then
	gagging = false
	cecho("&lt;light_blue&gt;You will now see chat input directly to the MUD.")
else
	gagging = true
	cecho("&lt;light_blue&gt;Chat input will only be shown in the miniconsole.")
end

createChatConsole()</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Font Size</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Larger</name>
								<packageName></packageName>
								<script>if chatFontSize == nil then chatFontSize = 8 end
chatFontSize = (chatFontSize + 1)
cecho("OOC","[ XUI ] &lt;light_blue&gt;Font size set to "..chatFontSize.."\n")

createChatConsole()</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Smaller</name>
								<packageName></packageName>
								<script>if chatFontSize == nil then chatFontSize = 8 end

if chatFontSize &gt; 6 then
chatFontSize = (chatFontSize - 1)
cecho("OOC","[ XUI ] &lt;light_blue&gt;Font size set to "..chatFontSize.."\n")
end


createChatConsole()</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Timestamps</name>
							<packageName></packageName>
							<script>useTimeStamps = variableToggle (useTimeStamps, "Nothing", "Time stamps will no longer appear in the chat window.", "Time stamps for the chat window activated." )

createChatConsole()</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Window size</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Wider</name>
								<packageName></packageName>
								<script>chatWidth = chatWidth + 100

createChatConsole()</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Thinner</name>
								<packageName></packageName>
								<script>chatWidth = chatWidth - 100

createChatConsole()</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
					</ActionGroup>
					<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Lower UI Settings</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Health Bar</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="no" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>ElementSize</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<Action isActive="no" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Element Colors</name>
							<packageName></packageName>
							<script>xuicom("To alter your UI colors, find the hex color code you'd like then use the following commands to alter them.")
xuicom("Health Bar: &lt;white&gt;healthCol (R, G, B)")
xuicom("Mana Bar: &lt;white&gt;manaCol (R, G, B)")
xuicom("Movement bar: &lt;white&gt;mvmCol (R, G, B)")
xuicom("Experience bar: &lt;white&gt;xpCol (R, G, B)")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>UI Settings</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Chat</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="yes" isFlatButton="no" useCustomLayout="no">
								<name>Hide</name>
								<packageName></packageName>
								<script>oocHidden = oocHidden or false

if not oocHidden then
	OOC:hide(auto)
	oocHidden = true
else
	OOC:show(auto)
	oocHidden = false
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Data</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Hide</name>
								<packageName></packageName>
								<script>dataHidden = dataHidden or false

if not dataHidden then
	dataCon:hide(auto)
	dataHidden = true
else
	dataCon:show(auto)
	dataHidden = false
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Toggle constant condition bar</name>
							<packageName></packageName>
							<script>conditionXUI = variableToggle(conditionXUI, "", "You will no longer see the Condition of enemies in the UI.", "You will now see the condition of enemies in the UI.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Reduced reduced spam</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Toggle</name>
							<packageName></packageName>
							<script>rrSpam = variableToggle (rrSpam, "", "You will now experience Xaos in it's normal mode.", "Summarizing damage events." )</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
				</ActionGroup>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Autohunt</name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Toggle</name>
						<packageName></packageName>
						<script>huntTarget = huntTarget or "Helpful Bob"
if auto_hunt then
  auto_hunt = false
  xuicom("You will no longer attempt to automatically hunt targets")
else
  send("auto ")
  auto_hunt = true
  xuicom(
    "You will attempt to automatically hunt something. Current settings indicate you're going to hunt " ..
    huntTarget
  )
	xuicom("Currently, tracking "..wielded.." as your wielded weapon.")
  if statusFollowing then
    --This bit handles the "What do I do if I'm following someone?" question
    obsessionMode = true
    huntTarget = followTarget
    location = nil
    xuicom("You are following " .. followTarget .. " and this script will attempt to hunt them.")
    xuicom("Obsession mode is on by default. Use &lt;white&gt;obsessionoff&lt;light_blue&gt; to turn it off.\n")
    cechoLink(
      "[ XUI ] &lt;light_blue&gt;Click here for more info on obsession mode.\n",
      [[xuicom("Obsession mode inputs hunt aggressively in an attempt to keep up with the party leader.\n")]],
      "obsession mode info",
      true
    )
    if huntTarget then
    else
      variableCheck(huntTarget, "hunt location")
      auto_hunt = false
    end
  end
end
combat = false
hunting = false</script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
					</Action>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Hunt Location</name>
						<packageName></packageName>
						<script>echo("Is this global?")</script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Chaos</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Lower Chaos (H1)</name>
								<packageName></packageName>
								<script>huntTarget = "chaos orc"
killTarget = "chaos"
location = "lower chaos"
cecho("&lt;orange&gt;Hunting location set to Lower Chaos (H1), happy hunting\n")
cecho("Danger: The Chaosling shard.\nSome swarm risk.\n")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Upper Swamps (H25)</name>
								<packageName></packageName>
								<script>huntTarget = "gnomish zombie"
killTarget = "zombie"
location = "upper swamps"
cecho("&lt;orange&gt;Hunting location set to Upper Swamps (H25), happy hunting\n")
cecho("Bosses: Kalshet. \nThe enemies here are primarily undead.\nSome swarm risk.\nThis area has masterful quality rings.\n")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Caves (H50)</name>
								<packageName></packageName>
								<script>huntTarget = "chaos mycanoid"
killTarget = "chaos"
location = "chaos caves"


cechoLink("&lt;orange&gt;Hunting location set to Chaos Caves (H50), happy hunting\n[[Click this text for additional info on this area.]]\n",
	[[cecho("Boss: Chaos Ogre Foreseer. Queen Anasasi.\nThis area is a high swarm risk.\nGreat selection of masterful quality weapons.\nGreat floater from the ogre foreseer.\nSome great stock items drop here.\n")]],
	"additional area info",
	true)
</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Lower Swamps (H50)</name>
								<packageName></packageName>
								<script>huntTarget = "ogre invoker"
killTarget = "zombie"
location = "lower swamps"
cecho("&lt;orange&gt;Hunting location set to Lower Swamps (H50), happy hunting\n")
cecho("Bosses: Grexs, Tlakvaast, Thersheln\n")
cecho("This area is primarily a swarm area. \nThe enemies are primarily undead. \nThis area has good supreme quality rings.\n")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Inferno</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Vicious Driders</name>
								<packageName></packageName>
								<script>huntTarget = "vicious drider"
killTarget = "drider"
location = "vicious drider"
cecho("&lt;orange&gt;Hunting location set to Vicious Driders, happy hunting\n")
</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Fire Widows</name>
								<packageName></packageName>
								<script>huntTarget = "fire widow"
killTarget = "widow"
location = "fire widows"
cecho("&lt;orange&gt;Hunting location set to Fire Widows, happy hunting\n")
</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Gnolls (H1-H10)</name>
							<packageName></packageName>
							<script>huntTarget = "gnolls halb"
killTarget = "gnolls"
location = "gnoll fortress"
cecho("&lt;orange&gt;Hunting location set to Gnoll Fortress (H1-H10), happy hunting\n")
cecho("Bosses: Gnoll Chieftain\n")
cecho("No swarm risk.\nMostly humanoid enemies here.\nLots of good and high quality items here.\nBeware the bandits, they will attempt to sap you.\n")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Black Mountain (H10)</name>
							<packageName></packageName>
							<script>huntTarget = "goblin warrior"
killTarget = "goblin"
location = "black mountain"
cecho("&lt;orange&gt;Hunting location set to Black Mountain (H10), happy hunting\n")
cecho("Bosses: The Balrog. Debundee.")
cecho("No swarm risk.\nMostly humanoid enemies here.\nWatch for being disarmed and dirt kicked.\n")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Duergar (H10)</name>
							<packageName></packageName>
							<script>huntTarget = "duergar soldier"
killTarget = "duergar"
location = "duergar"
cecho("&lt;orange&gt;Hunting location set to Duergar (H10, happy hunting\n")
cecho("Some swarm risk.\nMostly humanoid enemies here.\nWatch for being disarmed and dirt kicked.\n")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>The Maze (H75)</name>
							<packageName></packageName>
							<script>huntTarget = "auto tri"
killTarget = "soldier"
location = "the maze"
cecho("&lt;orange&gt;Hunting location set to the Maze (H75), happy hunting\n")
</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Guarng (H90)</name>
							<packageName></packageName>
							<script>huntTarget = "elven guard"
killTarget = "elven"
location = "guarng fortress"
cecho("&lt;orange&gt;Hunting location set to Guarng Fortress (H90), happy hunting\n")
cecho("Bosses: Guarng\n")
cecho("Minor swarm risk.\nMostly humanoid enemies here.\nElementals here.\nLots of magic damage.\nExcellent supreme quality wands to be found here.\n&lt;orange&gt;Artifacts can drop here.\n")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Help</name>
							<packageName></packageName>
							<script>xuicom("In short, clicking on an item in this list will give you a little informationa bout the area, such as swarm potential, decent drops you may find, boss enemies, and the level. It will also prime some variables for use in the autohunt feature.")
xuicom("To use it in an area, or for a purpose not covered in the hunt location list, the following commands may be helpful.")
xuicom("&lt;white&gt;customHunt:&lt;gray&gt; This will allow you to configure the hunt target for autohunt manually.")
xuicom("&lt;white&gt;customKill:&lt;gray&gt; Using this will change the output on the (kill target) commands that come up. This keyword should be more general.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Options</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Delay</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Add one second</name>
								<packageName></packageName>
								<script>huntWait = (huntWait + 1)

xuicom("You will wait "..huntWait.." seconds before acting on a successful hunt.")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Remove one second</name>
								<packageName></packageName>
								<script>if huntWait &gt; 0 then
huntWait = (huntWait - 1)

xuicom("You will wait "..huntWait.." seconds before acting on a successful hunt.")
else
	xuicom("You are already hunting instantaneously.")
end

</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Experimental</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Guerrilla mode</name>
								<packageName></packageName>
								<script>guerrillaMode = variableToggle(guerrillaMode, "", "You will no longer attempt to attack foes from a distance if they're bunched up.","You will now attempt to attack foes at a distance if they're bunched up.")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
					</ActionGroup>
				</ActionGroup>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Combat</name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Class actions</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>General</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Custom heal when low (Priority)</name>
								<packageName></packageName>
								<script>

autoHeal = variableToggle(autoHeal, "Auto Heal","Deactivating auto healing utility.", "Activating auto healing utility.")

if autoHeal then
	xuicom("Current healing threshold at "..autoHealThreshold..". To change this, use the command &lt;white&gt;autoHeal (arg). Current command is "..autoHealCommand..". To change this, use the command &lt;white&gt;autoHC (arg)&lt;light_blue&gt;. You can use this to trigger any ability below a % hp threshold.")
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Mentalist</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Mentalist Auto Debuff</name>
								<packageName></packageName>
								<script>--
--
-- if mentalistAutoDebuff then
-- mentalistAutoDebuff = false
-- xuicom("Smart mentalist casting deactivated.")
--
-- send("auto")
-- else
-- mentalistAutoDebuff = true
-- xuicom("Smart mentalist casting activated. Make sure class mentalist is activated in the menu.")
-- end
mentalistAutoDebuff =
  variableToggle(
    mentalistAutoDebuff,
    "",
    "You will no longer attempt to divide the will of your foes before wracking.",
    "You will attempt to weaken your foes resistances to mentalist attacks."
  )
if mentalistAutoDebuff then
  enableTimer("mentalistAutoTimer")
elseif not mentalistAutoDebuff then
  disableTimer("mentalistAutoTimer")
end</script>
								<css>	</css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Thief</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Thief auto trance</name>
								<packageName></packageName>
								<script>if thiefAutoTrance then
  xuicom("Auto trance disengaged.")
  thiefAutoTrance = false
  statusTrance = false
else
  xuicom("You will automatically attempt to stay in a trance in combat.")
  thiefAutoTrance = true
  statusTrance = false
send("auto")
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Rake</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>Spell slip</name>
									<packageName></packageName>
									<script>autoSpellSlip = variableToggle(autoSpellSlip, "Nothing", "You will no longer attempt to enter spell slip automatically.", "You will automatically maintain the edge.")</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
							</ActionGroup>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Warrior</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Center hack</name>
								<packageName></packageName>
								<script>if centerHack then
	centerHack = false
	xuicom("You will no longer attempt to spam center.")
else
	xuicom("You will now attempt to center after every kill. Ugh.")
	centerHack = true
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Determ mgmt</name>
								<packageName></packageName>
								<script>determMgmt = variableToggle(determMgmt,"Determation management", "Will no longer handle determination values automatically.","Attempting to manage determination values automatically. Current threshold set at "..determThresh..". To manage this, use &lt;white&gt;autoDet (arg)&lt;light_blue&gt;.")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Barbarian</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Resolve hack</name>
								<packageName></packageName>
								<script>if resolveHack then
	resolveHack = false
	xuicom("You will no longer attempt to spam resolve.")
else
	xuicom("You will now attempt to resolve after every kill. Ugh.")
	resolveHack = true
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Knight/Berserker</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Warcry Hack</name>
								<packageName></packageName>
								<script>warcryHack = variableToggle(warcryHack, "", "You will no longer attempt to automatically warcry.", "You will now attempt to automatically warcry.")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Pledges</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Auto Renovi</name>
							<packageName></packageName>
							<script>renoviThreshold = renoviThreshold or 0
if autoRenovi then
	autoRenovi = false
	xuicom("You will no longer attempt to renovi automatically")
else
	autoRenovi = true
	xuicom("You will attempt to use the pledge renovi below a certain threshold. Use the command &lt;white&gt;renoviThreshold (arg)&lt;light_blue&gt; to change the threshold.")
	cecho("[ XUI ] &lt;light_blue&gt;Current threshold at "..renoviThreshold)
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
				</ActionGroup>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Utilities</name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Class Management</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Current Classes</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Cleric</name>
								<packageName></packageName>
								<script>cleric = classToggle(cleric, "cleric")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Mage</name>
								<packageName></packageName>
								<script>mage = classToggle(mage, "mage")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Mentalist</name>
								<packageName></packageName>
								<script>mentalist = classToggle(mentalist, "mentalist")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Thief</name>
								<packageName></packageName>
								<script>thief = classToggle(thief, "thief")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>warrior</name>
								<packageName></packageName>
								<script>warrior = classToggle(warrior, "warrior")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Quick Gain</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>mage</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>base</name>
									<packageName></packageName>
									<script>for i = 1,table.size(mage_buff) do
	send("gain "..tostring(mage_buff[i]))
end


for i = 1, table.size(mage_utility) do
	send("gain "..tostring(mage_utility[i]))
end

for i = 1, table.size(mage_combat) do
	send("gain "..tostring(mage_combat[i]))
end

for i = 1, table.size(mage_skills) do
	send("gain "..tostring(mage_skills[i]))
end</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>Mentalist</name>
									<packageName></packageName>
									<script>terminus = table.size(mentalist_buffs) 
for i = 1,terminus do
	send("gain "..tostring(mentalist_buffs[i]))
end


for i = 1, table.size(mentalist_utility) do
	send("gain "..tostring(mentalist_utility[i]))
end

for i = 1, table.size(mentalist_combat) do
	send("gain "..tostring(mentalist_combat[i]))
end

send("gain arcane mastery")</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
							</ActionGroup>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>cleric</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>base</name>
									<packageName></packageName>
									<script>
for i = 1,terminus do
	send("gain "..tostring(cleric_buffs[i]))
end


for i = 1, table.size(cleric_utility) do
	send("gain "..tostring(cleric_utility[i]))
end

for i = 1, table.size(cleric_combat) do
	send("gain "..tostring(cleric_combat[i]))
end

for i = 1, table.size(cleric_skills) do
	send("gain "..tostring(cleric_skills[i]))
end

for i = 1, table.size(cleric_healing) do
	send("gain "..tostring(cleric_healing[i]))
end</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
							</ActionGroup>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>warrior</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>base</name>
									<packageName></packageName>
									<script>for i = 1, table.size(warrior_skills) do
	send("gain "..tostring(warrior_skills[i]))
end</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>Geomancer</name>
									<packageName></packageName>
									<script>for i = 1,table.size(geomancer_buffs) do
	send("gain "..tostring(geomancer_buffs[i]))
end


for i = 1, table.size(geomancer_utility) do
	send("gain "..tostring(geomancer_utility[i]))
end

for i = 1, table.size(geomancer_combat) do
	send("gain "..tostring(geomancer_combat[i]))
end

for i = 1, table.size(geomancer_skills) do
	send("gain "..tostring(geomancer_skills[i]))
end</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
							</ActionGroup>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>barbarian</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</ActionGroup>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>thief</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>base</name>
									<packageName></packageName>
									<script>for i = 1, table.size(thief_skills) do
	send("gain "..tostring(thief_skills[i]))
end</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
							</ActionGroup>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Quick Buffs</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Mentalist</name>
								<packageName></packageName>
								<script>terminus = table.size(mentalist_buffs) 

for i = 1,terminus do
	send("cast '"..mentalist_buffs[i].."'")
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Cleric</name>
								<packageName></packageName>
								<script>terminus = table.size(cleric_buffs) 
for i = 1,terminus do
	send("cast '"..cleric_buffs[i].."'")
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Mage</name>
								<packageName></packageName>
								<script>terminus = table.size(mage_buffs) 
for i = 1,terminus do
	send("cast '"..mage_buffs[i].."'")
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown>mageBuff</commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="no" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Geomancer</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>RP tools</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>RP Helper</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Customized Say</name>
								<packageName></packageName>
								<script>cecho("[ XUI ] &lt;light_blue&gt;To use this feature, type &lt;white&gt;customSay (arg)&lt;light_blue&gt;. Everything in the (arg) spot will appear right before your say text when you type say.\n")
cecho("[ XUI ] &lt;light_blue&gt;This modification will also be applied before IC's when using the ic command.\n")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>QOL</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>5xHero empowerment</name>
							<packageName></packageName>
							<script>xuicom("To use this feature, type &lt;white&gt;mhemp (desired empowerment)")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>faceless: fragment to shard</name>
							<packageName></packageName>
							<script>send("quest request fragments of the fallen god")
send("give 'fragment fallen' faceless")
send("give 'fragment fallen' faceless")
send("quest complete fragments of the fallen god")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Hunger Management</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Soup</name>
							<packageName></packageName>
							<script>autoDrink = variableToggle(autoDrink,"autoDrink", "You've chosen to disable drinking soup automatically.", "You will automatically attempt to drink soup every minute.")

-- xuicom("The autoDrink variable is set to "..tostring(autoDrink))
xaos.config.drinkMode = "soup"



 
if autoDrink then
-- xuicom("Logic thinks autoDrink is true, should be enabling the timer")
enableTimer("drinkTimer")
elseif not autoDrink then
disableTimer("drinkTimer")
end</script>
							<css>		</css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Creation</name>
							<packageName></packageName>
							<script>autoDrink = variableToggle(autoDrink,"autoDrink", "You've chosen to disable drinking soup automatically.", "You will automatically attempt to drink soup every minute.")

-- xuicom("The autoDrink variable is set to "..tostring(autoDrink))
xaos.config.drinkMode = "creation"



 
if autoDrink then
-- xuicom("Logic thinks autoDrink is true, should be enabling the timer")
enableTimer("drinkTimer")
elseif not autoDrink then
disableTimer("drinkTimer")
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Corpse</name>
							<packageName></packageName>
							<script>autoDrink = variableToggle(autoDrink,"autoDrink", "You've chosen to disable corpse eating automatically.", "You will automatically attempt to eat a corpse every minute.")

-- xuicom("The autoDrink variable is set to "..tostring(autoDrink))
xaos.config.drinkMode = "corpse"



 
if autoDrink then
-- xuicom("Logic thinks autoDrink is true, should be enabling the timer")
enableTimer("drinkTimer")
xuicom("For this setting, you will attempt to drink from your inventory, use &lt;white&gt;customDrink (arg)&lt;light_blue&gt; to set what you attempt to drink from. Current setting is "..customDrink)
elseif not autoDrink then
disableTimer("drinkTimer")
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Butchery</name>
							<packageName></packageName>
							<script>autoDrink = variableToggle(autoDrink,"autoDrink", "You've chosen to disable butchery eating automatically.", "You will automatically attempt to butcher every minute.")

-- xuicom("The autoDrink variable is set to "..tostring(autoDrink))
xaos.config.drinkMode = "butchery"



 
if autoDrink then
-- xuicom("Logic thinks autoDrink is true, should be enabling the timer")
enableTimer("drinkTimer")
xuicom("For this setting, you will attempt to drink from your inventory, use &lt;white&gt;customDrink (arg)&lt;light_blue&gt; to set what you attempt to drink from. Current setting is "..customDrink)
elseif not autoDrink then
disableTimer("drinkTimer")
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Collection</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Butcher</name>
							<packageName></packageName>
							<script>auto_butcher = auto_butcher or nil

if auto_butcher then
	auto_butcher = false
else
	auto_butcher = true
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Skin</name>
							<packageName></packageName>
							<script>auto_skin = auto_skin or nil

if auto_skin then
	auto_skin = false
else
	auto_skin = true
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Enchanting</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Enchanting consolidation</name>
							<packageName></packageName>
							<script>xuicom("To use this feature, use the command &lt;white&gt;encCons (arg)&lt;light_blue&gt;. You will attempt to, using reagents in your inventory, refactor your enchanting mats into higher level components. Useful for consolidating your collection into a smaller package. Accepted arguments are ember, focus, source, and orb.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Automated proceed</name>
							<packageName></packageName>
							<script>xuicom("To use this feature, use the command &lt;white&gt;proc (arg)&lt;light_blue&gt;. You will attempt to proceed with the currently selected enchantment equal to the argument inputted, only stopping at signs that your item would be destroyed.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Skill up</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Scroll mastery</name>
							<packageName></packageName>
							<script>scrollSpam = variableToggle(scrollSpam, "Name", "You will no longer automatically recite scrolls from the Viridian Spider", "To use this, buy a scroll of &lt;white&gt;giant strength&lt;light_blue&gt; and then recite it successfully. Ensure you're at the shop you can buy it from. The Viridian Spider in Visari is where this script was tested.")
if scrollSpam then
  enableTrigger("Scrollspam")
else
  disableTrigger("Scrollspam")
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Auto-login</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>How to</name>
							<packageName></packageName>
							<script>xuicom("To set up what login you'd like to use upon disconnect and reconnect, use the command &lt;white&gt;autoLog &lt;arg&gt;&lt;light_blue&gt;. If you wanted to reconnect as Wrain, with the password 'password123', you'd type\n&lt;white&gt;autoLog Wrain password123")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Enchanting GUI</name>
						<packageName></packageName>
						<script>
if labelshowing then
baseEnchContainer:hide()
else
baseEnchContainer:show()
end

labelshowing = not labelshowing</script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
					</Action>
				</ActionGroup>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Getting Started</name>
					<packageName></packageName>
					<script>xuicom("Welcome to XUI. To sync your prompt to the XUI prompt, type &lt;white&gt;marchPrompt.")
xuicom("It's suggested you save your prompt somewhere before you do, but XUI will also save it so you can retrieve it at a later date.")
xuicom("To get an idea of what you can track and manage using the XUI right now, click on the script report button.")
xuicom("The minimum you should need to start scripting is the correct prompt, a location chosen from beneath the autohunt menu, and the location toggled.")</script>
					<css>					</css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Script report</name>
					<packageName></packageName>
					<script>
cecho("[ XUI ] &lt;light_blue&gt;Vital statistics: \n")
cecho("&lt;light_blue&gt;"..string.format("%10s  %d","HP",current_health).."\n")
cecho("&lt;light_blue&gt;"..string.format("%10s  %d","Mana",current_mana).."\n")
cecho("&lt;light_blue&gt;"..string.format("%10s  %d","XP",current_xp).."\n")


if autoDrink then
	xuicom("Current autodrink mode: "..drinkMode)
else

end


if statusFollowing then
	xuicom("Currently following "..followTarget)
else
	xuicom("Not currently following anyone.")
end

xuicom("Auto butcher: "..tostring(auto_butcher)..". Auto skinning: "..tostring(auto_skin))

xuicom("Currently wielding: "..wielded)
xuicom("Currently following: "..following)

--General script stuff
xuicom("Script variables:")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Location:",location).."\n")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Hunting:",tostring(auto_hunt)).."\n")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Delay:",huntWait).."\n")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Autorest:",tostring(autoRest)).."\n")

--Individual options
xuicom("Individualized functionality:")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Auto Healing:",tostring(autoHeal)).."\n")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Threshold:",tostring(autoHealThreshold)).."\n")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Command:",autoHealCommand).."\n")

--Mentalist stuff

cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Mentalist Debuff:",tostring(mentalistAutoDebuff)).."\n")

-- Thief stuff
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Auto Trance:",tostring(thiefAutoTrance)).."\n")
--rake
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Spell Slip:",tostring(autoSpellSlip)).."\n")
--warrior
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Center hack:",tostring(centerHack)).."\n")

cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Determ:",tostring(determMgmt)).."\n")

if determMode then
	cecho("&lt;light_blue&gt;"..string.format("%20ss  %d","Threshold:",determThresh).."\n")
end
--barb
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Resolve hack:",tostring(resolveHack)).."\n")
--pledges
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Renovi:",tostring(autoRenovi)).."\n")

cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Threshold: ",renoviThreshold).."\n")</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Testing menu</name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>master test</name>
						<packageName></packageName>
						<script>-- Testing disarm


-- trigger Disarm
xuicom("Testing disarm")
expandAlias("`echo An ogre DISARMS you and sends a etc. flying.")

tempTimer(1,[[testing(true,statusDisarm, "Not recognizing you as disarmed.")]])

tempTimer(1.1,[[statusDisarm = false]])</script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
					</Action>
				</ActionGroup>
			</ActionGroup>
			<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Graph</name>
				<packageName></packageName>
				<script></script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>1 min</name>
					<packageName></packageName>
					<script>displaytimespan=1
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>5 min</name>
					<packageName></packageName>
					<script>displaytimespan=5
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>10 min</name>
					<packageName></packageName>
					<script>displaytimespan=10
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>15 min</name>
					<packageName></packageName>
					<script>displaytimespan=15
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>30 min</name>
					<packageName></packageName>
					<script>displaytimespan=30
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>1 hr</name>
					<packageName></packageName>
					<script>displaytimespan=60
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
			</ActionGroup>
		</ActionGroup>
		<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
			<name>RightWindows</name>
			<packageName></packageName>
			<script></script>
			<css></css>
			<commandButtonUp></commandButtonUp>
			<commandButtonDown></commandButtonDown>
			<icon></icon>
			<orientation>0</orientation>
			<location>0</location>
			<posX>1441</posX>
			<posY>235</posY>
			<mButtonState>1</mButtonState>
			<sizeX>0</sizeX>
			<sizeY>0</sizeY>
			<buttonColumn>0</buttonColumn>
			<buttonRotation>0</buttonRotation>
			<buttonColor>#ffffff</buttonColor>
			<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Fixes</name>
				<packageName></packageName>
				<script></script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>FixWindows</name>
					<packageName></packageName>
					<script>chatFontSize = 14
chatWrap = 55
chatWidth = 650
createChatConsole()

--Move Main Window
setBorderLeft(50)
setBorderRight(2)
setWindowWrap("main",100)

--Move Chat
--dataCon:setFontSize(14)
--dataCon:resize(650,"48%")
--dataCon:move(-650,"52%")


--Move Left Container
xprDisplay:move("2%","0%")
goldDisplay:move("2%","45%")
dprDisplay:move("2%","60%")

left_container:move("5%",0)

enableScrollBar("queststatus")
enableScrollBar("data")
enableScrollBar("OOC")</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
			</ActionGroup>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Quests</name>
				<packageName></packageName>
				<script>
if labelquestshowing then
  --clearWindow("queststatus")
  tempTimer(1,function () 
    questStatusCon:hide()
  end)
else
questStatusCon:show()
end

labelquestshowing = not labelquestshowing
</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown>Hide Quests</commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Funfurmanual</name>
				<packageName></packageName>
				<script>funfurmanual = not funfurmanual

echo("\n " .. display(funfurmanual) .. "\n")</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
		</ActionGroup>
	</ActionPackage>
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Xaos</name>
			<packageName></packageName>
			<script>if xaos == nil then xaos = {} end</script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Variables</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Lists</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Areas</name>
						<packageName></packageName>
						<script>-- H001 - H100 --- Chessboard(chess), Gnolls(gnolls), Maeklum Asteroid(maeklums), Black Mountain(blackmounta), Chaos Caves(chaoscaves)
-- H100 - H150 --- Chaos Caves(chaoscaves), Lightning Claws(claws)
-- H150 - H200 --- Lightning Claws(claws), Maze(maze)
-- H200 - H250 --- Maze(maze), Undead Gnolls(undeadgnoll), Necromancer Tower(necrotower)
-- H250 - H300 --- Necromancer Tower(necrotower)
-- H300 - H350 --- Fire Widows(widows)
-- H350 - H400 --- Titan Valley(titanvalley), Servants of Misery(misery)
-- H400 - H450 --- Chaos Swamps(swamps), Gremlins(gremlinwoods), Spark Imps(sparkchasm)
-- H450 - H500 --- Cryo Imps(cryocorridor) Blood Imps(bloodcave), Flames Imps(flamecave)
-- H500 - H550 --- Twisted Fae Forest(twistedfae)
-- H550 - H600 --- Twisted Fae Forest(twistedfae), Savage Lands(dinoland)
-- H600 - H650 --- Blaze Ghouls(blaze), Cave Imps(cave imp)
-- H650 - H700 --- Blaze Ghouls(blaze), Cave Imps(cave imp)
-- H700 - H750 --- Champions of Koruk(champsofkoruk)
-- H750 - H800 --- Slayers of Koruk(korukslayer)
-- H800 - H850 --- (Coming Soon)
-- H850 - H900 --- Guarng(celestial)
-- H900 - H950 --- Guarng(celestial)

xaos.areas= {
	{
		name = "asteroid",
		keyword = "maeklums",
		killlist = "maeklums",
		keywordoverride = true,
		scanmode = true,
		killarray = {"Maeklum elite warrior","Maeklum page","Maeklum elementalist","Maeklum soldier"},
	},

  {
		name = "gnolls",
		keyword = "gnolls",
		killlist = "gnolls",
		keywordoverride = true,
		scanmode = true,
		killarray = {"tall gnoll halberdier","Gnoll Armsman","Gnoll Bandit","gnoll shaman","Gnoll Swordsman"},
	},
	{
		name = "blackmount",
		keyword = "blackmounta",
		killlist = "elite goblin,giant orc,blackmount",
		keywordoverride = false,
		scanmode = true,
		killarray = {"elite goblin guard","diseased giant orc","goblin warrior","goblin healer","large goblin"},
	},
	{
		name = "claws",
		keyword = "claws",
		killlist = "claws",
		keywordoverride = true,
		scanmode = true,
		killarray = {"lightning claw","greater lightning claw"},
	},
    {
		name = "necrotower",
		keyword = "necrotower",
		killlist = "necrotower",
		keywordoverride = true,
		scanmode = true,
		killarray = {"necromancer apprentice","skeletal guard","zombie guard","hooded human"},
  },
  {
		name = "maze",
		keyword = "maze",
		killlist = "maze",
		keywordoverride = false,
		scanmode = true,
		huntWait=3,
		endcombatWait=3,
		killarray = {"lost soldier","stone gargoyle","crossed grey python","wild Tarani beast","giant maze walker","alpha Javal","flame-haired Javal",},
  },
  {
		name = "firewidow",
		keyword = "fire widow",
		killlist = "fire widow,vicious drider",
		keywordoverride = false,
		scanmode = true,
		killarray = {"fire widow","vicious drider"},
  },
  {
		name = "swamps",
		keyword = "swamps",
		killlist = "swamps",
		keywordoverride = true,
		scanmode = true,
    --"gnomish zombie",
		killarray = {"vondoni zombie","centaur zombie","fleshless zombie troll","zombie bishop","defender of Kalshet"},
	}, 
  {
		name = "titanvalley",
		keyword = "titanvalley",
		killlist = "titanvalley",
		keywordoverride = true,
		scanmode = true,
		killarray = {"large boar","titan hunter","titan champion","titan shaman",},
	},
	{
		name = "misery",
		keyword = "misery",
		killlist = "misery",
		keywordoverride = true,
		scanmode = true,
		killarray = {"servant of misery","blackstone mauler","prime umberhulk","deadly umberhulk"},
	},
    {
		name = "gremlins",
		keyword = "gremlinwoods",
		killlist = "gremlinwoods",
		keywordoverride = true,
		scanmode = true,
		killarray = {"gremlin tracker","disgusting gremlin","dirty gremlin",
    --"gremlin prophet","Meimei"
    },
	}, 
	{
		name = "sparkimp",
		keyword = "sparkchasm",
		killlist = "sparkchasm",
		keywordoverride = true,
		scanmode = true,
		killarray = {"baby spark imp","fully charged spark imp","spark imp bruiser","imp slasher"},
	}, 
	{
		name = "cryoimp",
		keyword = "cryocorridor",
		killlist = "cryocorridor",
		keywordoverride = true,
		scanmode = true,
		killarray = {"cryo-soldier","imp enforcer","cryo imp spawnling"},
	}, 
	{
		name = "bloodimp",
		keyword = "bloodcave",
		killlist = "bloodcave",
		keywordoverride = true,
		scanmode = true,
		killarray = {"ferocious blood imp","disgusting blood imp","savage blood imp"},
	},
	{
		name = "flameimp",
		keyword = "flame imp",
		killlist = "flame imp",
		keywordoverride = true,
		scanmode = true,
		killarray = {"young flame imp","primitive flame imp","flame imp destroyer","vicious flame imp","fully formed flame imp","primal flame imp","untamed flame imp"},
	},
	{
		name = "dinoland",
		keyword = "dinoland",
		killlist = "dinoland",
		keywordoverride = true,
		scanmode = true,
		killarray = {"large velociraptor","deadly snapping turtle","savage velociraptor","angry turtle","angry earth elemental","Tyrannosaur:","barbarous man","furious mother pterodactyl","young pterodactyl","ankylosaur:","friendly looking Shaman",},
	},
	{
		name = "caveimp",
		keyword = "cave imp",
		killlist = "cave imp",
		keywordoverride = true,
		scanmode = true,
		killarray = {"cave ripper","den tracer","stone crusher","young rumbler","cave phantom","hooded cave imp"},
	},
	{
		name = "twistedforest",
		keyword = "twistedfae",
		killlist = "twistedfae",
		keywordoverride = true,
		scanmode = true,
		killarray = {"Angry Pixie","quickling ranger","abandoned lesh","gnarled brownie","wicked sprite","wandering wailing lesh","Twisted Treant","twisted faun"},
	},  
	{
		name = "blaze",
		keyword = "blaze",
		killlist = "blaze,koruk",
		keywordoverride = false,
		scanmode = true,
		killarray = {"blaze ghoul","paladin of koruk"},
	},
	{
		name = "champsofkoruk",
		keyword = "champsofkoruk",
		killlist = "champsofkoruk",
		keywordoverride = true,
		scanmode = true,
		killarray = {"shambling drow wizard","Champion of Koruk","seared devil"},
	},
	{
		name = "guarng",
		keyword = "celeestial",
		killlist = "celestial",
		keywordoverride = true,
		scanmode = true,
		killarray = {"elven druid","elven guard","elven paladin","elite guardian magus","elfin mage hound","elven illusionist"},
	},
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>QuestMasters</name>
						<packageName></packageName>
						<script>xaos.questmasters={
{lookup="The old dwarf Brazkrig stands here"
,name="the old dwarf Brazkrig"},
{lookup="Crassulacean the sane stands here looking"
,name="Crassulacean"},
{lookup="A cute wood nymph is here"
,name="Sycelurania"},
{lookup="A bigger than normal half"
,name="Ivq"},
{lookup="A faceless priest of Sunder stands here"
 ,name="a faceless priest"
},
{lookup="The host of this display, Gank"
 ,name="Gank"
},
{lookup="Dahlina stands here as a last guard"
 ,name="Dahlina the half elf"
},
{lookup="A hooded drow magi is here",
 name="a hooded drow magi"
},
{lookup="Verioma the pixie floats",
 name="Verioma the pixie"
},
{
lookup="Marnock Rockflayer is here",
 name="Marnock Rockflayer"
},
{
lookup="An old dwarf with a long grey beard"
,name= "The Dwarven Loremaster Isliaka"
},
{
lookup="A Xaosian knight dressed"
  ,name= "A Xaosian Knight"
},
{
lookup="A gnome wearing a dark hood"
  ,name= "a shady gnome"
},
{
lookup="A very old deep gnome"
  ,name= "Piklar"
},
{
lookup="A bishop of Xaos teaches"
  ,name= "a bishop of Xaos"
},
{
lookup="The town Crier stands here,"
  ,name= "the town crier"
},
{
lookup="A gnome dressed in dusty robes"
  ,name= "Faazelrob the far-sighted"
},
{
lookup="A Kydelian nobleman is here,"
,name= "a broken nobleman"
},
{
lookup="A Surveyor is here trying to solve a problem"
,name= "A Surveyor"
}
,
{
lookup="An Elven ranger makes herself known to those she considers friendly"
,name= "A Kydelian ranger"
}
}</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>Temporary Status</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------

if fullautoempower == nil then fullautoempower = false end

if autoleaderswitch == nil then autoleaderswitch = false end
if lastcombattime == nil then lastcombattime = getEpoch() end
if lastkilltime == nil then lastkilltime = 0 end

if initialcommandrun == nil then initialcommandrun=0 end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>GenerateVariables</name>
					<packageName></packageName>
					<script>
if xpcollector == nil then xpcollector = {} end
if killcollector == nil then killcollector = {} end

if topKillCollection == nil then topKillCollection = 0 end


if xaos.backpack == nil then xaos.backpack = "" end

if xaos.class == nil then xaos.class = {} end
if xaos.currency == nil then xaos.currency = {} end
if xaos.currentequip == nil then xaos.currentequip = {} end

if xaos.Level == nil then xaos.Level = "" end
if xaos.LevelPercent == nil then xaos.LevelPercent = "" end


if lootcollector == nil then lootcollector = {} end





if xaos.party == nil then xaos.party = {
  leader = "",
  members = {}
} end

if overnight == nil then overnight = {} end



if killcapture == nil then killcapture = {} end




xaos.class = {
   primary = primary
  ,reborn = reborn
  ,cleric = false
  ,mage = false
  ,warrior = false
  ,thief = false
  ,barbarian=false
}

function xaos.class.isclass(classname) 
  return xaos.class.primary == classname or xaos.class.reborn == classname
end</script>
					<eventHandlerList>
						<string>sysLoadEvent</string>
						<string>sysInstall</string>
						<string>sysConnectionEvent</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Config</name>
					<packageName></packageName>
					<script>if xaos.config == nil then xaos.config = {} end
if xaos.config.afkmode == nil then xaos.config.afkmode = false end
if xaos.config.berserkovercenter == nil then xaos.config.berserkovercenter = true end
if xaos.config.debugmode == nil then xaos.config.debugmode = false end
if xaos.config.show_killed == nil then xaos.config.show_killed = false end
if xaos.config.betamode == nil then xaos.config.betamode = false end
if xaos.config.autologin == nil then xaos.config.autologin = false end
if xaos.config.autologinaction == nil then xaos.config.autologinaction = "" end
if xaos.config.reconnectaction == nil then xaos.config.reconnectaction = "" end
if xaos.config.beeptell == nil then xaos.config.beeptell = false end
if xaos.config.buffmode == nil then xaos.config.buffmode = true end
if xaos.config.autojoin == nil then xaos.config.autojoin = true end
if xaos.config.autoguard == nil then xaos.config.autoguard = false end
if xaos.config.customDrink == nil then xaos.config.customDrink = "" end
if xaos.config.drinkMode == nil then xaos.config.drinkMode = "" end

if xaos.config.scripting == nil then xaos.config.scripting = {} end
if xaos.config.scripting.findmode == nil then xaos.config.scripting.findmode = false end
if xaos.config.scripting.scan_mode == nil then xaos.config.scripting.scan_mode = false end
if xaos.config.scripting.huntwait == nil then xaos.config.scripting.huntwait = 1 end
if xaos.config.scripting.endcombatwait == nil then xaos.config.scripting.endcombatwait = 2 end
if xaos.config.scripting.maxmobs == nil then xaos.config.scripting.maxmobs = 10 end
if xaos.config.scripting.autoLoot == nil then xaos.config.scripting.autoLoot = "" end
if xaos.config.scripting.autoPickup == nil then xaos.config.scripting.autoPickup = "" end
if xaos.config.scripting.autoDeathAction == nil then xaos.config.scripting.autoDeathAction = "" end
if xaos.config.scripting.initialcommand == nil then xaos.config.scripting.initialcommand = "" end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Quest Variables</name>
					<packageName></packageName>
					<script>if auto_questTurnIn == nil then auto_questTurnIn = "" end
if questmaster == nil then questmaster = "unknown" end
if questTurnIn == nil then questTurnIn = "" end

if questfiltertype == nil then questfiltertype = "" end
if questfiltername == nil then questfiltername = "" end

if autoquesting == nil then autoquesting = "" end
if xaos.autoquest == nil then xaos.autoquest = {} end
if xaos.autoquest.auto == nil then xaos.autoquest.auto = "" end
if xaos.autoquest.autoquest_currentquest == nil then xaos.autoquest.autoquest_currentquest = "" end
if xaos.autoquest.queue == nil then xaos.autoquest.queue = {} end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Scripting</name>
					<packageName></packageName>
					<script>if xaos.fightingstyle == nil then xaos.fightingstyle = "" end
if xaos.tactics == nil then xaos.tactics = "" end

if xaos.scripting == nil then xaos.scripting = {} end
if xaos.scripting.area == nil then xaos.scripting.area = {} end
if xaos.scripting.area.maxmobs == nil then xaos.scripting.area.maxmobs = 10 end

if xaos.config.scripting.minmana == nil then xaos.config.scripting.minmana = 0 end
if xaos.config.scripting.minhp == nil then xaos.config.scripting.minhp = 0 end

if statusLeader == nil then statusLeader = false end
if overrideleader == nil then overrideleader = false end

if scancount == nil then 
  scancount = {
    none = {0},
    north = {0,0,0},
    south = {0,0,0},
    east  = {0,0,0},
    west  = {0,0,0},
    up    = {0,0,0},
    down  = {0,0,0},
  }
end

if status == nil then status = {} end
if status.resting == nil then status.resting = false end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Enchanting</name>
					<packageName></packageName>
					<script>if enchanting == nil then enchanting = {} end
if enchanting.manual == nil then enchanting.manual = true end
if enchanting.multi == nil then enchanting.multi = false end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<Script isActive="yes" isFolder="no">
				<name>Profiles</name>
				<packageName></packageName>
				<script>

if xaos_profile == nil then xaos_profile = {} end

remember(xaos_profile)

function retrieveprofiles() 
	table.load(getMudletHomeDir() .. "/characterprofiles.dat",xaos_profile)
end

function loadprofile()
  copyfromprofile() 
  
  if xaos.config.drinkmode ~= "" then
    enableTimer("drinkTimer")
  end
end

function copyfromprofile(onlogin) 

	local profilematch = table.n_collect(xaos_profile, function (elem) return elem.charactername == xaos.charactername end)
	if table.size(profilematch) &gt; 0 then
		local curprofile = profilematch[1]
		xaos.config = table.deepcopy(curprofile.config)
	else
		echo("No Profile for " .. xaos.charactername)
    if onlogin then
      --Generate Blank Profile
      newprofile()
    end
	end
end

function copytoprofile()

	local profilematch = table.n_collect(xaos_profile, function (elem) return elem.charactername == xaos.charactername end)
	if table.size(profilematch) &gt; 0 then
		local curprofile = profilematch[1]
		curprofile.config = table.deepcopy(xaos.config)
	else
		local newprofile = {charactername=xaos.charactername}
		newprofile.config = table.deepcopy(xaos.config)
		table.insert(xaos_profile,newprofile)
		echo("Profile Created For " .. xaos.charactername)
	end

	table.save(getMudletHomeDir() .. "/characterprofiles.dat",xaos_profile)
end

function newprofile()
  
  xaos.config.autologinaction = ""
  xaos.config.reconnectaction = ""
  xaos.config.debugmode = false
  xaos.config.empowerbuffer = 2000
  xaos.config.empower = {
  	{
  	  target = "saves",
  	  multiplier = 0.5
  	},
  	{
  	  target = "regen mana",
  	  multiplier = 0.5
  	},
  	{
  	  target = "hit roll",
  	  multiplier = 1
  	},
  	{
  	  target = "speed",
  	  multiplier = 1
  	},
  	{
  	  target = "damage roll",
  	  multiplier = 1
  	},
  	{
  	  target = "hitpoints",
  	  multiplier = 1
  	},
  	{
  	  target = "regen hp",
  	  multiplier = 1
  	},
  	{
  	  target = "armor class",
  	  multiplier = 1
  	},
  	{
  	  target = "warding",
  	  multiplier = 1
  	},
  }
  xaos.config.empowercost = 680
  xaos.config.autologin = false
  xaos.config.scripting = {
  	autoPickup = "",
  	maxmobs = 10,
  	huntwait = 0,
  	autoLoot = "",
  	initialcommand = "",
  	autoDeathAction = "",
  	findmode = true,
  	endcombatwait = 3,
  	scan_mode = true
  }
  xaos.config.autoguard = true
  xaos.config.afkmode = false
  xaos.config.autojoin = true
  xaos.config.show_killed = false
  xaos.config.drinkMode = "soup"
  xaos.config.berserkovercenter = true
  xaos.config.buffmode = true
  xaos.config.beeptell = false
  xaos.config.customDrink = ""
  xaos.config.autoempower = true
  xaos.config.betamode = false



end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Quest Functions</name>
				<packageName></packageName>
				<script>
function fixstring(text)

  --echodebug(text)
  text = string.gsub(text,"'","")
  --echodebug(text)
  text = string.gsub(text,"\"","")
  --echodebug(text)
  text = string.gsub(text,"-"," ")
  return text
end

function removearticles(text)

  --echodebug(text)
  text = string.gsub(text," of "," ")
  --echodebug(text)
  text = rex.gsub(text,[[^[tT]he ]],"")
  --Gnoll fix
  text = rex.gsub(text,[[^tall ]],"")
  return text
end



function quest_getqmquests(qmname)
  qmname = string.trim(qmname)
  local qtable = table.n_filter(xaos.quests,
    function(item)
       return item.qm == qmname
    end
  )
  return qtable
end

function quest_getcompletedqm(qmname)
  qmname = string.trim(qmname)
  local qtable = table.n_filter(xaos.quests,
    function(item)
      if item.qm ~= qmname then
       return false
      end
      local otable = table.n_filter(item.objectives, 
        function (oitem)
          return not oitem.complete
        end
      )
      return table.size(otable) == 0
    end
  )
  debugecho("getcomp" .. table.size(qtable))
  return qtable
end

function quest_getstatus(compstatus)
local qtable = table.n_filter(xaos.quests,
    function(item)
      
      local otable = table.n_filter(item.objectives, 
        function (oitem)
          return not oitem.complete 
        end
      )
      if compstatus then
        return table.size(otable) == 0
      else
        return table.size(otable) &gt; 0
      end
    end
  )
  debugwrite("getcomp" .. table.size(qtable))
  return qtable

end

function quest_getnotcomplete()
  local qtable = table.n_filter(xaos.quests,
    function(item)
      
      local otable = table.n_filter(item.objectives, 
        function (oitem)
          return not oitem.complete 
        end
      )
        return table.size(otable) &gt; 0
    end
  )
  --debugecho("getcomp" .. table.size(qtable))
  return qtable
end

function quest_getcomplete()
 return quest_getstatus(true)
  --local qtable = table.n_filter(xaos.quests,
    -- function(item)
      
      -- local otable = table.n_filter(item.objectives, 
        -- function (oitem)
          -- return not oitem.complete 
        -- end
      -- )
        -- return table.size(otable) == 0
    -- end
  -- )
  -- --debugecho("getcomp" .. table.size(qtable))
  -- return qtable
end

function quest_iscomplete(questname)
  local filteredquests = quest_getcomplete()
  local qtable = table.n_filter(filteredquests, 
    function(item)
      return fixstring(item.name) == fixstring(questname)
    end
  )
  --debugecho("getiscomp" .. table.size(qtable))
  return table.size(qtable) ~= 0
end

function autoquest_clear()
  xaos.autoquest.autoquest_currentquest=""
end
function autoquest_setquest(questname)
    echo("Auto Quest Set " .. questname)
    if xaos.autoquest == nil then
      xaos.autoquest = {}
    end
    xaos.autoquest.autoquest_currentquest=string.trim(questname)
    killTarget = quest_getkilllist(string.trim(questname))
    
    xaos.scripting.area = {
        name = "autoquest",
        keyword = "autoquest",
        killlist = killTarget,
        keywordoverride = false,
        scanmode = true,
        maxmobs = 10,
        killarray = string.split(killTarget,","),
      }
    
end
function autoquest_nextinqueue()
  if table.size(xaos.autoquest.queue) &gt; 0 then
  	if xaos.autoquest.queue[1] == xaos.autoquest.autoquest_currentquest then
  		table.remove(xaos.autoquest.queue,1)
      debugwrite("removing table entry")
  	end
    --debugwrite(display(xaos.autoquest.queue))
  	if table.size(xaos.autoquest.queue) &gt; 0 then
  		expandAlias("autoquest " .. xaos.autoquest.queue[1])
  	end
  end

end
function autoquest_switchtargets()
  local questname = xaos.autoquest.autoquest_currentquest
  killTarget = quest_getkilllist(string.trim(questname))
  xaos.scripting.area.killarray = string.split(killTarget,",")
  
  local whotohunt = quest_gettarget(questname)
  if whotohunt ~= nil then
    expandAlias("ahunt " .. whotohunt)
  else
    cecho("data","[ Quest ] " .. questname .. ": Objectives Met\n")
    auto_hunt=false
    autoquesting=false
    autoquest_nextinqueue()
    xaos.autoquest.autoquest_currentquest=""
	
  end
  return false
end
function autoquest_go()
  local questname = xaos.autoquest.autoquest_currentquest
  
  killTarget = quest_getkilllist(questname)
  xaos.scripting.area.killarray = string.split(killTarget,",")
  
  local whotohunt = quest_gettarget(questname)
  --echo(2)
  --echo("go")
  --echo(whotohunt)
  
  if whotohunt ~= nil then
    enableTimer("hunt listener")
    expandAlias("ahunt " .. whotohunt)
  else
    cecho("data","[ Quest ] " .. questname .. ": Objectives Met\n")
    auto_hunt=false
    autoquesting=false
    autoquest_nextinqueue()
    xaos.autoquest.autoquest_currentquest=""
	
  end
end
function quest_gettarget(questname)
  --local questname = xaos.autoquest.autoquest_currentquest
  --autoquesting=true
  --killTarget = quest_getkilllist(string.trim(questname))
  --local foundnexttarget=false
  for key,value in pairs(xaos.quests) do 
      if value.name==questname then
        --echo("Found quest")
        local objlist = {}
        for okey,ovalue in pairs(value.objectives) do
          if not ovalue.complete and ovalue.kill then
            table.insert(objlist,string.trim(ovalue.name))
          end
        end
        if table.size(objlist) &gt; 0 then
        
          local which = math.random(#objlist)
          debugwrite(table.size(objlist))
          return removearticles(fixstring(objlist[which]))
          
        else
        
          return nil
          
        end
        break
        --table.insert(xaos.quests[key].objectives,{name=matches[3],complete=(matches[2]=="X")})
  
      end
  end
end

function quest_updateobjective(objective,amount)
  local objectiveset = false
  local obj = tostring(rex.match(string.trim(objective), [[(?:[aA]n|[aA]|[tT]he)?(?:\s)?([^\(].*)]]))
  for key,value in pairs(xaos.quests) do 
    --if value.name==questname then
    for okey,ovalue in pairs(value.objectives) do
      --echo(tostring(rex.match(ovalue.name, [[(?:[0-9]+x)?(?:\s)?(?:[aA]|[tT]he)?([^\(].*)\(]])))
      --if not ovalue.complete then
      
      local target = tostring(rex.match(string.trim(ovalue.name), [[(?:[aA]n|[aA]|[tT]he)?(?:\s)?([^\(].*)]]))

      if string.trim(obj) == string.trim(target) then
        xaos.quests[key].objectives[okey].current = tonumber(xaos.quests[key].objectives[okey].current)+tonumber(amount)
        objectiveset = true
        break
      end
    end
    --end
    if objectiveset then
      break
    end
  end
end

function quest_getkilllist(questtofind)
  local retlist = ""
  for key,value in pairs(xaos.quests) do 
    if value.name==questtofind then
      --echo("Found quest")
      for okey,ovalue in pairs(value.objectives) do
        if not ovalue.complete and ovalue.kill then
          if string.len(retlist)&gt;0 then
            retlist = retlist .. ","
          end
          local curtar = string.trim(removearticles(fixstring(string.trim(ovalue.name))))
          retlist = retlist .. curtar
        end
      end
      break
    end
  end
  return retlist
end

function quest_completeobjective(objective)
  local objectiveset = false
  local obj = tostring(rex.match(string.trim(objective), [[(?:[aA]n|[aA]|[tT]he)?(?:\s)?([^\(].*)]]))
  for key,value in pairs(xaos.quests) do 
    --if value.name==questname then
    for okey,ovalue in pairs(value.objectives) do
      --echo(tostring(rex.match(ovalue.name, [[(?:[0-9]+x)?(?:\s)?(?:[aA]|[tT]he)?([^\(].*)\(]])))
      --if not ovalue.complete then
      
      local target = tostring(rex.match(string.trim(ovalue.name), [[(?:[aA]n|[aA]|[tT]he)?(?:\s)?([^\(].*)]]))

      if string.trim(obj) == string.trim(target) then
        xaos.quests[key].objectives[okey].complete=true
        objectiveset = true
        break
      end
    end
    --end
    if objectiveset then
      break
    end
  end
end





function QMContains(qm)
  local function checkQMName(item) 
    return (string.find(qm,item.lookup) ~= nil)
  end
  local entrieList = table.n_filter(xaos.questmasters, checkQMName)
  return table.size(entrieList)~=0
end

function QMGetName(qm)
  local function checkQMName(item) 
    return (string.find(qm,item.lookup) ~= nil)
  end
  local entrieList = table.n_filter(xaos.questmasters, checkQMName)
  return entrieList[1].name
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Buffs</name>
				<packageName></packageName>
				<script>if xaos.buffs == nil then xaos.buffs = {} end
if xaos.buffs.statusBerserk == nil then xaos.buffs.statusBerserk=false end
if xaos.buffs.statusBless == nil then xaos.buffs.statusBless=false end
if xaos.buffs.statusWarcry == nil then xaos.buffs.statusWarcry=false end
if xaos.buffs.statusResolve == nil then xaos.buffs.statusResolve=false end
if xaos.buffs.statusCenter == nil then xaos.buffs.statusCenter=false end
if xaos.buffs.statusTrance == nil then xaos.buffs.statusTrance=false end

function customunion(table1,table2)
  local newtable = table.deepcopy(table1)
  --display(newtable)
  for k,v in pairs(table2) do
    if table.size(table.n_filter(newtable,function (val) return v.id==val.id end)) ==0 then
      table.insert(newtable,table.deepcopy(v))
    end
  end
  
  return newtable
end

function checkbuffs() 
  local returnlist = {missing="",spelllist={}}
  local mastermind = table.contains(string.split(xaos.traits," "),"mastermind")
  
  local checklist={}
  
  if (xaos.buffs.statusBerserk==false and xaos.class.warrior==true and (xaos.config.berserkovercenter or mastermind)) then
    checklist = customunion(checklist,{{id="berserk"}})
  end
  if (xaos.buffs.statusBless==false and xaos.class.cleric==true) then
    checklist = customunion(checklist,{{id="bless"}})
  end
  if (xaos.buffs.statusWarcry==false and xaos.class.warcry==true) then
    checklist = customunion(checklist,{{id="warcry"}})
  end
  if (xaos.buffs.statusResolve==false and xaos.class.barbarian==true and (not xaos.config.berserkovercenter or mastermind)) then
    checklist = customunion(checklist,{{id="resolve"}})
  end
  if (xaos.buffs.statusCenter==false and xaos.class.warrior==true and (not xaos.config.berserkovercenter or mastermind)) then
    checklist = customunion(checklist,{{id="center"}})
  end
  
  if (xaos.class.barbarian) then
    checklist = customunion(checklist, {{id="affinity"},{id="bark skin"},})
  end
  
    if (xaos.class.cleric) then
    checklist = customunion(checklist, {
      {id="accelerate healing"},
      {id="bless"},
      {id="frenzy"},
      {id="godspeed"},
      {id="sanctuary"},
      {id="magic shield"},
    })
  end
  if xaos.class.mage then
    checklist = customunion(checklist, {{id="prismatic shell",action="c prismatic shell"},{id="giant strength",action="c giant strength"},{id="haste",action="c haste"},{id="stone skin",action="c stone skin"},{id="phase",action="c phase"},{id="magic shield",action="c magic shield"},{id="glove of force",action="c glove of force"},})
  end
    
  if (xaos.class.primary == "geomancer") then
    checklist = customunion(checklist, {{id="permanency",action="c permanency"},{id="haste",action="c haste"},{id="titan might",action="c titan might"},{id="phase",action="haste"},{id="parallax form"},{id="globe of force",action="c globe"},{id="stone skin",action="c stone"},{id="battle mind"},{id="magic shield"},})
  end
  if (xaos.class.primary == "paladin") then
    checklist = customunion(checklist, {{id="permanency",action="c permanency"},{id="holy aura",action="c holy aura"},{id="blind faith",action="c 'blind faith"},})
  end
  if (xaos.class.primary == "disciple") then
    checklist = customunion(checklist, {{id="permanency",action="c permanency"},{id="blind faith",action="c blind faith"},{id="bless",action="c bless"},{id="inner faith",action="c 'inner faith"},{id="purging blades",action="c 'purging blades"},{id="imbue wisdom",action="c 'imbue wisdom"},{id="accelerate healing",action="c 'accelerate"},{id="consecrated aura",action="c 'consecrated"},})
  end
  if (xaos.class.primary == "bishop") then
    checklist = customunion(checklist, {{id="permanency",action="c permanency"},{id="holy aura",action="c holy aura"},{id="blind faith",action="c 'blind faith"},{id="divine wisdom",action="c 'divine wisdom"},{id="imbue wisdom",action="c 'imbue wisdom"},})
  end
  --display(checklist)
  for i=1,table.size(checklist),1 do
    if not table.contains(xaos.bufflist,checklist[i].id) then
      returnlist.missing = returnlist.missing .. "Missing: " .. checklist[i].id .. "\n"
      table.insert(returnlist.spelllist,table.deepcopy(checklist[i]))
    end
  end
  if returnlist.missing == "" then
    returnlist.missing = "All buffs active"
  end
  returnlist.missing = returnlist.missing .. "\n\n"
  return returnlist
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Empowers</name>
				<packageName></packageName>
				<script>
if empoweriterate == nil then empoweriterate = 0 end
if xaos.config.autoempower == nil then xaos.config.autoempower = true end

if xaos.config.empower == nil then 
  xaos.config.empower = {
    {target="saves",multiplier=.5},
    {target="regen mana",multiplier=.5},
    {target="hit roll",multiplier=1},
    {target="speed",multiplier=1},
    {target="damage roll",multiplier=1},
    {target="hitpoints",multiplier=1},
    {target="regen hp",multiplier=1},
    {target="armor class",multiplier=1},
    {target="warding",multiplier=1},
  }
end

function startempower()

  xaos.config.empowerbuffer=2000
  empoweriterate=1
  

  local maxcost=0
  --Get Max
  for k,v in pairs(xaos.heroempowers) do
    if table.size(table.n_collect(xaos.config.empower, function(elem) return elem.target == v.name end))&gt;0 then
      if maxcost &lt; tonumber(v.cost) then
        maxcost = tonumber(v.cost)
      end
    end
  end
  
  xaos.config.empowercost = maxcost
  
  
  table.sort(xaos.heroempowers,function (e1,e2) return tonumber(e1.cost) &lt; tonumber(e2.cost) end)
  
  if fullautoempower then
    continueempower()
  end

end

function continueempower()
  local maxcost = xaos.config.empowercost
  
  if table.size(xaos.heroempowers) &lt; empoweriterate or empoweriterate == 0 then
    echo("\nEmpowers Complete\n")
    send("hero empower")
    empoweriterate=0
    tempTimer(2,function() startempower() end)
    
    return 
  end
  
  local curempower = xaos.heroempowers[empoweriterate]
  local empowerconfig = table.n_collect(xaos.config.empower, function(elem) return elem.target == curempower.name end)[1]

  if empowerconfig == nil then 
    --echo("skipping: " .. curempower.name .. "\n")
    empoweriterate = empoweriterate + 1
    continueempower()
  elseif (tonumber(curempower.cost)) &lt;= (maxcost*tonumber(empowerconfig.multiplier)) then
    if xaos.config.empowerbuffer &gt; (xaos.heropoints - curempower.cost) then
      fullautoempower=false
      echo("\n" .. empoweriterate .. "\n")
      echo("  Over Empower Buffer  ")
      echo(curempower.name .. ": " .. tonumber(curempower.cost) .." - " .. (maxcost*tonumber(empowerconfig.multiplier)) .. "\n")
      empoweriterate=1
    else
    
      echo(curempower.name .. ": " .. tonumber(curempower.cost) .." - " .. (maxcost*tonumber(empowerconfig.multiplier)) .. "\n")
      
      send("hero empower " .. curempower.name)
      
    end
  else
    --echo("complete: " .. curempower.name .. "\n")
    empoweriterate = empoweriterate + 1
    continueempower()
  end
 
end

function empowerincrease()

  local curempower = xaos.heroempowers[empoweriterate]
  --local empowerconfig = table.n_collect(xaos.config.empower, function(elem) return elem.target == curempower.name end)[1]
  curempower.cost = curempower.cost + 40
  curempower.current = curempower.current+1
  empoweriterate=1
  table.sort(xaos.heroempowers,function (e1,e2) return tonumber(e1.cost) &lt; tonumber(e2.cost) end)
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Scripting</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------

function leaderhunt(foltarget)
  followTarget=tostring(foltarget)
  huntTarget = tostring(foltarget)
  killTarget = ""
  auto_hunt = true
  
  statusFollowing=true
  statusLeader=true
  
  enableTimer("leader listener")
  disableTimer("scan listener")
  disableTimer("hunt listener")
  xaos.config.scripting.scan_mode = false
  
  --send("auto ")
  auto_hunt = true
  xuicom(
    "You will now try and hunt your leader. " 
  )
  if not (overrideleader) then
     xuicom("This will auto switch if the leader changes.")
  end
  xuicom(" Leader: " .. huntTarget)
  --xuicom("Currently, tracking "..wielded.." as your wielded weapon.")
  
  obsessionMode = true
  location = nil
  --xuicom("You are following " .. followTarget .. " and this script will attempt to hunt them.")
  
  
  combat = false
  hunting = false
end</script>
				<eventHandlerList />
			</Script>
			<ScriptGroup isActive="no" isFolder="yes">
				<name>gostEnchanting</name>
				<packageName>gostEnchanting</packageName>
				<script></script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>gostEnchanting</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>guiLayer</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function guiLayer(eventName)
  echo("\LOADING LAYER1 OF GUI!\n")
end
</script>
						<eventHandlerList>
							<string>layer1</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>createGostGui</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
-------------------------------------------------------Variables
function createGostGui()

enchantgui={}

tableEnchant={}
tableEnchant["Hitroll"] = {name="Hitroll", enchant="add hitroll", count=0}
tableEnchant["Damroll"] = {name="Damroll", enchant="add damr", count=0}
tableEnchant["Speed"] = {name="Speed", enchant="add speed", count=0}
tableEnchant["AC"] = {name="AC", enchant="armor phy", count=0}
tableEnchant["Warding"] = {name="Warding", enchant="armor el", count=0}
tableEnchant["HP"] = {name="HP", enchant="add hitpo", count=0}
tableEnchant["HP Regen"] = {name="HP Regen", enchant="regen hp", count=0}
tableEnchant["Mana"] = {name="Mana", enchant="add mana", count=0}
tableEnchant["Mana Regen"] = {name="Mana Regen", enchant="regen mana", count=0}
tableEnchant["Saves"] = {name="Saves", enchant="add saves", count=0}
tableEnchant["Abjur Casting"] = {name="Abjur Casting", enchant="casting ab", count=0}
tableEnchant["Alter Casting"] = {name="Alter Casting", enchant="casting al", count=0}
tableEnchant["Begui Casting"] = {name="Begui Casting", enchant="casting be", count=0}
tableEnchant["Conju Casting"] = {name="Conju Casting", enchant="casting co", count=0}
tableEnchant["Divin Casting"] = {name="Divin Casting", enchant="casting di", count=0}
tableEnchant["Encha Casting"] = {name="Encha Casting", enchant="casting en", count=0}
tableEnchant["Illus Casting"] = {name="Illus Casting", enchant="casting il", count=0}
tableEnchant["Invoc Casting"] = {name="Invoc Casting", enchant="casting in", count=0}
tableEnchant["Malad Casting"] = {name="Malad Casting", enchant="casting ma", count=0}
tableEnchant["Necro Casting"] = {name="Necro Casting", enchant="casting ne", count=0}
tableEnchant["Relig Casting"] = {name="Relig Casting", enchant="casting re", count=0}
tableEnchant["Impart Str"] = {name="Impart Str", enchant="impart str", count=0}
tableEnchant["Impart Dex"] = {name="Impart Dex", enchant="impart dex", count=0}
tableEnchant["Impart Con"] = {name="Impart Con", enchant="impart con", count=0}
tableEnchant["Impart Wis"] = {name="Impart Wis", enchant="impart wis", count=0}
tableEnchant["Impart Int"] = {name="Impart Int", enchant="impart int", count=0}
----------------------------------------Functions

----------------------------------------Reset Labels Function
function resetLabels(resetNumbers)
if(resetNumbers==1)then
tableEnchant["Hitroll"].count=0
tableEnchant["Damroll"].count=0
tableEnchant["Speed"].count=0
tableEnchant["AC"].count=0
tableEnchant["Warding"].count=0
tableEnchant["HP"].count=0
tableEnchant["HP Regen"].count=0
tableEnchant["Mana"].count=0
tableEnchant["Mana Regen"].count=0
tableEnchant["Saves"].count=0
tableEnchant["Abjur Casting"].count=0
tableEnchant["Alter Casting"].count=0
tableEnchant["Begui Casting"].count=0
tableEnchant["Conju Casting"].count=0
tableEnchant["Divin Casting"].count=0
tableEnchant["Encha Casting"].count=0
tableEnchant["Illus Casting"].count=0
tableEnchant["Invoc Casting"].count=0
tableEnchant["Malad Casting"].count=0
tableEnchant["Necro Casting"].count=0
tableEnchant["Relig Casting"].count=0
tableEnchant["Impart Str"].count=0
tableEnchant["Impart Dex"].count=0
tableEnchant["Impart Con"].count=0
tableEnchant["Impart Wis"].count=0
tableEnchant["Impart Int"].count=0

hitEnchLabel:echo("Hitroll&lt;br&gt;"..enchantGUI["Hitroll"],"black","c16")

maxLabel()
end
end
------------------------------------------End Reset Labels

------------------------------------------Function Max Label
function maxLabel()
hitEnchLabel:show()


resetEnchLabel:show()
startEnchLabel:show()
baseEnchLabel:echo("Click to Close ","black","c16")
baseEnchLabel:setClickCallback("minLabel")

end

--------------------------------------------------------------End Function Max Label



--------------------------------------------------------------Function Min Label
function minLabel()
baseEnchLabel:echo("Click For Enchanting ","black","c16")
baseEnchLabel:setClickCallback("maxLabel")

hitEnchLabel:hide()



resetEnchLabel:hide()
startEnchLabel:hide()
end

-------------------------------------------------------------End Min Labels





-----------------------------------------Main Program

 baseEnchContainer = Geyser.Container:new({
  name = "baseEnchContainer",
  x="50%", y="0%",                    -- makes the container start 20% of the screen away from the right side
  width = "50%", height="100%",      -- filling it up until the end
})

enchantgui.buttons = {}

for k,v in pairs(tableEnchant) do

  enchantgui.buttons[k] = Geyser.Label:new({
    name = v.name .. "Label",
    x = "0%", y ="0%",
    width = "20%", height ="10%",
    fgColor = "black",
  },baseEnchContainer)
  enchantgui.buttons[k]:setColor("green")
  enchantgui.buttons[k]:setStyleSheet([[
    background-color: grey;
    border-width: 5px;
    border-style: solid;
    border-color: green;
    border-radius: 3px;
  ]])
  enchantgui.buttons[k]:echo("Hitroll&lt;br&gt;"..v.count,"black","c16")
  enchantgui.buttons[k]:setClickCallback("enchIncrease",v.name,v.name .. "Label",k)
  enchantgui.buttons[k]:show()

end

startEnchLabel = Geyser.Label:new({
  name = "startEnchLabel",
  x = "0%", y ="-10%",
  width = "60%", height ="10%",
  fgColor = "black",
},baseEnchContainer)
startEnchLabel:setColor("green")
startEnchLabel:setStyleSheet([[
  background-color: grey;
  border-width: 5px;
  border-style: solid;
  border-color: green;
  border-radius: 3px;
]])
startEnchLabel:echo("Click to Start&lt;br&gt;Make sure to have mats and stabilizers needeed!!!","black","c16")
startEnchLabel:setClickCallback("startEnchant")

resetEnchLabel = Geyser.Label:new({
  name = "resetEnchLabel",
  x = "-40%", y ="-10%",
  width = "20%", height ="10%",
  fgColor = "black",
},baseEnchContainer)
resetEnchLabel:setColor("green")
resetEnchLabel:setStyleSheet([[
  background-color: grey;
  border-width: 5px;
  border-style: solid;
  border-color: green;
  border-radius: 3px;
]])
resetEnchLabel:echo("Click to Reset Numbers ","black","c16")
resetEnchLabel:setClickCallback("resetLabels",1)

baseEnchLabel = Geyser.Label:new({
  name = "baseEnchLabel",
  x = "80%", y ="90%",
  width = "20%", height ="10%",
  fgColor = "black",
},baseEnchContainer)
baseEnchLabel:setColor("green")
baseEnchLabel:setStyleSheet([[
  background-color: grey;
  border-width: 5px;
  border-style: solid;
  border-color: green;
  border-radius: 3px;
]])

resetLabels(1)
minLabel()


--TODO: FIX
function enchIncrease(tableTag,labelName,enchIndex)
  enchIndex=tostring(enchIndex)
  if(enchantGUI[tableTag]&lt;=14)then
	  enchantGUI[tableTag]=enchantGUI[tableTag]+1
  	tableEnchantNum[enchIndex]=tableEnchantNum[enchIndex]+1
	else
	  enchantGUI[tableTag]=0
		tableEnchantNum[enchIndex]=0
  end	
	labelName2=Geyser.Label:getWindow(labelName)
	labelName2:echo(tableTag.."&lt;br&gt;"..enchantGUI[tableTag],"black","c16")
end

function startEnchant()
  enableTrigger("gostEnchanting")
  enchCount=0
  switchCount=1
  if(enchCount&lt;tableEnchant[tostring(switchCount)].count)then
    send("enchant "..tableEnchant[tostring(switchCount)].enchant)
	  send("pro")
 	  enchCount=enchCount+1
  else
		while(tableEnchant[tostring(switchCount)].count==0)do
	    switchCount=switchCount+1
		end
	  if(tableEnchant[tostring(switchCount)])then
			send("enchant "..tableEnchant[tostring(switchCount)].enchant)
	    send("pro")
		  enchCount=1
	  end
	end	
	minLabel()
end

baseEnchContainer:hide()
end</script>
						<eventHandlerList>
							<string>layer1</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>loadEnchantmentPackage</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
tempTimer(4,[[useGostEnchant=0]])
tempTimer(5,[[raiseEvent("layer1")]])</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<Script isActive="yes" isFolder="no">
				<name>LoadDamageCalcs</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
if RoundCalc == nil then
  RoundCalc = {
    mine = {hit=0,damage=0,block=0,dodge=0,parry=0,miss=0,reflect=0,phase=0,},
    opp = {hit=0,damage=0,block=0,dodge=0,parry=0,miss=0,reflect=0,phase=0,},
  }
end
if TotalCalc == nil then
  TotalCalc = {count=0,
    mine = {hit=0,damage=0,block=0,dodge=0,parry=0,miss=0,reflect=0,phase=0,},
    opp = {hit=0,damage=0,block=0,dodge=0,parry=0,miss=0,reflect=0,phase=0,},
    history = {}
  }
end
if scenario_round_count == nil then
  scenario_round_count = 0
end
if DamageScenarios == nil then
  DamageScenarios = {}
end

function prettyPrintDamageCounts()

  local str = ""
  local sumcount = 0
  for k,v in pairs(damcounts) do
    sumcount = sumcount + v
  end
  
  for k,v in pairs(damcounts) do
    str = str .. k .. ": " .. string.format("%4.2f",(v/sumcount)*100) .. "\n"
  end
  return str
end
function scenarioDisplay(index)
  return DamageScenarios[index].name .. "\n" .. damageDisplay(DamageScenarios[index].data)
end

function totalhit(mine,opp)
  return mine.hit+opp.block+opp.dodge+opp.parry+opp.miss+opp.reflect+opp.phase
end



function getDef(sub,opp)
	local subreturn = "&lt;grey&gt;"
	local hitcnt = totalhit(opp,sub)
	subreturn = subreturn .. " Dodge  : " .. string.format("%5.2f",100*(sub.dodge / hitcnt)) .. "%  - " .. sub.dodge .. "\n"
	subreturn = subreturn .. " Parry  : " .. string.format("%5.2f",100*(sub.parry / hitcnt)) .. "%  - " .. sub.parry .. "\n"
	subreturn = subreturn .. " Block  : " .. string.format("%5.2f",100*(sub.block / hitcnt)) .. "%  - " .. sub.block .. "\n"
	subreturn = subreturn .. " Phase  : " .. string.format("%5.2f",100*(sub.phase / hitcnt)) .. "%  - " .. sub.phase .. "\n"
	subreturn = subreturn .. " Reflect: " .. string.format("%5.2f",100*(sub.reflect / hitcnt)) .. "%  - " .. sub.reflect .. "\n"
	subreturn = subreturn .. " Miss   : " .. string.format("%5.2f",100*(sub.miss / hitcnt)) .. "%  - " .. sub.miss .. "\n"
	subreturn = subreturn .. " Hit    : " .. string.format("%5.2f",100*(opp.hit / hitcnt)) .. "%  - " .. opp.hit .. "\n"
	  --subreturn = subreturn .. totalhit(opp,sub) .. "\n"
	return subreturn
end

function damageDisplay(data)
  local toreturn = ""


  toreturn = toreturn .."\n&lt;white&gt;Defense Per Round - " .. totalhit(data.mine,data.opp) .. "\n"
  toreturn = toreturn ..getDef(data.mine,data.opp)
  toreturn = toreturn .."&lt;white&gt;Offense Per Round - " .. totalhit(data.opp,data.mine) .. "\n"
  toreturn = toreturn ..getDef(data.opp,data.mine)
  toreturn = toreturn .. "Dam In  /Rd : " ..string.format("%5.3f",(data.opp.damage / data.count)) .. "\n"
  toreturn = toreturn .. "Dam Out /Rd : " ..string.format("%5.3f",(data.mine.damage / data.count)) .. "\n"
  toreturn = toreturn .."&lt;white&gt;Rounds - " .. data.count .. "\n"

  return toreturn
end

function getScenario(name)

end

function TotalCalc.Remove(rnd)
  --TotalCalc.SubRemove(self.mine,rnd.mine)
  --TotalCalc.SubRemove(self.opp,rnd.opp)
  
  TotalCalc.mine.hit=TotalCalc.mine.hit-rnd.mine.hit
  TotalCalc.mine.damage=TotalCalc.mine.damage-rnd.mine.damage
  TotalCalc.mine.block=TotalCalc.mine.block-rnd.mine.block
  TotalCalc.mine.dodge=TotalCalc.mine.dodge-rnd.mine.dodge
  TotalCalc.mine.parry=TotalCalc.mine.parry-rnd.mine.parry
  TotalCalc.mine.miss=TotalCalc.mine.miss-rnd.mine.miss
  TotalCalc.mine.reflect=TotalCalc.mine.reflect-rnd.mine.reflect
  TotalCalc.mine.phase=TotalCalc.mine.phase-rnd.mine.phase
  
  TotalCalc.opp.hit=TotalCalc.opp.hit-rnd.opp.hit
  TotalCalc.opp.damage=TotalCalc.opp.damage-rnd.opp.damage
  TotalCalc.opp.block=TotalCalc.opp.block-rnd.opp.block
  TotalCalc.opp.dodge=TotalCalc.opp.dodge-rnd.opp.dodge
  TotalCalc.opp.parry=TotalCalc.opp.parry-rnd.opp.parry
  TotalCalc.opp.miss=TotalCalc.opp.miss-rnd.opp.miss
  TotalCalc.opp.reflect=TotalCalc.opp.reflect-rnd.opp.reflect
  TotalCalc.opp.phase=TotalCalc.opp.phase-rnd.opp.phase
end

function TotalCalc.SubRemove(self,rnd)
  self.hit=self.hit-rnd.hit
  self.damage=self.damage-rnd.damage
  self.block=self.block-rnd.block
  self.dodge=self.dodge-rnd.dodge
  self.parry=self.parry-rnd.parry
  self.miss=self.miss-rnd.miss
  self.reflect=self.reflect-rnd.reflect
  self.phase=self.phase-rnd.phase
end

function TotalCalc.SubCombine(self,rnd)
  self.hit=self.hit+rnd.hit
  self.damage=self.damage+rnd.damage
  self.block=self.block+rnd.block
  self.dodge=self.dodge+rnd.dodge
  self.parry=self.parry+rnd.parry
  self.miss=self.miss+rnd.miss
  self.reflect=self.reflect+rnd.reflect
  self.phase=self.phase+rnd.phase
end

function TotalCalc.Combine(rnd)
  --TotalCalc.SubCombine(TotalCalc.mine,TotalCalc.mine)
  --TotalCalc.SubCombine(TotalCalc.opp,TotalCalc.opp)
  
  TotalCalc.mine.hit=TotalCalc.mine.hit+rnd.mine.hit
  TotalCalc.mine.damage=TotalCalc.mine.damage+rnd.mine.damage
  TotalCalc.mine.block=TotalCalc.mine.block+rnd.mine.block
  TotalCalc.mine.dodge=TotalCalc.mine.dodge+rnd.mine.dodge
  TotalCalc.mine.parry=TotalCalc.mine.parry+rnd.mine.parry
  TotalCalc.mine.miss=TotalCalc.mine.miss+rnd.mine.miss
  TotalCalc.mine.reflect=TotalCalc.mine.reflect+rnd.mine.reflect
  TotalCalc.mine.phase=TotalCalc.mine.phase+rnd.mine.phase
  
  TotalCalc.opp.hit=TotalCalc.opp.hit+rnd.opp.hit
  TotalCalc.opp.damage=TotalCalc.opp.damage+rnd.opp.damage
  TotalCalc.opp.block=TotalCalc.opp.block+rnd.opp.block
  TotalCalc.opp.dodge=TotalCalc.opp.dodge+rnd.opp.dodge
  TotalCalc.opp.parry=TotalCalc.opp.parry+rnd.opp.parry
  TotalCalc.opp.miss=TotalCalc.opp.miss+rnd.opp.miss
  TotalCalc.opp.reflect=TotalCalc.opp.reflect+rnd.opp.reflect
  TotalCalc.opp.phase=TotalCalc.opp.phase+rnd.opp.phase
  
  TotalCalc.count=TotalCalc.count+1
  
  table.insert(TotalCalc.history,table.deepcopy(rnd))
  
  if scenario_round_count &gt; 0 and scenario_round_count == TotalCalc.count then
    expandAlias("FinishScenario " .. scenario_name)
    scenario_round_count = -1
  end
  --Limit to 1000 rows or scenario length
  if TotalCalc.count &gt; 1000 then
    if TotalCalc.count &gt; scenario_round_count then
        local tabsize = 1 --table.size(TotalCalc.history)
        --echo("Tablesize" .. tabsize)
        local remrnd = TotalCalc.history[tabsize]
        --display(TotalCalc.history[2])
        --display(TotalCalc.history[tabsize])
      
        TotalCalc.Remove(remrnd)
        TotalCalc.count = TotalCalc.count-1

        table.remove(TotalCalc.history,tabsize)
      
    end
  end
end

function TotalCalc.Clear()
  TotalCalc.mine.hit=0
  TotalCalc.mine.damage=0
  TotalCalc.mine.block=0
  TotalCalc.mine.dodge=0
  TotalCalc.mine.parry=0
  TotalCalc.mine.miss=0
  TotalCalc.mine.reflect=0
  TotalCalc.mine.phase=0
  
  TotalCalc.opp.hit=0
  TotalCalc.opp.damage=0
  TotalCalc.opp.block=0
  TotalCalc.opp.dodge=0
  TotalCalc.opp.parry=0
  TotalCalc.opp.miss=0
  TotalCalc.opp.reflect=0
  TotalCalc.opp.phase=0
  
  TotalCalc.history = {}
  
  TotalCalc.count=0
 end

function RoundCalc.Clear()
  RoundCalc.mine.hit=0
  RoundCalc.mine.damage=0
  RoundCalc.mine.block=0
  RoundCalc.mine.dodge=0
  RoundCalc.mine.parry=0
  RoundCalc.mine.miss=0
  RoundCalc.mine.reflect=0
  RoundCalc.mine.phase=0
  
  RoundCalc.opp.hit=0
  RoundCalc.opp.damage=0
  RoundCalc.opp.block=0
  RoundCalc.opp.dodge=0
  RoundCalc.opp.parry=0
  RoundCalc.opp.miss=0
  RoundCalc.opp.reflect=0
  RoundCalc.opp.phase=0
 end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Party</name>
				<packageName></packageName>
				<script>function isInParty(membername)

  membername = string.lower(membername)
  return table.size(table.n_collect(xaos.party.members,function (elem) return string.lower(elem.name) == membername end)) &gt; 0

end

function yourParty()

  return xaos.party.leader == "Your"

end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Echoes</name>
				<packageName></packageName>
				<script>

function dataecho(header,text) 
  --if xaos.config.debugmode then
    feedManager("[" .. header .. "] " ..text)
  --end
end

function debugecho(text) 
  if xaos.config.debugmode then
    cecho("data","[DE " .. getTime(true,"HH.mm.ss") .. "] " ..text .. "\n")
  end
end
function debugwrite(text) 
  if xaos.config.debugmode then
    cecho("main","[DE " .. getTime(true,"HH.mm.ss") .. "] " ..text .. "\n")
  end
end
function helpheadecho(text) 
  hecho("main","#c0FFFF\n" .. text .. "\n")
end
function helpheaddescecho(text) 
  hecho("main","  " .. text .. "\n")
end
function helpbodyecho(text) 
  hecho("main","#c0FFFF  " .. text .. "\n")
end

function helpdescecho(text) 
  hecho("main","    " .. text .. "\n")
end</script>
				<eventHandlerList />
			</Script>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>XUI</name>
				<packageName></packageName>
				<script>if mysettings.UIType ~= "XaosUI" then return end



</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>UI</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Parent</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Create Tabbed Layout</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

function menu_addtab(v)
    if table.contains(menu.tabs,v) then
      cecho("\n\n&lt;yellow&gt;Tab already exists\n\n")
      return
    end
    table.insert(menu.tabs,v)
    menu[v.."tab"] = Geyser.Label:new({
        name = "menu."..v.."tab",
      },menu.header)
    
    menu[v.."tab"]:setStyleSheet([[
      background-color: ]]..menu.color1..[[;
      margin-right: 1px;
      margin-left: 1px;
      border-top: 1px solid white;
    ]])
    menu[v.."tab"]:echo("&lt;center&gt;"..v)
    menu[v.."tab"]:setClickCallback("menu.click",v)
    menu[v.."tab"]:setDoubleClickCallback("menu.doubleclick",v)
    menu[v] = Geyser.Container:new({
      name = "menu."..v,
      x = 0, y = 0,
      width = "100%",
      height = "80%",
    },menu.footer)
    
    menu[v .. "back"] = Geyser.Label:new({
      name = "menu."..v .. "back",
      x = 0, y = 0,
      width = "100%",
      height = "100%",
    },menu[v])
  
    menu[v .. "back"]:setStyleSheet([[
      background-color: black;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;
      border-top: 1px solid white;
    ]])
    
    menu[v]:hide()
    menu.current = menu.current or menu.tabs[1]
  end


if menu == nil then
  local windowWidth, windowHeight = getMainWindowSize()
  if contWidth == nil then contWidth = 650 end

  menu = menu or {
    tabs = {},
    color1 = "rgb(0,0,70)",
    color2 = "rgb(0,0,50)",
    width = "20%",
    height = "40%",
  }

  
if mysettings.XUI.UIMode == "userwindow" then  
  menu.window = Geyser.UserWindow:new({
    name = "menu.back",
    docked=true,
    dockPosition = "right",
    width="600px"
  })
else
  menu.window = Geyser.Container:new({
    name = "menu.back",
    x="-600px",y="0px",
    width="600px",height="100%",
  })
end
  
  menu.container = Geyser.Container:new({
    name = "menu.backcontainer",
    x = "0%", y = "50%",
    width = "100%",
    height = "50%",
  },menu.window)
  
  menu.header = Geyser.VBox:new({
    name = "menu.header",
    x = 0, y = 0,
    width = "15%",
    height = "80%",
  },menu.container)
  
  menu.footer = Geyser.Label:new({
    name = "menu.footer",
    x = "15%", y = "0%",
    width = "85%",
    height = "100%",
  },menu.container)
  
  menu.footer:setStyleSheet([[
    background-color: black;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
  ]])
  
  menu.center = Geyser.Label:new({
    name = "menu.center",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
  },menu.footer)
  menu.center:setStyleSheet([[
    border-radius: 10px;
    margin: 1px;
  ]])
  --local defaulttabs = {"Quests","Variable","Combat","XP"}
  --for k,v in pairs(defaulttabs) do 
  --  menu_addtab(v)  
  --end
  
  
end


</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Click Callbacks</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

function menu.click(tab,evt)
  dataBackCon:move("0%","80%")
  dataBackCon:resize("100%","20%")
  dataConOverlay:show()
  
  menu[menu.current]:hide()
  menu.current = tab
  menu[menu.current]:show()
  

end

function menu.doubleclick(tab,evt)

  if menu[tab .. "_doubleclick"] ~= nil then
    menu[tab .. "_doubleclick"]()
  end 

end

function menu.setdoubleclick(tab,func)

  menu[tab .. "_doubleclick"] = func

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Bottom Main UI</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

setBorderBottom(130)
-- give it a unique name here
bottom_container =
  Geyser.Container:new({name = "bottom_container", x = 0, y = -100, width = "100%", height = 100})
--setBorderLeft(200)
-- give it a unique name here
-- have it start at the top-left corner of mudlet
-- with a width of 200, and a height of the full screen, hence 100%

--HP Gauge
hpbar =
  Geyser.Gauge:new({name = "hpbar", x = "20%", y = 0, width = "30%", height = 42}, bottom_container)
hpbar.front:setStyleSheet(
  [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #f04141, stop: 0.1 #ef2929, stop: 0.49 #cc0000, stop: 0.5 #a40000, stop: 1 #cc0000);
    border-width: 1px;
    border-color: black;
    border-style: solid;
    border-radius: 7;
    padding: 3px;
]]
)
hpbar.back:setStyleSheet(
  [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #bd3333, stop: 0.1 #bd2020, stop: 0.49 #990000, stop: 0.5 #700000, stop: 1 #990000);
    border-width: 1px;
    border-color: black;
    border-style: solid;
    border-radius: 7;
    padding: 3px;
]]
)
--Mana Gauge
manabar =
  Geyser.Gauge:new({name = "manabar", x = "50%", y = 0, width = "30%", height = 20}, bottom_container)
manabar.front:setStyleSheet(
  [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #4e89e8, stop: 0.1 #2d74e5, stop: 0.49 #104599, stop: 0.5 #072a60, stop: 1 #011b44);
       border-width: 1px;
    border-color: black;
    border-style: solid;
    border-radius: 7;
    padding: 3px; ]]
)
manabar.back:setStyleSheet(
  [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #040677, stop: 0.1 #040677, stop: 0.49 #040677, stop: 0.5 #040677, stop: 1 #040677);
        border-width: 1px;
    border-color: black;
    border-style: solid;
    border-radius: 7;
    padding: 3px;]]
)

--background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #b142d6, stop: 0.1 #9d32c1, stop: 0.49 #842ca3, stop: 0.5 #721f8e, stop: 1 #591072);
--QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 rgba(177, 66, 214,50%), stop: 0.1 rgba(157, 50, 193,20%), stop: 0.49 rgba(132, 44, 163,20%), stop: 0.5 rgba(114, 31, 142,20%), stop: 1 rgba(89, 16, 114,20%)
--Xp Gauge
xpbar =
  Geyser.Gauge:new({name = "xpbar", x = "20%", y = 51, width = "60%", height = 20}, bottom_container)
xpbar.front:setStyleSheet(
  [[background-color: rgba(157, 50, 193,40%);
    border-width: 1px;
    border-color: purple;
    border-style: solid;
    border-radius: 7;
    padding: 3px;]]
)
--background-color: rgba(0,0,0,0%);
xpbar.back:setStyleSheet(
  [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #000000, stop: 0.1 #000000, stop: 0.49 #000000, stop: 0.5 #000000, stop: 1 #000000);
    border-width: 1px;
    border-color: purple;
    border-style: solid;
    border-radius: 7;
    padding: 3px;]]
)
xpbar:hide()
--Ascend Gauge
--250, 123, 30,
ascbar =
  Geyser.Gauge:new({name = "ascbar",  x = "20%", y = 55, width = "60%", height =25}, bottom_container)
ascbar.front:setStyleSheet(
  [[background-color: rgba(7, 221, 204,40%);
    border-width: 1px;
    border-color: rgb(7, 221, 204);
    border-style: solid;
    border-radius: 7;
    padding: 3px;]]
)
ascbar.back:setStyleSheet(
  [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #000000, stop: 0.1 #000000, stop: 0.49 #000000, stop: 0.5 #000000, stop: 1 #000000);
    border-width: 1px;
    border-color: rgb(7, 221, 204);
    border-style: solid;
    border-radius: 7;
    padding: 3px;]]
)
--mvm Gauge
--background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #efba4f, stop: 0.1 #ba8a2a, stop: 0.49 #966e1e, stop: 0.5 #a3700b, stop: 1 #B89902);
mvmbar =
  Geyser.Gauge:new({name = "mvmbar", x = "50%", y = 22, width = "30%", height = 20}, bottom_container)
mvmbar.front:setStyleSheet(
  [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #efba4f, stop: 0.1 #ba8a2a, stop: 0.49 #966e1e, stop: 0.5 #a3700b, stop: 1 #B89902);
    border-width: 1px;
    border-color: black;
    border-style: solid;
    border-radius: 7;
    padding: 3px;
		]]
)
mvmbar.back:setStyleSheet(
  [[background-color: #000000;
    
		border-width: 1px;
    border-color: black;
    border-style: solid;
    border-radius: 7;
    padding: 0px;]]
)




--images maybe

-- hpBarHeart = Geyser.Label:new({
  -- name = "hpBarHeart",
  -- x = 0, y = 0,
  -- width = "16px", height = "14px",
-- }, bottom_container)
-- picture_label:setBackgroundImage([[XUI_assets/8-bit parts/P_Red05.png]]) </script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Data Fd Window Click</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

--sysWindowMousePressEvent
function onMainWindowClickHandler( event, button, x, y )
  dataBackCon:move("0%","80%")
  dataBackCon:resize("100%","20%")
  dataConOverlay:show()
end

registerAnonymousEventHandler("sysWindowMousePressEvent", "onMainWindowClickHandler")
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Resizors Mid</name>
							<packageName></packageName>
							<script>
mMenuVDrag = mMenuVDrag or Geyser.Label:new({
  name = "mMenuVDrag",
  x = "0%", y = "-50%",
  width = "100%", height = 5,
  fgColor = "black",
  color = "white",
}, menu.window)
mMenuVDrag:setStyleSheet([[
  background-color: white;
]])
 
MIN_HEIGHT = 100
 
 setLabelCursor("mMenuVDrag",5)
--
-- Callback functions.
--
function onMenuVDragTimer()
  -- Get mouse position
  local x, y = getMousePosition()
  local windowWidth, windowHeight 
  
  if mysettings.XUI.UIMode == "container" then
    windowWidth = menu.window.get_width()
    windowHeight = menu.window.get_height()
  else
    windowWidth,windowHeight = getUserWindowSize("menu.back")
  end
  local height
  
  -- Substract the top of the label  to get the new height.
  height = y
  if height &lt; MIN_HEIGHT then
    -- Height is too small.
    height = MIN_HEIGHT
  end

    mMenuVDrag:move("0px",height-BORDER_WIDTH.."px")
     -- Set the new size and restart timer.
    OOCCon:resize(windowWidth.."px", height.."px")
    OOCCon:reposition()
  
    menu.container:set_constraints({x="5px",y=height.."px",width=windowWidth.."px", height=(windowHeight-height).."px"})

  
end
 
function onMenuVDragClick()
  -- The user clicked the drag label.
  -- Start a temp timer to update the size of the label.
  if  exists("vMenudragtimer", "timer") == 0 then
    vdragtimer = permTimer("vMenudragtimer", "", .016, [[onMenuVDragTimer()]])
    echo("timer created")
  end

  enableTimer("vMenudragtimer")
  debugecho("timer enabled")
end
 
function onMenuVDragRelease()
  -- Button is release so stop timer and updates.
  disableTimer("vMenudragtimer")
  debugecho("released")
end
 
--
-- Set mouse event callbacks.
--
setLabelClickCallback("mMenuVDrag", "onMenuVDragClick")
setLabelReleaseCallback("mMenuVDrag", "onMenuVDragRelease")
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Resizors Left</name>
							<packageName></packageName>
							<script>MIN_WIDTH = 100
BORDER_WIDTH = 5
local SCROLL_WIDTH = 10

mMenuHDrag = mMenuHDrag or Geyser.Label:new({
  name = "mMenuHDrag",
  x = "0px", y = "0%",
  width = BORDER_WIDTH .. "px", height = "100%",
  fgColor = "black",
  color = "white",
}, menu.window)
mMenuHDrag:setStyleSheet([[
  background-color: white;
]])
 
setLabelCursor("mMenuHDrag",6)
--
-- Callback functions.
--
function onMenuHDragTimer()
  -- Get mouse position
  local x, y = getMousePosition()
  local windowWidth, windowHeight 
  
  local parentWidth,parentHeight = getMainWindowSize()
  
  if mysettings.XUI.UIMode == "container" then
    windowWidth = menu.window.get_width()
    windowHeight = menu.window.get_height()
   
  else
    windowWidth,windowHeight = getUserWindowSize("menu.back")
  end

  local width

  -- Substract the top of the label  to get the new height.
  width = parentWidth-x
  if width &lt; MIN_WIDTH then
    -- Height is too small.
    width = MIN_WIDTH
  end
  
  OOCCon:resize(windowWidth-BORDER_WIDTH.."px", OOCCon.height)
  OOCCon:reposition()
  
  -- Set the new size and restart timer.
  --menu.window:move("-" .. width .. "px","0px")
  --menu.window:resize(width.."px", windowHeight.."px")
  menu.window:set_constraints({x="-" .. width .. "px",y="0px",width=width.."px", height=(parentHeight).."px"})
  menu.window:reposition()

  --menu.container:set_constraints({x="0px",y=menu.container.y,width=(width).."px", height=menu.container.height})

  
end
 
function onMenuHDragClick()
  -- The user clicked the drag label.
  -- Start a temp timer to update the size of the label.
  if  exists("hMenudragtimer", "timer") == 0 then
    hdragtimer = permTimer("hMenudragtimer", "", .016, [[onMenuHDragTimer()]])
    echo("timer created")
  end

  enableTimer("hMenudragtimer")
  debugecho("timer enabled")
end
 
function onMenuHDragRelease()
  -- Button is release so stop timer and updates.
  disableTimer("hMenudragtimer")
  debugecho("released")
  resizeParent()
end
 
function resizeParent()
  local windowWidth, windowHeight = getMainWindowSize()
  --local userwindowWidth, userwindowHeight = getUserWindowSize("menu.back")
 --echo(userwindowWidth)
 local userwindowWidth = menu.window.get_width()
 --echo(userwindowWidth)
  setBorderRight(userwindowWidth+BORDER_WIDTH)
  bottom_container:resize(windowWidth-userwindowWidth-BORDER_WIDTH .. "px","100px")
end
 
 
resizeParent()
--
-- Set mouse event callbacks.
--
setLabelClickCallback("mMenuHDrag", "onMenuHDragClick")
setLabelReleaseCallback("mMenuHDrag", "onMenuHDragRelease")
</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Right Windows</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>ScoreList</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

menu_addtab("Score") 

scoreCon = scoreCon or Geyser.MiniConsole:new({
  name="ScoreList",
  x="2%", y="2%",
  wrapAt = chatWrap,
  width="98%", height="96%",
  fgColor = "white",
  color = "black",
  fontSize=chatFontSize,
  docked = true,
  scrollBar = true,
},menu.Score)
scoreCon:setColor("black")
scoreCon:setFontSize(mysettings.scorefontsize)

enableScrollBar("ScoreList")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Quest Creator</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

menu_addtab("Quests")

questStatusCon = questStatusCon or Geyser.MiniConsole:new({
  name="queststatus",
  x="2%", y="2%",
  autowrap=true,
  fgColor = "white",
  color = "black",
  width="98%", height="96%",
  fontSize=mysettings.questfontsize,
  scrollBar = true,
},menu.Quests)

questStatusCon:resetAutoWrap()

enableScrollBar("queststatus")



</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>VariableList</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

menu_addtab("Variables")

variableCon = variableCon or Geyser.MiniConsole:new({
  name="VariableList",
  x="2%", y="2%",
  wrapAt = chatWrap,
  width="98%", height="96%",
  fgColor = "white",
  color = "black",
  fontSize=chatFontSize,
  docked = true,
  scrollBar = true,
},menu.Variables)
variableCon:setColor("black")
variableCon:setFontSize(mysettings.variablefontsize)

enableScrollBar("VariableList")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>CombatList</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

menu_addtab("Combat")

combatCon = combatCon or Geyser.MiniConsole:new({
  name="CombatList",
  x="2%", y="2%",
  wrapAt = chatWrap,
  width="96%", height="96%",
  fgColor = "white",
  color = "black",
  fontSize=chatFontSize,
  docked = true,
  scrollBar = true,
},menu.Combat)
combatCon:setColor("black")
combatCon:setFontSize(mysettings.scorefontsize)

enableScrollBar("CombatList")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Experience rate visualization</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end


menu_addtab("XP")


left_container = left_container or Geyser.Container:new({name = "left_container", x = 0, y = 0, width = "100%", height = "100%"},menu.XP)

--XP RATE
xprTitle = xprTitle or
  Geyser.Label:new(
    {
      name = "xprTitle",
      x = "0%",
      y = "0.5c",
      width = "100%",
      height = "2c",
      message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    left_container
  )
xprTitle:echo(" Experience Rate:")
xprText = xprText or
  Geyser.Label:new(
    {
      name = "xprText",
      x = "0%",
      y = "11.5c",
      width = "100%",
      height = "3c",
      message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    left_container
  )
xprText:setStyleSheet(
  [[
    font: large center "Garamond";
  	
  	background-color: #222233;
  	color: #AACCFF;
    padding-left:15px;
  ]]
  )
xprDisplay = xprDisplay or
  Geyser.Label:new(
    {
      name = "xprDisplay",
      x = "0%",
      y = "1.8c",
      width = "100%",
      height = "9c",
      message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    left_container
  )
xprDisplay:setFontSize(10)
xprDisplay:setStyleSheet(
  [[
  font: large center "Garamond";
	
	background-color: #222233;
	color: #AACCFF;

]]
)
local barcount = 16

local barstart = 100/(barcount+1)
local barwidth = (100/(barcount+1)) - .2
xpRateBars = xpRateBars or {}

for k=1,barcount  do


  --echo("-" ..((k)*barstart)+.1 .. "%" .. "\n")
  xpRateBars[k] = xpRateBars[k] or
    Geyser.Gauge:new(
      {name = "xpRateBar" .. k, x = "-" .. (2+(k*6)) .. "%", y = "5%", width = "5%", height = "90%", orientation = "vertical"},
      xprDisplay
    )
  xpRateBars[k]:move("-" ..((k)*barstart)+(barstart/2)+.1 .. "%","5%")
  xpRateBars[k]:resize(barwidth .. "%","90%")
  xpRateBars[k].front:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #BA84E3, stop: 0.1 #B36BE9, stop: 0.49 #7D00DA stop: 0.5 #890FE5, stop: 1 #7D00DA);
      border-top: 0px black solid;
      border-left: 0px black solid;
      border-bottom: 0px black solid;
      border-radius: 0;
  		font-size: 5;]]
  )
  xpRateBars[k].back:setStyleSheet(
    [[background-color: black;
      border-width: 0px;
      border-color: black;
      border-style: solid;
      border-radius: 0;
      padding: 0px;]]
  )  

end


--KILL RATE

--killrateText = killrateText or
  -- Geyser.Label:new(
    -- {
      -- name = "killrateText",
      -- x = "2%",
      -- y = "22c",
      -- width = "100%",
      -- height = "3c",
      -- message = [[&lt;center&gt;&lt;/center&gt;]],
    -- },
    -- left_container
  -- )
killrateTitle = killrateTitle or
  Geyser.Label:new(
    {
      name = "killrateTitle",
      x = "0%",
      y = "14c",
      width = "100%",
      height = "2c",
      message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    left_container
  )
killrateTitle:echo(" Kill Rate:")
 killrateDisplay = killrateDisplay or
   Geyser.Label:new(
     {
       name = "killrateDisplay",
        x = "0%",
        y = "13.5c",
        width = "100%",
        height = "8c",
        message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    left_container
  )
killrateDisplay:setFontSize(10)
killrateDisplay:setStyleSheet(
  [[
  font: large center "Garamond";
	
	background-color: #222233;
	color: #AACCFF;
]]
)

killRateBars = killRateBars or {}
for k=1,16 do

  killRateBars[k] = killRateBars[k] or
    Geyser.Gauge:new(
      {name = "killRateBar" .. k, x = "-" .. (2+(k*6)) .. "%", y = "5%", width = "5%", height = "90%", orientation = "vertical"},
      killrateDisplay
    )
  killRateBars[k].front:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ff9900, stop: 0.1 #e58700, stop: 0.49 #d47c00 stop: 0.5 #b26400, stop: 1 #985300);
      border-top: 1px black solid;
      border-left: 1px black solid;
      border-bottom: 1px black solid;
      border-radius: 7;
  		font-size: 5;]]
  )
  killRateBars[k].back:setStyleSheet(
    [[background-color: black;
      border-width: 1px;
      border-color: black;
      border-style: solid;
      border-radius: 7;
  		
      padding: 3px;]]
  )  
  killRateBars[k]:move("-" ..((k)*barstart)+(barstart/2)+.1 .. "%","5%")
    killRateBars[k]:resize(barwidth .. "%","90%")
    killRateBars[k].front:setStyleSheet(
      [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ff9900, stop: 0.1 #e58700, stop: 0.49 #d47c00 stop: 0.5 #b26400, stop: 1 #985300);
        border-top: 0px black solid;
        border-left: 0px black solid;
        border-bottom: 0px black solid;
        border-radius: 0;
    		font-size: 5;]]
    )
    killRateBars[k].back:setStyleSheet(
      [[background-color: black;
        border-width: 1px;
        border-color: black;
        border-style: solid;
        border-radius: 1;
        padding: 1px;]]
    )  
end

local graphoptions={{1,"1 min"},{5,"5 mins"},{10,"10 mins"},{15,"15 mins"},{30,"30 mins"},{60,"1 hr"},}



if xpGraphOptionsBox == nil then
  xpGraphOptionsBox =  
    Geyser.HBox:new(
     {
       name = "xpGraphOptionsBox",
        x = "0%",
        y = "25c",
        width = "100%",
        height = "2c",
        message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    left_container
  )
  
  xpGraphOptions = {}
  
  for k,v in pairs(graphoptions) do
    xpGraphOptions[v[1]] = 
    Geyser.Label:new(
      {
        name = "graphoption" .. k,
        width = "100%",
        height = "2c",
        message = [[&lt;center&gt;&lt;/center&gt;]],
      },
      xpGraphOptionsBox
    )
    xpGraphOptions[v[1]]:setFontSize(10)
    xpGraphOptions[v[1]]:setStyleSheet(
      [[
      font: large center "Garamond";
    	
    	background-color: #222233;
    	color: #AACCFF;
    
    ]]
    )
    xpGraphOptions[v[1]]:echo(v[2])
  end
end
for k,v in pairs(graphoptions) do
    xpGraphOptions[v[1]]:setStyleSheet(
      [[
      font: large center "Garamond";
    	
    	background-color: #222233;
    	color: #AACCFF;
    
    ]]
    )
    xpGraphOptions[v[1]]:echo("&lt;center&gt;" .. v[2])
    xpGraphOptions[v[1]]:setClickCallback("changegraph",v[1])
end

function changegraph(time)

  displaytimespan=tonumber(time)
  updateDisplayTime()

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Chat Window</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end


local windowWidth, windowHeight = getMainWindowSize()
if chatFontSize == nil then chatFontSize = 8 end
if chatWidth == nil then chatWidth = 650 end
if chatWrap == nil then chatWrap = 80 end

OOCCon = OOCCon or Geyser.MiniConsole:new({
  name="OOC",
  x=BORDER_WIDTH, y=0,
  autoWrap = true,
  width="100%",
  height="50%",
  fgColor = "white",
  color = "red",

},menu.window)
OOCCon:setColor("black")
OOCCon:setFontSize(mysettings.oocchatsize)
enableScrollBar("OOC")
OOCCon:resetAutoWrap()



</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>DataCollection</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

dataBackCon = dataBackCon or Geyser.Label:new({
  name="dataBackCon",
  x="0%", y="80%",
  color="black",
  width="100%", height="20%",
},menu.container)

dataBackCon:setStyleSheet([[
  border-top: 1px solid white;
  background-color: rgba(0,0,0,100%);
]])

dataCon = dataCon or Geyser.MiniConsole:new({
  name="data",
  x="4%", y="5%",
  width="96%", height="95%",
    wrapAt = 100,
},dataBackCon)

dataCon:setFontSize(mysettings.datafontsize)
dataCon:setBufferSize (10000, 1000)
dataCon:fg("white")
dataCon:bg("black")
dataCon:setColor("black")
enableScrollBar("data")


dataConOverlay = dataConOverlay or Geyser.Label:new({
  name = "dataConOverlay",
  x = 0, y = 0,
  x="0%", y="80%",
  width="100%", height="20%",
},menu.container)
dataConOverlay:setStyleSheet([[
  background-color: rgba(0,0,0,25%);
]])

dataConOverlay:setClickCallback("dataCon_click",dataCon)
function dataCon_click(tab)
  dataBackCon:move("0%","10%")
  dataBackCon:resize("100%","90%")
  dataConOverlay:hide()
end


--createMiniConsole("tab1Center", "data", 1, 1, 500, 500)</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>XP Rate Functions</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

function updateXPbars(timespan,xptype)
  local barcount=16

  if timespan == nil then
    timespan = 5
  end
  
  if xptype == nil then
	xptype = 0
  end
  
  for index=1,barcount do
    xpRateBars[index]:setValue(1,100,0)
  end
  
  local firstindex = table.size(xpcollector)
  local lastindex = firstindex-(barcount*timespan)+1
  if lastindex &lt;= 0 then
    lastindex = 1
  end
  local index = 1
  
  local calcnum = 0
  local cnt=0
  
  local topnum =1
  for k=firstindex,lastindex,-1 do
    calcnum = calcnum + xpcollector[k].xp
    cnt = cnt + 1
    if cnt % timespan == 0 then
      if topnum &lt; calcnum then
        topnum = calcnum
      end
      cnt=0
      calcnum = 0
    end
  end
  if topnum &lt; calcnum then
     topnum = calcnum
  end
  cnt=0
  calcnum=0
  for k=firstindex,lastindex,-1 do
    local tmpnum = xpcollector[k].xp
    
--echo(index)    
    cnt = cnt + 1
    calcnum = calcnum + tmpnum
    
    if cnt % timespan == 0 then
      local displaynum = "&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;center&gt;" .. string.format("%2.1f",calcnum) .."&lt;/center&gt;"
      if calcnum == 0 then calcnum = 1 end
	  if xptype == 0 then
		xpRateBars[index]:setValue(calcnum,topnum,displaynum)
	  else
		xpRateBars[index]:setValue(calcnum/9900000,topnum/9900000,displaynum/990000)
	  end
      cnt=0
      calcnum = 0
      index=index+1
    end
    
  end
  if index &lt;= barcount then
  xpRateBars[index]:setValue(calcnum,topnum,calcnum)
  end
end

function updateKillbars(timespan)
  local barcount=16
  if timespan == nil then
    timespan = 5
  end
  
  for index=1,barcount do
    killRateBars[index]:setValue(1,100,0)
  end
  
  local firstindex = table.size(killcollector)
  local lastindex = firstindex-(barcount*timespan)+1
  if lastindex &lt;= 0 then
    lastindex = 1
  end
  local index = 1
  
  local calcnum = 0
  local cnt=0
  
  local topnum =1
  for k=firstindex,lastindex,-1 do
    calcnum = calcnum + killcollector[k].kills
    cnt = cnt + 1
    if cnt % timespan == 0 then
      if topnum &lt; calcnum then
        topnum = calcnum
      end
      cnt=0
      calcnum = 0
    end
  end
  if topnum &lt; calcnum then
     topnum = calcnum
  end
  cnt=0
  calcnum=0
  for k=firstindex,lastindex,-1 do
    local tmpnum = killcollector[k].kills
    --if tmpnum == 0 then tmpnum = 1 end
--echo(index)    
    cnt = cnt + 1
    calcnum = calcnum + tmpnum
    
    if cnt % timespan == 0 then
      local displaynum = calcnum
      if calcnum == 0 then calcnum = 1 end
      killRateBars[index]:setValue(calcnum,topnum,displaynum)
      cnt=0
      calcnum = 0
      index=index+1
    end
    
  end
  if index &lt;= barcount then
  killRateBars[index]:setValue(calcnum,topnum,calcnum)
  end
  
  

end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Bottom Container</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Party Lavel</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

--bottom_container

partyDisplay = partyDisplay or Geyser.Label:new({
  name = "partyLabel",
  x = "81%", y = "0",
  width = "9%", height = "100%",
}, bottom_container)

partyDisplay:setFontSize(10)
partyDisplay:setStyleSheet([[
	background-color: #222233;
	color: #AACCFF;
  font-family: Courier;
]])

partyDisplay2 = partyDisplay2 or Geyser.Label:new({
  name = "partyLabel2",
  x = "90%", y = "0",
  width = "9%", height = "100%",
}, bottom_container)

partyDisplay2:setFontSize(10)
partyDisplay2:setStyleSheet([[
	background-color: #222233;
	color: #AACCFF;
  font-family: Courier;
]])</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>User Info</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

--bottom_container

userDisplay = userDisplay or Geyser.Label:new({
  name = "userLabel",
  x = "1%", y = "0",
  width = "18%", height = "100%",
}, bottom_container)

userDisplay:setFontSize(10)
userDisplay:setStyleSheet([[
	background-color: #222233;
	color: #AACCFF;
  font-family: Courier;
]])

</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Popup Windows</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Combat Window</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

combatWin = combatWin or Geyser.UserWindow:new({
  name="combatWin",
  x="0%", y="0%",
  autowrap=true,
  fgColor = "white",
  color = "black",
  width="100%", height="100%",
  fontSize=mysettings.questfontsize,
  scrollBar = true,
})

--xpWinCon = Geyser.:new({
--  name="xpWinCon",
--  x="0%", y="0%",
--  autowrap=true,
--  fgColor = "white",
--  color = "black",
--  width="100%", height="100%",
--  fontSize=mysettings.questfontsize,
--  scrollBar = false,
--},xpWin)

--xpWin:resetAutoWrap()
combatWin:disableAutoDock() 
enableScrollBar("combatWin")
combatWin:hide()


--menu.setdoubleclick("Combat",function() combatWin:show() end)


</script>
							<eventHandlerList />
						</Script>
						<Script isActive="no" isFolder="no">
							<name>XP Window</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

xpWin = xpWin or Geyser.UserWindow:new({
  name="xpWin",
  x="0%", y="0%",
  autowrap=true,
  fgColor = "white",
  color = "black",
  width="100%", height="100%",
  fontSize=mysettings.questfontsize,
  scrollBar = false,
})

--xpWinCon = Geyser.Container:new({
--  name="xpWinCon",
--  x="0%", y="0%",
--  autowrap=true,
--  fgColor = "white",
--  color = "black",
--  width="100%", height="100%",
--  fontSize=mysettings.questfontsize,
--  scrollBar = false,
--},xpWin)

--xpWin:resetAutoWrap()
xpWin:disableAutoDock() 
enableScrollBar("xpWin")
xpWin:hide()
--menu.setdoubleclick("XP",function() xpWin:show() end)


</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Quest Window</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

questStatusWin = Geyser.UserWindow:new({
  name="queststatuswin",
  x="2%", y="2%",
  autowrap=true,
  fgColor = "white",
  color = "black",
  width="96%", height="96%",
  fontSize=mysettings.questfontsize,
  scrollBar = false,
})

--questStatusWinCon = Geyser.MiniConsole:new({
--  name="queststatuswincon",
--  x="2%", y="2%",
--  autowrap=true,
--  fgColor = "white",
--  color = "black",
--  width="96%", height="96%",
--  fontSize=mysettings.questfontsize,
--  scrollBar = true,
--},questStatusWin)

questStatusWin:resetAutoWrap()
questStatusWin:disableAutoDock() 
enableScrollBar("queststatuswin")

questStatusWin:hide()

menu.setdoubleclick("Quests",function() questStatusWin:show() end)




</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<Script isActive="yes" isFolder="no">
						<name>Fix Layering</name>
						<packageName></packageName>
						<script>mMenuVDrag:raise()
mMenuHDrag:raise()

if mysettings.UIType ~= "XUI" then
return
end

function resetWindows() 

  for k,v in pairs(menu.tabs) do
    menu[menu.tabs[k]]:show()
    menu[menu.tabs[k]]:hide()
  end
  
  menu[menu.current]:show()
  
  
end

resetWindows() </script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>UI Helpers</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>UI Helpers</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XUI" then return end

function updateDisplayTime()

  updateXPbars(displaytimespan)
  updateKillbars(displaytimespan)
  xprText:echo(calcAscendTime(xaos.Level,xaos.LevelPercent,displaytimespan))

end

function calcAscendTime(lvl,lvlpercent,timespan) 

  if timespan == nil then
    timespan = 5
  end

  lvl = lvl % 100
  lvl = lvl -1
	local curascdings = lvl*((2+(lvl*2))/2)
	local nextascdings = (lvl+1)*((2+((lvl+1)*2))/2)
	
	local curdings = curascdings + ((nextascdings-curascdings)*(lvlpercent/100))
	local leftdings = 9900-curdings
	leftdings = leftdings * 100 
	--debugecho(leftdings)
	local firstindex = table.size(xpcollector)
	local lastindex = firstindex-(16*timespan)+1
	if lastindex &lt;= 0 then
	lastindex = 1
	end
	if firstindex == lastindex then return "unknown" end
	local total = 0
  local cnter=0
	for k=firstindex,lastindex,-1 do
		total = total + xpcollector[k].xp
    cnter=cnter+1
	end
  debugecho("Counter: " .. (cnter))
	--Average
  debugecho("Devisor: " .. (firstindex - lastindex))
	total = total / (cnter)
  local avg = total
  debugecho("Average: " .. total)
	--Down to minute chunks
	total = total --/ 5
	debugecho("Min Avg: " .. total)
	total = leftdings/total
	--debugecho(total)
  
  totalstring = ""
  --if (total/1440) &gt; 0 then
  totalstring = totalstring .. math.floor(total/1440) .. " days, "
  total = total % 1440
  --end
  --if (total/60) &gt; 0 then
  totalstring = totalstring .. math.floor(total/60) .. " hours, "
  total = total % 60
  --end
  totalstring = totalstring .. string.format("%4.2f",total) .. " minutes."
  totalstring = totalstring .. " (Avg: " .. string.format("%4.2f",avg*timespan) .. ")"
  return totalstring
end

function calcAscendPercent(level, levelPercent)
  level = tonumber(level)%100
  levelPercent = tonumber(levelPercent)
  
  level = level - 1
  nextlevel = level+1
  
  local curasc = level*((2+(level*2))/2)/9900
  local nextasc = nextlevel*((2+(nextlevel*2))/2)/9900
  
  return 100*(curasc+((nextasc-curasc)*(levelPercent/100)))
  
  --return 100*(levelratio[(level%100)]+((levelratio[(level%100)+1]-levelratio[(level%100)])*(tonumber(levelPercent)/100)))
end

function updateXPbars(timespan,xptype)
  if timespan == nil then
    timespan = 5
  end
  
  if xptype == nil then
	xptype = 0
  end
  
  for index=1,16 do
    xpRateBars[index]:setValue(1,100,0)
  end
  
  local firstindex = table.size(xpcollector)
  local lastindex = firstindex-(16*timespan)+1
  if lastindex &lt;= 0 then
    lastindex = 1
  end
  local index = 1
  
  local calcnum = 0
  local cnt=0
  
  local topnum =1
  for k=firstindex,lastindex,-1 do
    calcnum = calcnum + xpcollector[k].xp
    cnt = cnt + 1
    if cnt % timespan == 0 then
      if topnum &lt; calcnum then
        topnum = calcnum
      end
      cnt=0
      calcnum = 0
    end
  end
  if topnum &lt; calcnum then
     topnum = calcnum
  end
  cnt=0
  calcnum=0
  for k=firstindex,lastindex,-1 do
    local tmpnum = xpcollector[k].xp
    
--echo(index)    
    cnt = cnt + 1
    calcnum = calcnum + tmpnum
    
    if cnt % timespan == 0 then
      local displaynum = calcnum
      if calcnum == 0 then calcnum = 1 end
	  if xptype == 0 then
		xpRateBars[index]:setValue(calcnum,topnum,displaynum)
	  else
		xpRateBars[index]:setValue(calcnum/9900000,topnum/9900000,displaynum/990000)
	  end
      cnt=0
      calcnum = 0
      index=index+1
    end
    
  end
  if index &lt;= 16 then
  xpRateBars[index]:setValue(calcnum,topnum,calcnum)
  end
  
  xprText:echo("Approx Time to Ascend: " ..calcAscendTime(xaos.Level,xaos.LevelPercent,displaytimespan))
end

function updateKillbars(timespan)

  if timespan == nil then
    timespan = 5
  end
  
  for index=1,16 do
    killRateBars[index]:setValue(1,100,0)
  end
  
  local firstindex = table.size(killcollector)
  local lastindex = firstindex-(16*timespan)+1
  if lastindex &lt;= 0 then
    lastindex = 1
  end
  local index = 1
  
  local calcnum = 0
  local cnt=0
  
  local topnum =1
  for k=firstindex,lastindex,-1 do
    calcnum = calcnum + killcollector[k].kills
    cnt = cnt + 1
    if cnt % timespan == 0 then
      if topnum &lt; calcnum then
        topnum = calcnum
      end
      cnt=0
      calcnum = 0
    end
  end
  if topnum &lt; calcnum then
     topnum = calcnum
  end
  cnt=0
  calcnum=0
  for k=firstindex,lastindex,-1 do
    local tmpnum = killcollector[k].kills
    --if tmpnum == 0 then tmpnum = 1 end
--echo(index)    
    cnt = cnt + 1
    calcnum = calcnum + tmpnum
    
    if cnt % timespan == 0 then
      local displaynum = calcnum
      if calcnum == 0 then calcnum = 1 end
      killRateBars[index]:setValue(calcnum,topnum,displaynum)
      cnt=0
      calcnum = 0
      index=index+1
    end
    
  end
  if index &lt;= 16 then
  killRateBars[index]:setValue(calcnum,topnum,calcnum)
  end
  
  

end


function updatestats() 
  statcount=0
  maxstatcount=5
  gagmode=true
  expandAlias("questeat",false)
  expandAlias("scoreeat",false)
  send("aff",false)
  send("tactics",false)
  send("hero empower",false)
end


</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>xaos-ui-0120</name>
					<packageName>xaos-ui-0120</packageName>
					<script></script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>xaos-ui-0120</name>
						<packageName>xaos-ui-0120</packageName>
						<script></script>
						<eventHandlerList />
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Class QOL</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>Mage Spell management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

db:create("magelist", {
  spells={
    name="",
    role="",
    permable="",
    notes="",
    _unique = { "name" },
    _violations = "REPLACE"
  }, 
  skills={
    name="",
    role="",
    passive="",
    notes="",
    _unique = { "name" },
     _violations = "REPLACE"
  }
})

magedb = db:get_database("magelist")

db:add(magedb.spells, 
		{name="acid blast", role="combat", permable="false"},
    {name="anchor gate",    role="utility", permable="false"},
    {name="animate golem",  role="utilty", permable="false"},
    {name="bind golem",     role="utilty", permable="false"},
    {name="blink",          role="utilty", permable="false"},
    {name="blindness",      role="debuff", permable="false"},
    {name="cancellation",   role="utility", permable="false"},
    {name="chain lightning", role="combat", permable="false"},
    {name="charm person",   role="utility", permable="false"},
    {name="cloud kill",     role="combat", permable="false"},
    {name="colour spray",   role="combat", permable="false"},
    {name="common cold",    role="debuff", permable="false"},
    {name="cone of cold",   role="combat_AOE", permable="false"},
    {name="confusion",      role="combat", permable="false"},
    {name="continual light", role="utility", permable="false"},
    {name="control weather", role="utility", permable="false"},
    {name="create food",    role="utility", permable="false"},
    {name="create rabbit",  role="utility", permable="false"},
    {name="create rose",    role="utility", permable="false"},
    {name="create spring",  role="utility", permable="false"},
    {name="cryogenesis",    role="utility", permable="false"},
    {name="dark sight",     role="buff_self", permable="true"},
    {name="detect invis",   role="buff_self", permable="true"},
    {name="detect magic",   role="buff_self", permable="true"},
    {name="endurance",      role="buff", permable="true"},
    {name="energy drain",   role="combat", permable="false"},
    {name="faerie fire",    role="debuff", permable="false"},
    {name="faerie fog",     role="utility", permable="false"},
    {name="farsight",       role="buff_self", permable="false"},
    {name="fear",           role="debuff", permable="false"},
    {name="fireball",       role="combat_AOE", permable="false"},
    {name="fireproof",      role="utility", permable="false"},
    {name="fly",            role="buff", permable="true"},
    {name="floating disc",  role="utility", permable="false"},
    {name="gate",           role="utility", permable="false"},
    {name="ghoulish touch", role="combat", permable="false"},
    {name="giant strength", role="buff", permable="true"},
    {name="globe of power", role="buff_self",  permable="false"},
    {name="globe of force",      role="buff_self",  permable="false"},
    {name="guardian",      role="utility",  permable="false"},
    {name="haste",      role="buff",  permable="true"},
    {name="ice sphere",      role="combat",  permable="false"},
    {name="infravision",      role="buff_self",  permable="true"},
    {name="invisibility",      role="utility",  permable="false"},
    {name="levitate",      role="utility",  permable="false"},
    {name="life to mana",      role="buff_self",  permable="true"},
    {name="lightning bolt",      role="combat",  permable="false"},
    {name="locate object",      role="utility",  permable="false"},
    {name="locate person",      role="utility",  permable="false"},
    {name="magic armor",      role="buff",  permable="true"},
    {name="magic shield",      role="buff",  permable="true"},
    {name="magic missile",      role="combat",  permable="false"},
    {name="mass fly",      role="utility",  permable="false"},
    {name="mass haste",      role="utility",  permable="false"},
    {name="mass invis",      role="utility",  permable="false"},
    {name="needle strike",      role="combat",  permable="false"},
    {name="permanency",      role="buff",  permable="true"},
    {name="phase",      role="buff",  permable="true"},
    {name="poison",      role="debuff",  permable="false"},
    {name="prismatic shell",      role="buff",  permable="false"},
    {name="random return",      role="utility",  permable="false"},
    {name="recharge",      role="utility",  permable="false"},
    {name="refresh",      role="utility",  permable="false"},
    {name="replenishment",      role="utility",  permable="false"},
    {name="resist paralysis",      role="buff",  permable="false"},
    {name="lendebuk cantrip",      role="buff",  permable="true"},
    {name="seal gate",      role="utility",  permable="false"},
    {name="searing orb",      role="combat",  permable="false"},
    {name="suppress magic",      role="utility",  permable="false"},
    {name="shocking grasp",      role="combat",  permable="false"},
    {name="sleep",      role="utility",  permable="false"},
    {name="slow",      role="debuff",  permable="false"},
    {name="soften defense",      role="debuff",  permable="false"},
    {name="sonic boom",      role="combat_AOE",  permable="false"},
    {name="starburst",      role="combat_AOE",  permable="false"},
    {name="starve spring",      role="utility",  permable="false"},
    {name="stone skin",      role="buff_self",  permable="true"},
    {name="teleport",      role="utility",  permable="false"},
    {name="thunderbolt",      role="combat",  permable="false"},
    {name="ventriloquate",      role="utility",  permable="false"},
    {name="water breathing",      role="buff",  permable="true"},
    {name="weaken",      role="debuff",  permable="false"},
    {name="web",      role="utility",  permable="false"},
    {name="calm",      role="utility",  permable="false"})
		
	    mage_buff = {
        "haste",
        "giant strength",
        "fly",
        "prismatic shell",
        "dark sight",
        "endurance",
        "farsight",
        "permanency",
        "detect invis",
        "detect magic",
        "globe of power",
        "life to mana",
        "magic armor",
        "phase",
        "resist paralysis",
        "stone skin",
        "water breathing",
        "detect magic",
        "globe of force",
        "infravision",
        "lendebuk cantrip"
    }
		
	    mage_utility = {
				"faerie fire",
        "anchor gate",
        "blink",
        "cancellation",
        "charm person",
        "confusion",
        "continual light",
        "control weather",
        "create food",
        "create rabbit",
        "create spring",
        "cryogenesis",
        "dark sight",
        "faerie fog",
        "fireproof",
        "floating disc",
        "gate",
        "invisibility",
        "levitate",
        "locate object",
        "locate person",
        "mass fly",
        "mass haste",
        "mass invis",
        "permanency",
        "replenishment",
        "seal gate",
        "suppress magic",
        "sleep",
        "starve spring",
        "teleport",
        "ventriloquate",
        "web",
        "calm",
    }
		
    mage_combat = {
        "acid blast",
        "lightning bolt",
        "magic missile",
        "chain lightning",
        "colour spray",
        "cone of cold",
        "fireball",
        "ice sphere",
        "searing orb",
        "shocking grasp",
        "thunderbolt",
        "starburst",
				"dispel magic",
				"sonic boom",
    }
		
		mage_skills = {
			"spellcraft",
			"golem craft",
			"kinetic mastery",
			"link",
			"brew",
		}
		</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Cleric Management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


cleric_skills = {
	"shield block",
	"link",
	"leadership",
	"staff",
	"whip",
	"envenom",
	"crossbow",
	"hand to hand",
	"spellcraft",
	"flail",
	"brew",
	"hunt",
	"scrolls",
	"tracking",
	"mace",
	"dual wield",
	"scribe",
	"unarmed block",
	"shepherd",
}

cleric_utility = {
	"anchor gate",
	"blink",
	"cancellation",
	"continual light",
	"create food",
	"create spring",
	"cure blight",
	"cure blindness",
	"cure cold",
	"cure deafness",
	"cure disease",
	"cure poison",
	"faerie fog",
	"fly",
	"gate",
	"levitate",
	"locate object",
	"locate person",
	"mass fly",
	"permanency",
	"refresh",
	"remove curse",
	"seal gate",
	"suppress magic",
}

cleric_healing = {
	"heal",
	"mass healing",
}

cleric_buffs = {
	"accelerate healing",
	"bless",
	"detect invis",
	"detect magic",
	"endurance",
	"farsight",
	"fly",
	"frenzy",
	"godspeed",
	"magic armor",
	"magic shield",
	"resist paralysis",
	"sanctuary",
	"stone skin",
}

cleric_combat = {
	"blindness",
	"ray of truth",
	"curse",
	"demonfire",
	"faerie fire",
	"flamestrike",
	"heretic",
	"lightning bolt",
	"plague",
	"poison",
	"silence",
	"soften defense",
	"turn undead",
	"weaken",
	"holy word",
}</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Mentalist Management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

mentalist_buffs = {
	"charisma",
	"confidence",
	"detect hidden",
	"halo of eyes",
	"iron will",
	"mindcore",
	"third eye",
	"ultrasight",
	"wizard eye",
	"xray eyes",
	"battle mind",
	"reveal future",
}

mentalist_combat = {
	"mass confusion",
	"divided will",
	"ego whip",
	"feeble mind",
	"misdirection",
	"wrack",
}

mentalist_utility = {
	"dominate",
	"wake",
	"esp",
	"sustained vision",
	"guardian",
	"seeking eye",
	"clairvoyance",
	"eject",
	"know direction",
}
mentalist_skills = {
	"arcane mastery",
}</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Warrior management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
warrior_skills = {
	"axe",
	"master axe",
	"cleaving",
	"blowgun",
	"dagger",
	"master dagger",
	"knife fighting",
	"extention",
	"master extention",
	"flail",
	"mace",
	"master mace",
	"cudgelry",
	"polearm",
	"staff",
	"master staff",
	"quarterstaff",
	"sword",
	"master sword",
	"blademaster",
	"blind fighting",
	"bash",
	"berserk",
	"deadly spin",
	"determination",
	"discipline",
	"dirt kicing",
	"disarm",
	"dual wield",
	"guarding",
	"hand to hand",
	"hunt",
	"lumber work",
	"master polearm",
	"lancing",
	"parry",
	"rescue",
	"shield block",
	"set spear",
	"sneak",
	"scrolls",
	"master flail",
	"thrashing",
	"trip",
	"unarmed block",
	"leadership",
	"quickdraw",
	"tracking",
	"taming",
}</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Thief management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


thief_skills = {
	"axe",
	"blowgun",
	"master axe",
	"dagger",
	"master dagger",
	"sword",
	"master sword",
	"flail",
	"master flail",
	"mace",
	"master mace",
	"acrobatics",
	"backstab",
	"bomb smithing",
	"brew",
	"critical strike",
	"cutpurse",
	"dirt kicking",
	"disarm",
	"dual wield",
	"envenom",
	"finesse",
	"hand to hand",
	"hunt",
	"parry",
	"prowl",
	"palming",
	"perception",
	"pick lock",
	"safe cracking",
	"sap",
	"smooth talk",
	"sneak",
	"steal",
	"scrolls",
	"trance",
	"trap detection",
	"trip",
	"unarmed block",
	"piercing",
	"hearing",
	"hide",
	"juggling",
	"link",
	"leadership",
	"quickdraw",
	"tracking",
	"vault wisdom",
	"taming",
	"lethality"
	
}</script>
								<eventHandlerList />
							</Script>
							<Script isActive="no" isFolder="no">
								<name>Geomancer management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


geomancer_skills = {
	"spell turning",
	"enigma",
	"shield bash",
	"spellcraft",
	"warcraft"
}

geomancer_combat = {
	"acid blast",
	"chain lightning",
	"cloud kill",
	"colour spray",
	"cone of cold",
	"fireball",
	"magic missile",
	"needle strike",
	"shocking grasp",
	"dispel magic",
	"lightning bolt",
	"soften defense",
	"sonic boom"
}

geomancer_buffs = {
	"perm",
	"barrage",
	"dark sight",
	"detect invis",
	"detect magic",
	"endurance",
	"farsight",
	"globe of force",
	"haste",
	"giant strength",
	"magic shield",
	"resist paralysis",
	"stone skin",
	"talons",
	"water breathing",
	"battle mind",
	"phase"
}

geomancer_utility = {
	"cancellation",
	"feather fall",
	"fireproof",
	"locate object",
	"locate person",
	"refresh",
	"recharge",
	"replenishment",
	"suppress magic",
}</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Functions</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>Script Communication</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
gagging = gagging or true


function xuicom(message)
	cecho("\n[ XUI ] &lt;light_blue&gt;"..message.."\n")

end

function warncom(message)
	cecho("\n[ Alert ] &lt;purple&gt;"..message.."\n")
	send("")
	
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="no" isFolder="no">
								<name>Class check function</name>
								<packageName></packageName>
								<script>

function classToggle (class, name)

	if class then
		xuicom("The settings for the class "..name.." will no longer apply to you.")
		return false
	else
		xuicom("The UI will now let script features specifically meant for "..name.." to work.")
		return true

	end
end



function variableToggle (var, name, off, on )
if var == nil then
	var = false
end
if var then
	xuicom(off)
	return false
else
	xuicom(on)
	return true

end
end



function variableCheck (variable, name)
	if not variable then
	xuicom("This feature works with ["..name.."] which is not currently activated.")
	end
end

function round(num, numDecimalPlaces)
  local mult = 10^(numDecimalPlaces or 0)
  return math.floor(num * mult + 0.5) / mult
end

</script>
								<eventHandlerList />
							</Script>
							<Script isActive="no" isFolder="no">
								<name>Chat filter function</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


function captureOOC(color1,channel,color2,name, color3, message)

	cecho("OOC", "["..color1..channel.."&lt;gray&gt; " .. getTime(true,"HH.mm") .. "] "..color2..name..": "..color3..message.."\n")
	if spacing then
		cecho("OOC","\n")
	end

end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="no" isFolder="no">
								<name>Lazy init</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


function initBool(var) 
return var or false
end

function initInt(var)
return var or 0
end

function initString(var)
return var or "none"
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Initialization</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>initialization</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function initialization()
xuicom("Initializing variables")
  cleric = false
  mentalist = false
  mage = false
  auto_hunt = auto_hunt or false
  gagging = gagging or true
  warcryHack = warcryHack or false
  --Super basic shit
  current_health = current_health or 0
  current_mana = current_mana or 0
  current_mvm = current_mvm or 0
  current_exp = current_exp or 0
  --QOL Automation
  auto_skin = auto_skin or false
  auto_butcher = auto_butcher or false
  wielded = wielded or "Please change me"
  if damageReport == nil then
    damageReport = 0
  end
  killCount = killCount or 0
  killBucket1 = killBucket1 or 0
  killBucket2 = killBucket2 or 0
  killBucket3 = killBucket3 or 0
  killBucket4 = killBucket4 or 0
  killBucket5 = killBucket5 or 0
  killTarget = killTarget or "helpful bob"
  determThresh = 0
  if inputAttack == nil then
    inputAttack = "bash"
  end
  -- Theoretical future silver toggle
  autodropSilver = true
  -- Enchanting
  enchantIteration = enchantIteration or 0
  -- Combat pledges
  renoviAvailable = renoviAvailable or true
  statusDisarm = statusDisarm or false
  -- Following variables
  if statusFollow == nil then
    statusFollow = false
  end
  following = following or "no one"
  topXPCollection = topXPCollection or 0
  xpCollection12 = xpCollection12 or 0
  xpCollection11 = xpCollection11 or 0
  xpCollection10 = xpCollection10 or 0
  xpCollection9 = xpCollection9 or 0
  xpCollection8 = xpCollection8 or 0
  xpCollection7 = xpCollection7 or 0
  xpCollection6 = xpCollection6 or 0
  xpCollection5 = xpCollection5 or 0
  xpCollection4 = xpCollection4 or 0
  xpCollection3 = xpCollection3 or 0
  xpCollection2 = xpCollection2 or 0
  xpCollection1 = xpCollection1 or 0
  -- Gold buckets
  recentGold = 0
  totalGold = 0
  goldBucket1 = 0
  goldBucket2 = 0
  -- Base scripting
  killTarget = killTarget or "Helpful Bob"
  autoMode = autoMode or "normal"
  autoRest = autoRest or false
  location = initString(location)
  hunting = initBool(hunting)
  -- Specialized scripting
  mentalistAutoDebuff = mentalistAutoDebuff or false
  thiefAutoTrance = thiefAutoTrance or false
  autoSpellSlip = autoSpellSlip or false
  centerHack = initBool(centerHack)
  resolveHack = initBool(resolveHack)
  autoRenovi = initBool(autoRenovi)
  renoviThreshold = initInt(renoviThreshold)
  determMgmt = initBool(deterMgmt)
  -- Comms
  if tellCoolDown == nil then
    tellCoolDown = false
  end
  chatWidth = chatWidth or 650
  -- Auto Healing
  autoHeal = initBool(autoHeal)
  autoHealThreshold = 0
  autoHealCommand = "cast heal"
  --Auto Drinking
  drinkMode = drinkMode or "none"
  determThresh = determThresh or 0
  determThresh2 = determThresh2 or 1
end</script>
								<eventHandlerList>
									<string>sysLoadEvent</string>
									<string>sysConnectionEvent</string>
									<string>sysInstall</string>
								</eventHandlerList>
							</Script>
							<Script isActive="no" isFolder="no">
								<name>Inits for hpDelta and hp Flow</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
if lastHP == nil then
  lastHP = 0
end
if hpDeltaMax == nil then
  hpDeltaMax = 0
end
if current_health == nil then
	current_health = 0
end
--Initialize and store past values
if hpDelta2 == nil then
  hpDelta2 = 0
end
if hpDelta3 == nil then
  hpDelta3 = 0
end
if hpDelta4 == nil then
  hpDelta4 = 0
end

if hpDeltaMax == nil then
	hpDeltaMax = 0
end
if hpFlow == nil then hpFlow = 0 end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="no" isFolder="no">
								<name>NewScript</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

--For your drinking stuff
autoDrink = autoDrink or false
drinkMode = drinkMode or "none"
customDrink = customDrink or "skin"</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Event handlers</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>reloadUI</name>
								<packageName></packageName>
								<script>if mysettings.UIType ~= "XUI" then return end

function reloadUI()
  --createChatConsole()
  OOCCon:resetAutoWrap()
  questStatusCon:resetAutoWrap()
  dataCon:resetAutoWrap()
  OOCCon:resetAutoWrap()
  
  local width,height = calcFontSize(getFontSize("main"))
  local windowWidth, windowHeight = getMainWindowSize()
  windowWidth = windowWidth - getBorderLeft() - getBorderRight()
  local wrap = math.floor(windowWidth/width)
  setWindowWrap("main", wrap)
  
  mainWindowWrap = wrap
end</script>
								<eventHandlerList>
									<string>sysWindowResizeEvent</string>
								</eventHandlerList>
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>welcome</name>
								<packageName></packageName>
								<script>if mysettings.UIType ~= "XUI" then return end

function welcome()
	xuicom("XUI successfully loaded. If you're new, please start with the &lt;white&gt;Getting Started&lt;light_blue&gt; button, if you're a returning user of XUI, please see the changelog under XUI Help, or the documentation in the drive.")
end</script>
								<eventHandlerList>
									<string>sysInstall</string>
									<string>sysConnectionEvent</string>
								</eventHandlerList>
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>onConnect</name>
								<packageName></packageName>
								<script>if mysettings.UIType ~= "XUI" then return end


</script>
								<eventHandlerList>
									<string>sysConnectionEvent</string>
								</eventHandlerList>
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Testing</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="no" isFolder="no">
								<name>testing</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function testing(expected, actual, message)
	if (expected == actual) then
		xuicom("Everything tested fine.")
	else 
		xuicom(message)
		end

end
 </script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
					</ScriptGroup>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="no" isFolder="yes">
				<name>XaosUI</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>UI</name>
					<packageName></packageName>
					<script>if mysettings.UIType ~= "XaosUI" then return end

UI = UI or {}</script>
					<eventHandlerList />
					<Script isActive="no" isFolder="no">
						<name>UI</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.Initialize()
  UI.ConfigLoad()
  UI.Session = getTime()
	UI.SessionEpoch = math.floor(getEpoch())
  UI.UpdateStyleSheets()
  tempTimer(1, [[UI.UILeft()]])
  tempTimer(1.25, [[UI.UIRight()]])
  tempTimer(1.75, [[UI.UIBottom()]])
  tempTimer(
    2.25,
    [[
		UI.UIComms()
		UI.CommsClick(UI.CurrentComms)
		UI.UIName()
		UI.UINameDisplay()
		UI.UIChar()
		UI.UIItems()
		UI.CharClick("Items")
		UI.CharClick("Character")
		UI.UIChar2()
		UI.Char2Click(UI.CurrentChar2)
		UI.UIChar3()
		UI.UIAffects()
		UI.Char3Click(UI.CurrentChar3)
		UI.UIExtras()
		UI.UIFeed()
		UI.ExtrasClick(UI.CurrentExtras)
	]]
  )
end

function UI.Initialized()
  if loadError == false then
    tempTimer(
      0.5,
      [[
			UI.booted = true
			cecho("\n")
			ncom("Everything is all loaded! For Information and Help enter \'UIHelp\'")
		]]
    )
    tempTimer(1, [[
			UI.booted = true
			send("\n")
		]])
  elseif loadError == true then
    tempTimer(
      1,
      [[
			cecho("\n")
			ncom("Boot process has failed, Please check your alerts and try again.")
		]]
    )
  end
end

function UI.UpdateStyleSheets()
  UI.StyleSheet =
    [[
		background-color: ]] ..
    UI.theme.Color1 ..
    [[;
    border-width: ]] ..
    UI.theme.BorderWidth ..
    [[;
    border-color: ]] ..
    UI.theme.Color5 ..
    [[;
    border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
    border-radius: ]] ..
    UI.theme.BorderRadius ..
    [[;
    margin: 1.5px;
	]]
  UI.TabStyleSheet =
    [[background-color: rgba(45,45,45,100%);
			border-top-left-radius: ]] ..
    UI.theme.BorderRadius ..
    [[px;
			border-top-right-radius: ]] ..
    UI.theme.BorderRadius ..
    [[px;
    	border-width: ]] ..
    UI.theme.BorderWidth ..
    [[px;
    	border-top-color: ]] ..
    UI.theme.Color5 ..
    [[;
			border-left-color: ]] ..
    UI.theme.Color5 ..
    [[;
			border-right-color:  ]] ..
    UI.theme.Color5 ..
    [[;
			border-bottom-color: Black;
    	border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
			margin-top: 3px;
			margin-right: 3px;
		]]
  UI.ActiveTabStyleSheet =
    [[background-color: Black;
			border-top-left-radius: ]] ..
    UI.theme.BorderRadius ..
    [[px;
			border-top-right-radius: ]] ..
    UI.theme.BorderRadius ..
    [[px;
    	border-width: ]] ..
    UI.theme.BorderWidth ..
    [[px;
    	border-top-color: ]] ..
    UI.theme.Color5 ..
    [[;
			border-left-color: ]] ..
    UI.theme.Color5 ..
    [[;
			border-right-color:  ]] ..
    UI.theme.Color5 ..
    [[;
			border-bottom-color: Black;
    	border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
    	padding: 0px;
    	margin: 0.5%;
	]]
  UI.WindowStyleSheet =
    [[background-color: Black;
    		border-width: ]] ..
    UI.theme.BorderWidth ..
    [[;
    		border-color: black;
    		border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
		]]
end

function UI.UpdateLabels()
  UI.UpdateStyleSheets()
  UI.Bottom:setStyleSheet(UI.StyleSheet)
  UI.RTop:setStyleSheet(UI.StyleSheet)
  UI.RBot:setStyleSheet(UI.StyleSheet)
  UI.LTop:setStyleSheet(UI.StyleSheet)
  UI.LMid:setStyleSheet(UI.StyleSheet)
  UI.LBot:setStyleSheet(UI.StyleSheet)
  UI.NamePlate:setStyleSheet(UI.StyleSheet)
  for k1, v1 in pairs(UI.CommsTabs) do
    UI[v1 .. "tab"]:setStyleSheet(UI.TabStyleSheet)
  end
  for k2, v2 in pairs(UI.ExtrasTabs) do
    UI[v2 .. "tab"]:setStyleSheet(UI.TabStyleSheet)
  end
  for k3, v3 in pairs(UI.CharTabs) do
    UI[v3 .. "tab"]:setStyleSheet(UI.TabStyleSheet)
  end
  for k4, v4 in pairs(UI.Char2Tabs) do
    UI[v4 .. "tab"]:setStyleSheet(UI.TabStyleSheet)
  end
  for k5, v5 in pairs(UI.Char3Tabs) do
    UI[v5 .. "tab"]:setStyleSheet(UI.TabStyleSheet)
  end
  UI.UINameDisplay()
  UI.CommsClick(UI.CurrentComms)
  UI.ExtrasClick(UI.CurrentExtras)
  UI.CharClick(UI.CurrentChar)
  UI.Char2Click(UI.CurrentChar2)
  UI.Char3Click(UI.CurrentChar3)
end

function UI.ConfigLoad()
  luaFiles =
    {
      [[boons]],
      [[boonsDetail]],
      [[casting]],
      [[character]],
      [[colors]],
      [[defenses]],
      [[equipment]],
      [[items]],
      [[name]],
      [[offense]],
      [[party]],
      [[qolWithReldi]],
      [[theme]],
      [[traits]],
      [[traitsDetail]],
    }
  for i = 1, #luaFiles do
    UI[luaFiles[i]] = UI[luaFiles[i]] or {}
    if io.exists(getMudletHomeDir() .. "/ui/" .. luaFiles[i] .. ".lua") then
      table.load(getMudletHomeDir() .. "/ui/" .. luaFiles[i] .. ".lua", UI[luaFiles[i]])
    else
      acom("Missing Component: " .. luaFiles[i] .. ".lua")
      loadError = true

      return
    end
  end
end

function UI.ConfigSave()
  --needs a rewrite
end

function UI.UpdateGuages()
  if UI.name.Name == "Tim" then
    return
  end
  UI.HPBar:setValue(tonumber(xPrompt.hp), 100, nil)
  UI.HPBar:setText("&lt;center&gt;&lt;strong&gt;" .. tostring(xPrompt.hp) .. "% HP")
  UI.ManaBar:setValue(tonumber(xPrompt.mana), 100, nil)
  UI.ManaBar:setText("&lt;center&gt;&lt;strong&gt;" .. tostring(xPrompt.mana) .. "% Mana")
  UI.MoveBar:setValue(tonumber(xPrompt.move), 100, nil)
  UI.MoveBar:setText("&lt;center&gt;&lt;strong&gt;" .. tostring(xPrompt.move) .. "% Move")
  if tonumber(xPrompt.exp) &gt;= 100 then
    xPrompt.exp = 100
  end
  UI.ExpBar:setValue(tonumber(xPrompt.exp), 100, nil)
  UI.ExpBar:setText("&lt;center&gt;&lt;strong&gt;" .. tostring(xPrompt.exp) .. "% Experience")
end

function UI.ThemeCustom(color1, color2, color3)

	UI.theme.Color1 = color1

	UI.theme.Color5 = color3

	UI.theme.Color6 = color2

	UI.UpdateLabels()

end

function UI.Theme(theme)

	if tostring(theme) == "xaos" then
		UI.theme.Color1 = "DimGrey"
		UI.theme.Color5 = "yellow"
		UI.theme.Color6 = "DarkGoldenrod"

	elseif tostring(theme) == "reldi" then
		UI.theme.Color1 = "DimGrey"
		UI.theme.Color5 = "red"
		UI.theme.Color6 = "firebrick"

	elseif tostring(theme) == "blue" then
		UI.theme.Color1 = "DimGrey"
		UI.theme.Color5 = "blue"
		UI.theme.Color6 = "MidnightBlue"

	elseif tostring(theme) == "green" then
		UI.theme.Color1 = "DimGrey"
		UI.theme.Color5 = "green"
		UI.theme.Color6 = "DarkGreen"

	elseif tostring(theme) == "purple" then
		UI.theme.Color1 = "DimGrey"
		UI.theme.Color5 = "DarkViolet"
		UI.theme.Color6 = "purple"

	elseif tostring(theme) == "turquoise" then
		UI.theme.Color1 = "DimGrey"
		UI.theme.Color5 = "turquoise"
		UI.theme.Color6 = "CadetBlue"

	elseif tostring(theme) == "grey" then
		UI.theme.Color1 = "DimGrey"
		UI.theme.Color5 = "LightGrey"
		UI.theme.Color6 = "DimGrey"

	elseif tostring(theme) == "noax" then
		UI.theme.Color1 = "firebrick"
		UI.theme.Color5 = "MidnightBlue"
		UI.theme.Color6 = "red"

	elseif tostring(theme) == "gobs" then
		UI.theme.Color1 = "white"
		UI.theme.Color5 = "orange"
		UI.theme.Color6 = "DarkOrange"

	elseif tostring(theme) == "solious" then
		UI.theme.Color1 = "red"
		UI.theme.Color5 = "red"
		UI.theme.Color6 = "white"

	elseif tostring(theme) == "white" then
		UI.theme.Color1 = "white"
		UI.theme.Color5 = "white"
		UI.theme.Color6 = "white"

	elseif tostring(theme) == "black" then
		UI.theme.Color1 = "black"
		UI.theme.Color5 = "black"
		UI.theme.Color6 = "DimGrey"

	elseif tostring(theme) == "random" then
		local color1 = math.random(1,#UI.colors)
		local color2 = math.random(1,#UI.colors)
		local color3 = math.random(1,#UI.colors)
		UI.theme.Color1 = UI.colors[color1]
		UI.theme.Color5 = UI.colors[color2]
		UI.theme.Color6 = UI.colors[color3]

	else
		ncom("Invalid theme selection.")

	end

	UI.UpdateLabels()

end

function ncom(message)
	cecho("\n&lt;BlueViolet&gt;[ Noax ]&lt;DarkSlateGrey&gt; - "..message)

end
function rcom(message)
	cecho("\n&lt;BlueViolet&gt;[ Reldi ]&lt;DarkSlateGrey&gt; - "..message)

end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.Bottom</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UIBottom()
  local guageMargins =
    [[
		margin-top: 3px;
		margin-right: 1.5px;
		margin-left: 3px;
		margin-bottom: 1.5px;
	]]
  UI.Bottom =
    Geyser.Label:new({name = "UI.Bottom", x = "25%", y = "90%", width = "50%", height = "10%"})
  UI.Bottom:setStyleSheet(UI.StyleSheet)
  UI.Footer =
    Geyser.HBox:new({name = "UI.Footer", x = 0, y = 0, width = "100%", height = "100%"}, UI.Bottom)
  UI.LeftColumn = Geyser.VBox:new({name = "UI.LeftColumn"}, UI.Footer)
  UI.RightColumn = Geyser.VBox:new({name = "UI.RightColumn"}, UI.Footer)
  UI.HPBar = Geyser.Gauge:new({name = "UI.HPBar"}, UI.LeftColumn)
  UI.HPBar.front:setStyleSheet(
    [[background-color: red;
    	border-width: ]] ..
    UI.theme.BorderWidth ..
    [[px;
    	border-color: black;
    	border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
    	border-radius: ]] ..
    UI.theme.BorderRadius ..
    [[;]] ..
    guageMargins
  )
  UI.HPBar.back:setStyleSheet(
    [[background-color: DarkRed;
	    border-width: ]] ..
    UI.theme.BorderWidth ..
    [[px;
	    border-color: black;
	    border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
	    border-radius: ]] ..
    UI.theme.BorderRadius ..
    [[;]] ..
    guageMargins
  )
  UI.ManaBar = Geyser.Gauge:new({name = "UI.ManaBar"}, UI.RightColumn)
  UI.ManaBar.front:setStyleSheet(
    [[background-color: Blue;
	    border-width: ]] ..
    UI.theme.BorderWidth ..
    [[px;
	    border-color: black;
	    border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
	    border-radius: ]] ..
    UI.theme.BorderRadius ..
    [[;]] ..
    guageMargins
  )
  UI.ManaBar.back:setStyleSheet(
    [[background-color: DarkBlue;
	    border-width: ]] ..
    UI.theme.BorderWidth ..
    [[px;
	    border-color: black;
	    border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
	    border-radius: ]] ..
    UI.theme.BorderRadius ..
    [[;]] ..
    guageMargins
  )
  UI.MoveBar = Geyser.Gauge:new({name = "UI.MoveBar"}, UI.LeftColumn)
  UI.MoveBar.front:setStyleSheet(
    [[background-color: Green;
	    border-width: ]] ..
    UI.theme.BorderWidth ..
    [[px;
	    border-color: black;
	    border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
	    border-radius: ]] ..
    UI.theme.BorderRadius ..
    [[;]] ..
    guageMargins
  )
  UI.MoveBar.back:setStyleSheet(
    [[background-color: DarkGreen;
	    border-width: ]] ..
    UI.theme.BorderWidth ..
    [[px;
	    border-color: black;
	    border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
	    border-radius: ]] ..
    UI.theme.BorderRadius ..
    [[;]] ..
    guageMargins
  )
  UI.ExpBar = Geyser.Gauge:new({name = "UI.ExpBar"}, UI.RightColumn)
  UI.ExpBar.front:setStyleSheet(
    [[background-color: Goldenrod;
	    border-width: ]] ..
    UI.theme.BorderWidth ..
    [[px;
	    border-color: black;
	    border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
	    border-radius: ]] ..
    UI.theme.BorderRadius ..
    [[;]] ..
    guageMargins
  )
  UI.ExpBar.back:setStyleSheet(
    [[background-color: DarkGoldenrod;
	    border-width: ]] ..
    UI.theme.BorderWidth ..
    [[px;
	    border-color: black;
	    border-style: ]] ..
    UI.theme.BorderStyle ..
    [[;
	    border-radius: ]] ..
    UI.theme.BorderRadius ..
    [[;]] ..
    guageMargins
  )
  UI.UpdateGuages()
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UIRight</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UIRight()
  UI.Right = Geyser.VBox:new({name = "UI.Right", x = "-25%", y = 0, width = "25%", height = "100%"})
  UI.RTop = Geyser.Label:new({name = "UI.RTop", v_stretch_factor = 2.0}, UI.Right)
  UI.RTop:setStyleSheet(UI.StyleSheet)
  UI.RBot = Geyser.Label:new({name = "UI.RBot"}, UI.Right)
  UI.RBot:setStyleSheet(UI.StyleSheet)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UIComms</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UIComms()
  UI.CommsTabs = {"Room", "Group", "OOC", "IC", "Tell", "Who"}
  UI.CurrentComms = UI.CurrentComms or UI.CommsTabs[1]
  UI.CommsHeader =
    Geyser.HBox:new(
      {name = "UI.CommsHeader", x = "2%", y = "2%", height = "5%", width = "97%"}, UI.RTop
    )
  UI.CommsFooter =
    Geyser.Container:new(
      {name = "UI.CommsFooter", x = "1%", y = "6.5%", height = "94%", width = "98%"}, UI.RTop
    )
  for k, v in pairs(UI.CommsTabs) do
    UI[v .. "tab"] = Geyser.Label:new({name = "UI." .. v .. "tab"}, UI.CommsHeader)
    UI[v .. "tab"]:setStyleSheet(UI.TabStyleSheet)
    UI[v .. "tab"]:echo("&lt;center&gt;&lt;strong&gt;" .. tostring(v))
    UI[v .. "tab"]:setClickCallback("UI.CommsClick", v)
    UI[v] =
      Geyser.MiniConsole:new(
        {
          x = "1%",
          y = 0,
          height = "98%",
          width = "98%",
          name = "UI." .. v,
          color = "black",
          scrollBar = false,
          autoWrap = true,
          font = UI.theme.Font,
          fontSize = tonumber(UI.theme.FontSize) - 2,
        },
        UI.CommsFooter
      )
    UI[v]:hide()
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.CommsClick</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.CommsClick(tab)
	UI[UI.CurrentComms]:hide()
	UI.CurrentComms = tab
	for k, v in pairs(UI.CommsTabs) do
		UI[v .. "tab"]:setStyleSheet(UI.TabStyleSheet)

	end

	if tostring(tab) == "Who" then
		gagmode = true
		send("who",false)
		tempTimer(1.5,[[gagmode = false]])

	end

	UI[UI.CurrentComms]:show()
	disableTimer(UI.CurrentComms.."Flash")
	UI[UI.CurrentComms.."tab"]:setStyleSheet(UI.ActiveTabStyleSheet)

end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UIExtras</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UIExtras()
  UI.ExtrasTabs = {"Feed", "Damage", "Party", "Questing", "QOL", "Scripter"}
  UI.CurrentExtras = UI.CurrentExtras or UI.ExtrasTabs[1]
  UI.ExtrasHeader =
    Geyser.HBox:new(
      {name = "UI.ExtrasHeader", x = "2%", y = "2%", height = "10%", width = "97%"}, UI.RBot
    )
  UI.ExtrasFooter =
    Geyser.Container:new(
      {name = "UI.ExtrasFooter", x = "1%", y = "11%", height = "87%", width = "98%"}, UI.RBot
    )
  for k, v in pairs(UI.ExtrasTabs) do
    UI[v .. "tab"] = Geyser.Label:new({name = "UI." .. v .. "tab"}, UI.ExtrasHeader)
    UI[v .. "tab"]:setStyleSheet(UI.TabStyleSheet)
    UI[v .. "tab"]:echo("&lt;center&gt;&lt;strong&gt;" .. tostring(v))
    UI[v .. "tab"]:setClickCallback("UI.ExtrasClick", v)
    UI[v] =
      Geyser.Label:new(
        {x = "1%", y = 0, height = "98%", width = "98%", name = "UI." .. v}, UI.ExtrasFooter
      )
    UI[v]:setStyleSheet(UI.WindowStyleSheet)
    UI[v]:hide()
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UIFeed</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UIFeed()
  UI.FeedList =
    Geyser.MiniConsole:new(
      {
        name = "UI.FeedList",
        x = "2.5%",
        y = "2.5%",
        width = "95%",
        height = "80%",
        color = "black",
        scrollBar = false,
        autoWrap = true,
        font = UI.theme.Font,
        fontSize = tonumber(UI.theme.FontSize) - 2,
      },
      UI.Feed
    )
  UI.FeedDetails =
    Geyser.Label:new(
      {name = "UI.FeedDetails", x = "2.5%", y = "85%", width = "95%", height = "10%"}, UI.Feed
    )
  UI.FeedDetails:setStyleSheet([[background-color: black;
	]])
	--  UI.FeedDetails:setStyleSheet([[background-color: rgba(0,0,0,0%);
	--]])
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.ExtrasClick</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.ExtrasClick(tab)
  UI[UI.CurrentExtras]:hide()
  UI.CurrentExtras = tab
  for i = 1, #UI.ExtrasTabs do
    UI[UI.ExtrasTabs[i] .. "tab"]:setStyleSheet(UI.TabStyleSheet)
  end
  if tostring(UI.CurrentExtras) == "Feed" then
    UI.UpdateLabelFeed()
    disableTimer("StupidDps")
  elseif tostring(UI.CurrentExtras) == "Damage" then
    UI.UpdateLabelDamage()
    enableTimer("StupidDps")
  elseif tostring(UI.CurrentExtras) == "Party" then
    UI.UpdateLabelParty()
    disableTimer("StupidDps")
  elseif tostring(UI.CurrentExtras) == "Questing" then
    --UI.UpdateLabelQuesting()
    disableTimer("StupidDps")
  elseif tostring(UI.CurrentExtras) == "QOL" then
    UI.UpdateLabelQOL()
    disableTimer("StupidDps")
  elseif tostring(UI.CurrentExtras) == "Scripter" then
    UI.UpdateLabelScripter()
    disableTimer("StupidDps")
  end
  UI[UI.CurrentExtras]:show()
  UI[UI.CurrentExtras .. "tab"]:setStyleSheet(UI.ActiveTabStyleSheet)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelScripter</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelScripter()
  if UI.name.Name == "Tim" then
    return
  end
  local ON = "OFF"
  if scripter.On == true then
    ON = "ON"
  else
    ON = "OFF"
  end
  local AREA = scripter.Area
  local TARGET = scripter.Target
  local KILL = "Off"
  if scripter.Kill == true then
    KILL = "On"
  else
    KILL = "Off"
  end
  local BUTCHER = "off"
  if scripter.Butcher == true then
    BUTCHER = "On"
  else
    BUTCHER = "Off"
  end
  local SKIN = "off"
  if scripter.Skin == true then
    SKIN = "On"
  else
    SKIN = "Off"
  end
  local SOUP = "Off"
  if scripter.Soup == true then
    SOUP = "On"
  else
    SOUP = "Off"
  end
	local PARTY = scripter.Party or "Off"
  local DISARM = scripter.Disarm or "none"
  local RATE = scripter.Rate or 0
  local THRESHOLD = scripter.Threshold or 0
  local WIMPY = scripter.Wimpy or 0
  local BUGOUT = scripter.Bugout or 0
  local EMERGENCYACTION = scripter.EmergencyAction or "none"
  local EMERGENCYTRIGGER = scripter.EmergencyTrigger or 0
  local AUTO = scripter.Auto or "none"
  local OFF = scripter.OffAuto or "none"
  local OFFRATE = scripter.OffRate or 0
  local PLEDGE = scripter.Pledge or "none"
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local ScripterCard = {}
  local StatusCard =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Scripting is &lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;" ..
      ON ..
      "&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Area&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      AREA ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Target&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      TARGET ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Kill&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      KILL ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Rate&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      RATE ..
      "&amp;nbsp;sec&lt;/td&gt;",
      "&lt;/tr&gt;",
			"&lt;tr&gt;",
			"&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
			"&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  local AutomationCard =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Automation&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Autoaction&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      AUTO ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Disarm&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      DISARM ..
      "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Offaction&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      OFF ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Rate&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      OFFRATE ..
      "&amp;nbsp;sec&amp;nbsp;&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Soup&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      SOUP ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Butcher&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      BUTCHER ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Skinning&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      SKIN ..
      "&amp;nbsp;&lt;/td&gt;",
			"&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Party&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      PARTY ..
      "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Wimpy&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      WIMPY ..
      "%&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Bugout&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      BUGOUT ..
      "%&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Emergency&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      EMERGENCYACTION ..
      "&amp;nbsp;(" ..
      EMERGENCYTRIGGER ..
      "%)&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  if tostring(PLEDGE) ~= "none" then
    table.insert(AutomationCard, "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;")
    table.insert(
      AutomationCard,
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;"
    )
    table.insert(AutomationCard, "&lt;tr&gt;")
    table.insert(
      AutomationCard,
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Pledge&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      PLEDGE ..
      "&lt;/td&gt;"
    )
    table.insert(AutomationCard, "&lt;/tr&gt;")
    table.insert(AutomationCard, "&lt;/tbody&gt;")
    table.insert(AutomationCard, "&lt;/table&gt;&lt;/center&gt;")
  end
  table.insert(ScripterCard, table.concat(StatusCard, ""))
  table.insert(ScripterCard, table.concat(AutomationCard, ""))
  echo("UI.Scripter", table.concat(ScripterCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelQOL</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelQOL()
  if UI.name.Name == "Tim" then
    return
  end
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize

  local resolve
  if qolWithReldi.Resolving then
    resolve = "on"
  else
    resolve = "off"
  end

  local trance
  if  qolWithReldi.Trancing then
    trance ="on"
  else
    trance ="off"
  end

  local berserk
  if qolWithReldi.Berserking then
    berserk = "on"
  else
    berserk =  "off"
  end

  local center
  if qolWithReldi.Centering then
    center = "on"
  else
    center = "off"
  end

  local warcrying
  if qolWithReldi.Warcrying then
    warcrying = "on"
  else
    warcrying = "off"
  end

  local warcry = qolWithReldi.Warcry or "none"
  local guard = qolWithReldi.partyguard or "off"
  local rescue = qolWithReldi.partyrescue or "off"
  local heal = qolWithReldi.partyheal or "off"
  local healword = qolWithReldi.healword or "off"


  local QOLCard = {}
  local QOLCardCharacterActions =
     {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Character Auto Actions",
      "&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Resolving&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      tostring(resolve) ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Trancing&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      tostring(trance) ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Berserking&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      tostring(berserk) ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Centering&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      tostring(center) ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;/tr&gt;",
       "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Warcrying&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      tostring(warcrying) ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Warcry&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      tostring(warcry) ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;/tr&gt;",
			"&lt;tr&gt;",
			"&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
			"&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
      local QOLCardPartyActions =
     {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Party Auto Actions",
      "&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Guarding&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      guard ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Rescue&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      rescue ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Heal&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      heal ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Heal Word&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      healword ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;/tr&gt;",
			"&lt;tr&gt;",
			"&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
			"&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };


  table.insert(QOLCard, table.concat(QOLCardCharacterActions, ""))
  table.insert(QOLCard, table.concat(QOLCardPartyActions, ""))
  echo("UI.QOL", table.concat(QOLCard, ""))
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelParty</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelParty()
  if UI.name.Name == "Tim" then
    return
  end

  local MinionCard={}
  local leader = UI.party.Leader
  local numMembers = #UI.party.Members
  local Members = UI.party.Members or {}
  local Minions = UI.party.Minions
  local MaxMinions = UI.party.MaxMinions

  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local PartyCard = {}
  local PartyCardHead =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      3 ..
      "px; font-weight: bold;\"&gt;".. leader .. " Party&lt;/span&gt;&lt;/center&gt;",
      };
  table.insert(PartyCard, table.concat(PartyCardHead, ""))

  if Minions &gt; 0 then
     local MinionCard =
        {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      3 ..
      "px; font-weight: bold;\"&gt;"..
      Minions ..
      "&lt;/span&gt;",
      "&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      3 ..
      "px; font-weight: bold;\"&gt;",
      " out of "..
      "&lt;/span&gt;",
      "&lt;span style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      3 ..
      "px; font-weight: bold;\"&gt;"..
      MaxMinions ..
      "&lt;/span&gt;",
      "&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      3 ..
      "px; font-weight: bold;\"&gt;",
      " total minions&lt;/span&gt;&lt;/center&gt;",
    };
    table.insert(PartyCard, table.concat(MinionCard, ""))
  end

  local PartyCardMembers =
    {
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      };
      table.insert(PartyCard, table.concat(PartyCardMembers, ""))

      for i = 1, numMembers do
         table.insert(PartyCard, "&lt;tr&gt;")
         table.insert(
          PartyCard,
           "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
           C2 ..
           ";\"&gt;" ..
           tostring(i) ..
           "&lt;span style=\"color: " ..
           C2 ..
           ";\"&gt;:&lt;/td&gt;"
          )
          table.insert(PartyCard, "&lt;td&gt;" .. tostring(Members[i]) .. "&lt;/td&gt;")
          table.insert(PartyCard, "&lt;/tr&gt;")
      end
  local PartyEndCard =
    {
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  table.insert(PartyCard, table.concat(PartyEndCard, ""))

  echo("UI.Party", table.concat(PartyCard, ""))
  enableTimer("StupidDps")
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelDamage</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelDamage()
  if UI.name.Name == "Tim" then
    return
  end
    local rounddamageDealt = 0
    local roundstrikes = 0
    local rounddps = 0
    local rounddamageTaken = 0
    local roundhits = 0
    local rounddph = 0

    local minutedamageDealt = 0
    local minutestrikes = 0
    local minutedps = 0
    local minutedamageTaken = 0
    local minutehits = 0
    local minutedph = 0
    local minutexp = 0
    local minutedings = 0

    local tendamageDealt = 0
    local tenstrikes = 0
    local tendps = 0
    local tendamageTaken = 0
    local tenhits = 0
    local tendph = 0
    local tenexp = 0
    local tendings = 0

    local sixtydamageDealt = 0
    local sixtystrikes = 0
    local sixtydps = 0
    local sixtydamageTaken = 0
    local sixtyhits = 0
    local sixtydph = 0
    local sixtyexp = 0
    local sixtydings = 0

    local C1 = UI.theme.Color2
    local C2 = UI.theme.Color6
    local FONT = UI.theme.Font
    local SIZE = UI.theme.FontSize

    if not isTableEmpty(dpsPool) then
      rounddamageDealt, roundstrikes, rounddps = UI.DPSCalc(3)
      minutedamageDealt, minutestrikes, minutedps = UI.DPSCalc(60)
      tendamageDealt, tenstrikes, tendps = UI.DPSCalc(600)
      sixtydamageDealt, sixtystrikes, sixtydps = UI.DPSCalc(3600)
    end

    if not isTableEmpty(damagePool) then
      rounddamageTaken, roundhits, rounddph = UI.DamageCalc(3)
      minutedamageTaken, minutehits, minutedph = UI.DamageCalc(60)
      tendamageTaken, tenhits, tendph = UI.DamageCalc(600)
      sixtydamageTaken, sixtyhits, sixtydph = UI.DamageCalc(3600)
    end

    if not isTableEmpty(expPool) then
      minuteexp = expPerTerm(60)
      minutedings = math.floor(tonumber(minuteexp) / 100000)
  		if not minuteexp then
  			minuteexp = 0
  			minutedings = 0
  		end
      tenexp = expPerTerm(600)
      tendings = math.floor(tonumber(tenexp) / 100000)
  		if not tenexp then
  			tenexp = 0
  			tendings = 0
  		end
      sixtyexp = expPerTerm(3600)
      sixtydings = math.floor(tonumber(sixtyexp) / 100000)
  		if not sixtyexp then
  			sixtyexp = 0
  			sixtydings = 0
  		end
    end

    local DPSCard = {}
    local DPSCard = {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Damage Output&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Last Round&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. rounddamageDealt .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Strikes&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. roundstrikes .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Average&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. rounddps .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;60 Seconds&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. minutedamageDealt .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Strikes&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. minutestrikes .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Average&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. minutedps .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;10 Minutes&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. tendamageDealt .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Strikes&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. tenstrikes .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Average&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. tendps .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;1 Hour&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. sixtydamageDealt .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Strikes&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. sixtystrikes .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Average&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. sixtydps .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",

      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Damage Taken&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Last Round&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. rounddamageTaken .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Hits&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. roundhits .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Average&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. rounddph .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;60 Seconds&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. minutedamageTaken .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Hits&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. minutehits .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Average&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. minutedph .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;10 Minutes&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. tendamageTaken .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Hits&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. tenhits .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Average&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. tendph .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;1 Hour&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. sixtydamageTaken .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Hits&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. sixtyhits .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Average&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. sixtydph .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",

      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Experience Gained&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;60 Seconds&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. minuteexp .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Dings&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. minutedings .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;10 Minutes&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. tenexp .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Dings&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. tendings .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;1 Hour&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. sixtyexp .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Dings&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. sixtydings .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
      };
    echo("UI.Damage", table.concat(DPSCard, ""))
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelFeed</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelFeed()
  if UI.name.Name == "Tim" then
    return
  end
  local SESSION = UI.Session
  local CURRENT = getTime()
  local DAYS = tonumber(CURRENT.day) - tonumber(SESSION.day)
  local HOURS = tonumber(CURRENT.hour) - tonumber(SESSION.hour)
  if tonumber(HOURS) &lt; 0 then
    DAYS = tonumber(DAYS) - 1
    HOURS = tonumber(HOURS) + 24
  end
  local MINUTES = tonumber(CURRENT.min) - tonumber(SESSION.min)
  if tonumber(MINUTES) &lt; 0 then
    HOURS = tonumber(HOURS) - 1
    MINUTES = tonumber(MINUTES) + 60
  end
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local FeedCard =
    {
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Session Start&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      SESSION.month ..
      "\\" ..
      SESSION.day ..
      "\\" ..
      SESSION.year ..
      "&amp;nbsp;" ..
      SESSION.hour ..
      ":" ..
      SESSION.min ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Elapsed time&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      DAYS ..
      "d&amp;nbsp;" ..
      HOURS ..
      "h&amp;nbsp;" ..
      MINUTES ..
      "m&amp;nbsp;&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  echo("UI.FeedDetails", table.concat(FeedCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UILeft</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UILeft()
  UI.Left = Geyser.VBox:new({name = "UI.Left", x = 0, y = 0, width = "25%", height = "100%"})
  UI.NamePlate = Geyser.Label:new({name = "UI.NamePlate", v_stretch_factor = 0.5}, UI.Left)
  UI.NamePlate:setStyleSheet(UI.StyleSheet)
  UI.LTop = Geyser.Label:new({name = "UI.LTop", v_stretch_factor = 2.0}, UI.Left)
  UI.LTop:setStyleSheet(UI.StyleSheet)
  UI.LMid = Geyser.Label:new({name = "UI.LMid", v_stretch_factor = 2.0}, UI.Left)
  UI.LMid:setStyleSheet(UI.StyleSheet)
  UI.LBot = Geyser.Label:new({name = "UI.LBot", v_stretch_factor = 2.0}, UI.Left)
  UI.LBot:setStyleSheet(UI.StyleSheet)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UIName</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UIName()
  UI.Name =
    Geyser.Label:new(
      {name = "UI.Name", x = "2.25%", y = "11%", height = "80%", width = "96%"}, UI.NamePlate
    )
  UI.Name:setStyleSheet(UI.WindowStyleSheet)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UINameDisplay</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UINameDisplay()
  if UI.name.Name == "Tim" then
    return
  end
  local NAME = UI.name.Name
  local CLASS = UI.name.Class
  local RACE = UI.name.Race
  local LEVEL = UI.name.Level
  local PERCENT = UI.name.PercToLevel
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local NameCard =
    {
      "&lt;center&gt;&lt;table width=\"95%\"&gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      5 ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&amp;nbsp;&amp;nbsp;" .. NAME .. "&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td&gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;&amp;nbsp;|&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;" .. CLASS .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;[&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;&amp;nbsp;&amp;nbsp;" ..
      RACE ..
      "&amp;nbsp;&amp;nbsp;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;]&lt;/td&gt;",
      "&lt;td&gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;&amp;nbsp;|&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Level&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&amp;nbsp;" ..
      LEVEL ..
      "&amp;nbsp;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;(&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      PERCENT ..
      "%&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;)&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  echo("UI.Name", table.concat(NameCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UIChar</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UIChar()
  UI.CharTabs = {"Character", "Equipment", "Items"}
  UI.CurrentChar = UI.CurrentChar or UI.CharTabs[1]
  UI.CharHeader =
    Geyser.HBox:new(
      {name = "UI.CharHeader", x = "2%", y = "2%", height = "10%", width = "97%"}, UI.LTop
    )
  UI.CharFooter =
    Geyser.Container:new(
      {name = "UI.CharFooter", x = "1%", y = "11%", height = "87%", width = "98%"}, UI.LTop
    )
  for k, v in pairs(UI.CharTabs) do
    UI[v .. "tab"] = Geyser.Label:new({name = "UI." .. v .. "tab"}, UI.CharHeader)
    UI[v .. "tab"]:setStyleSheet(UI.TabStyleSheet)
    UI[v .. "tab"]:echo("&lt;center&gt;&lt;strong&gt;" .. tostring(v))
    UI[v .. "tab"]:setClickCallback("UI.CharClick", v)
    UI[v] =
      Geyser.Label:new(
        {x = "1%", y = 0, height = "98%", width = "98%", name = "UI." .. v}, UI.CharFooter
      )
    UI[v]:setStyleSheet(UI.WindowStyleSheet)
    UI[v]:hide()
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.CharClick</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.CharClick(tab)
  UI[UI.CurrentChar]:hide()
  UI.CurrentChar = tab
  for i = 1, #UI.CharTabs do
    UI[UI.CharTabs[i] .. "tab"]:setStyleSheet(UI.TabStyleSheet)
  end
  if tostring(UI.CurrentChar) == "Character" then
    UI.UpdateLabelCharacter()
  elseif tostring(UI.CurrentChar) == "Equipment" then
    UI.UpdateLabelEquipment()
  elseif tostring(UI.CurrentChar) == "Items" then
    UI.UpdateLabelItems()
  end
  UI[UI.CurrentChar]:show()
  UI[UI.CurrentChar .. "tab"]:setStyleSheet(UI.ActiveTabStyleSheet)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelCharacter</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelCharacter()
  if UI.name.Name == "Tim" then
    return
  end
  local STR = UI.character.Str
  local INT = UI.character.Int
  local WIS = UI.character.Wis
  local DEX = UI.character.Dex
  local CON = UI.character.Con
  local STRMAX = UI.character.StrMax
  local INTMAX = UI.character.IntMax
  local WISMAX = UI.character.WisMax
  local DEXMAX = UI.character.DexMax
  local CONMAX = UI.character.ConMax
  local AGE = UI.character.Age
  local SEX = UI.character.Sex
  local WEIGHT = UI.character.Weight
  local HUNGER = UI.character.Hunger
  local THIRST = UI.character.Thirst
  local HUNGERMAX = UI.character.HungerMax
  local THIRSTMAX = UI.character.ThirstMax
  local HEROPOINTS = UI.character.HeroPoints
  local TRAINS = UI.character.Trains
  local RELIGION = UI.character.Religion
  local CASTE = UI.character.Caste
  local FAVOR = UI.character.Favor
  local AFFLICTION = UI.character.Affliction
  local AFFLICTIONTIER = UI.character.AfflictionTier
  local AFFLICTIONTIME = UI.character.AfflictionTime
  local AFFLICTIONTIMEVAR = UI.character.AfflictionTimeVar
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local CharacterCard =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      3 ..
      "px; font-weight: bold;\"&gt;Stats&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Str&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      STRMAX ..
      "&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;\/&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      STR ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Int&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      INTMAX ..
      "&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;\/&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      INT ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Wis&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      WISMAX ..
      "&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;\/&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      WIS ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Dex&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      DEXMAX ..
      "&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;\/&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      DEX ..
      "&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Con&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      CONMAX ..
      "&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;\/&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      CON ..
      "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Characteristics&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Age&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      AGE ..
      "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Sex&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      SEX ..
      "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Weight&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      WEIGHT ..
      "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Attrubutes&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Hunger&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      HUNGERMAX ..
      "&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;\/&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      HUNGER ..
      "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Thirst&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      THIRSTMAX ..
      "&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;\/&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      THIRST ..
      "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Hero Points&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      HEROPOINTS ..
      "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Trains&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      TRAINS ..
      "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Faith&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Religion&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      RELIGION ..
      "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Caste&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      CASTE ..
      "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"center\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Favor&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:" ..
      FAVOR ..
      "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  if tostring(AFFLICTION) ~= "none" then
    table.insert(
      CharacterCard,
      14,
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;Affliction&amp;nbsp;&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      AFFLICTION ..
      "&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;,&amp;nbsp;&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      AFFLICTIONTIER ..
      "&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;&amp;nbsp;for&amp;nbsp;&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      AFFLICTIONTIME ..
      "&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;&amp;nbsp;" .. AFFLICTIONTIMEVAR .. "&lt;/center&gt;&lt;/span&gt;"
    )
  end
  echo("UI.Character", table.concat(CharacterCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelEquipment</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelEquipment()
  if UI.name.Name == "Tim" then
    return
  end
  local EquipmentCard = {}
  local EquipmentCardTableStart =
    {
      "&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      UI.theme.Color2 ..
      "; Font-family: " ..
      UI.theme.Font ..
      "; font-size: " ..
      UI.theme.FontSize ..
      "px; font-weight: bold; padding:0%\"&gt;",
    };
  local EquipmentCardTableStop = {"&lt;/tbody&gt;", "&lt;/table&gt;"};
  table.insert(EquipmentCard, table.concat(EquipmentCardTableStart, ""))
  for i = 1, #UI.equipment do
    if tonumber(i) == 1 then
      --right finger
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;finger&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;finger&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 2 then
      --left finger
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;finger&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;finger&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 3 then
      --neck 1
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;neck&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;neck&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 4 then
      --neck 2
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;neck&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;neck&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 5 then
      --torso
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;torso&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;torso&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 6 then
      --head
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;head&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;head&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 7 then
      --legs
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;legs&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;legs&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 8 then
      --feet
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;feet&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;feet&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 9 then
      --hands
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;hands&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;hands&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 10 then
      --body
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;body&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;body&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 11 then
      --waist
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;waist&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;waist&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 12 then
      --left wrist
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;wrist&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;wrist&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 13 then
      --right wrist
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;wrist&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;wrist&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 14 then
      --right hand (How will I handle dual wields??)
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;right hand&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;right hand&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 15 then
      --left hand
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;left hand&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;left hand&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 16 then
      --tail weild
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;tail wield&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;tail wield&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 17 then
      --float
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;floating&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;floating&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 18 then
      --tail
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;tail&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;tail&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 19 then
      --lower left hand
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"lower left hand&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;lower left hand&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 20 then
      --lower right hand
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;lower right hand&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;lower right hand&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 21 then
      --float 2
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;floating&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;floating&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 22 then
      --float 3
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;floating&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;floating&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    elseif tonumber(i) == 23 then
      --float arti(4)
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;floating&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;floating&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
		elseif tonumber(i) == 24 then
      --install 1
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;installed&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;installed&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
		elseif tonumber(i) == 25 then
      --install 2
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;installed&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;installed&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
		elseif tonumber(i) == 26 then
      --install 3
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;installed&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;installed&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
		elseif tonumber(i) == 27 then
      --install 4
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;installed&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;installed&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
		elseif tonumber(i) == 28 then
      --install 5
      if tostring(UI.equipment[i]) == "Nothing" then
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;installed&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt; nothing &lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      elseif tostring(UI.equipment[i]) == "None" then
        --echo("You lack this equipemnt slot")
      else
        table.insert(EquipmentCard, "&lt;tr&gt;")
        table.insert(
          EquipmentCard,
          "&lt;td \"width: 15%;\" align=\"right\"&gt;&lt;span style=\"color: " ..
          UI.theme.Color6 ..
          ";\"&gt;installed&lt;span style=\"color: " ..
          UI.theme.Color2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(EquipmentCard, "&lt;td \"width: 15%;\" &gt;" .. tostring(UI.equipment[i]) .. "&lt;/td&gt;")
        table.insert(EquipmentCard, "&lt;/tr&gt;")
      end
    end
  end
  table.insert(EquipmentCard, table.concat(EquipmentCardTableStop, ""))
  echo("UI.Equipment", table.concat(EquipmentCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelItems</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelItems()
  if UI.name.Name == "Tim" then
    return
  end
  local ITEMS = UI.items.Items
  local ITEMSMAX = UI.items.ItemsMax
  local EQWEIGHT = UI.items.eqWeight
  local EQWEIGHTMAX = UI.items.eqWeightMax
  local GOLD = UI.items.Gold
  local SILVER = UI.items.Silver
  local FRAGMENTS = UI.items.Frags
  local SOULS = UI.items.Souls
  local ARTIFACTS = UI.items.Artifacts
  local ARTIFACTSMAX = UI.items.ArtifactsMax
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local ItemsCard =
    {
      "&lt;table style=\"width: 95%;\" align=\"center\"&gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td \"width: 5%;\" &gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Items&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;" .. ITEMS .. "&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;\/&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;" .. ITEMSMAX .. "&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Eq Weight&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;" .. EQWEIGHT .. "&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;\/&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;" .. EQWEIGHTMAX .. "&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Artifacts&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;" .. ARTIFACTS .. "&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;\/&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;" .. ARTIFACTSMAX .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;",
      "&lt;table style=\"width: 95%;\" align=\"center\"&gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td \"width: 5%;\" &gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Gold&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;" .. GOLD .. "&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Silver&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;" .. SILVER .. "&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Fragments&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;" .. FRAGMENTS .. "&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Souls&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td \"width: 5%;\" &gt;" .. SOULS .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;",
    };
  echo("UI.ItemsDetails", table.concat(ItemsCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UIItems</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UIItems()
  UI.ItemsList =
    Geyser.MiniConsole:new(
      {
        name = "UI.ItemsList",
        x = "2.5%",
        y = "2.5%",
        width = "95%",
        height = "70%",
        color = "black",
        scrollBar = false,
        autoWrap = true,
        font = UI.theme.Font,
        fontSize = tonumber(UI.theme.FontSize) - 2,
      },
      UI.Items
    )
  UI.ItemsDetails =
    Geyser.Label:new(
      {name = "UI.ItemsDetails", x = "2.5%", y = "75%", width = "95%", height = "20%"}, UI.Items
    )
  UI.ItemsDetails:setStyleSheet(UI.WindowStyleSheet)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UIChar2</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UIChar2()
  UI.Char2Tabs = {"Defense", "Offense", "Casting"}
  UI.CurrentChar2 = UI.CurrentChar2 or UI.Char2Tabs[1]
  UI.Char2Header =
    Geyser.HBox:new(
      {name = "UI.Char2Header", x = "2%", y = "2%", height = "10%", width = "97%"}, UI.LMid
    )
  UI.Char2Footer =
    Geyser.Container:new(
      {name = "UI.Char2Footer", x = "1%", y = "11%", height = "87%", width = "98%"}, UI.LMid
    )
  for k, v in pairs(UI.Char2Tabs) do
    UI[v .. "tab"] = Geyser.Label:new({name = "UI." .. v .. "tab"}, UI.Char2Header)
    UI[v .. "tab"]:setStyleSheet(UI.TabStyleSheet)
    UI[v .. "tab"]:echo("&lt;center&gt;&lt;strong&gt;" .. tostring(v))
    UI[v .. "tab"]:setClickCallback("UI.Char2Click", v)
    UI[v] =
      Geyser.Label:new(
        {x = "1%", y = 0, height = "98%", width = "98%", name = "UI." .. v}, UI.Char2Footer
      )
    UI[v]:setStyleSheet(UI.WindowStyleSheet)
    UI[v]:hide()
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.Char2Click</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.Char2Click(tab)
  UI[UI.CurrentChar2]:hide()
  UI.CurrentChar2 = tab
  for i = 1, #UI.Char2Tabs do
    UI[UI.Char2Tabs[i] .. "tab"]:setStyleSheet(UI.TabStyleSheet)
  end
  if tostring(UI.CurrentChar2) == "Offense" then
    UI.UpdateLabelOffense()
  elseif tostring(UI.CurrentChar2) == "Defense" then
    UI.UpdateLabelDefense()
  elseif tostring(UI.CurrentChar2) == "Casting" then
    UI.UpdateLabelCasting()
  end
  UI[UI.CurrentChar2]:show()
  UI[UI.CurrentChar2 .. "tab"]:setStyleSheet(UI.ActiveTabStyleSheet)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelDefense</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelDefense()
  if UI.name.Name == "Tim" then
    return
  end
  local ARMORCLASS = tostring(UI.defenses.ArmorClass)
  local ARMORPERCENT = tostring(UI.defenses.ArmorPerc)
  local WARDING = tostring(UI.defenses.Warding)
  local WARDINGPERCENT = tostring(UI.defenses.WardingPerc)
  local SAVES = tostring(UI.defenses.Saves)
  local SLASHRES = tostring(UI.defenses.SlashRes)
  local BASHRES = tostring(UI.defenses.BashRes)
  local PIERCERES = tostring(UI.defenses.PierceRes)
  local FIRERES = tostring(UI.defenses.FireRes)
  local COLDRES = tostring(UI.defenses.ColdRes)
  local MENTALRES = tostring(UI.defenses.MentalRes)
  local MAGICRES = tostring(UI.defenses.MagicRes)
  local LIGHTRES = tostring(UI.defenses.LightRes)
  local NEGATIVERES = tostring(UI.defenses.NegativeRes)
  local HOLYRES = tostring(UI.defenses.HolyRes)
  local UNHOLYRES = tostring(UI.defenses.UnholyRes)
  local LIGHTNINGRES = tostring(UI.defenses.LightningRes)
  local SOUNDRES = tostring(UI.defenses.SoundRes)
  local ACIDRES = tostring(UI.defenses.AcidRes)
  local POISONRES = tostring(UI.defenses.PoisonRes)
  local DISEASERES = tostring(UI.defenses.DiseaseRes)
  local DODGE = tostring(UI.defenses.Dodge)
  local UNARMEDBLOCK = tostring(UI.defenses.UnarmedBlock)
  local PRIMARYPARRY = tostring(UI.defenses.Parry)
  local SECONDARYPARRY = tostring(UI.defenses.SecondaryParry)
  local TAILPARRY = tostring(UI.defenses.TailParry)
  local LOWERLEFTPARRY = tostring(UI.defenses.LowerLeftParry)
  local LOWERRIGHTPARRY = tostring(UI.defenses.LowerRightParry)
  local SHIELDBLOCK = tostring(UI.defenses.ShieldBlock)
  local PHASE = tostring(UI.defenses.Phase)
  local SHIELDCAPACITY = tostring(UI.defenses.ShieldCapacity)
  local SHIELDRECHARGE = tostring(UI.defenses.ShieldRecharge)
  local SHIELDREDUCTION = tostring(UI.defenses.ShieldReduction)
  local HPREGEN = tostring(UI.defenses.HPRegen)
  local HEALMODIFIER = tostring(UI.defenses.HealMod)
  local MANAREGEN = tostring(UI.defenses.ManaRegen)
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local DefenseCard = {}
  local DefenseCardArmor =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Armor Scores&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Armor Class&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;-" .. ARMORCLASS .. "(" .. ARMORPERCENT .. "%)&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Warding&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;-" .. WARDING .. "(" .. WARDINGPERCENT .. "%)&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Saves&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;-" .. SAVES .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  local DefenseCardResist =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Damage Resistance&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Slash&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. SLASHRES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Bash&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. BASHRES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Pierce&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. PIERCERES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Fire&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. FIRERES .. "%&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Cold&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. COLDRES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Mental&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. MENTALRES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Magic&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. MAGICRES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Light&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. LIGHTRES .. "%&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Negative&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. NEGATIVERES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Holy&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. HOLYRES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Unholy&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. UNHOLYRES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Lightning&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. LIGHTNINGRES .. "%&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Sound&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. SOUNDRES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Acid&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. ACIDRES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Poison&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. POISONRES .. "%&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Disease&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. DISEASERES .. "%&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  local DodgeRoll =
    {
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Dodge&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. DODGE .. "&lt;/td&gt;",
    };
  local UnarmedBlockRoll =
    {
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Unarmed Block&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. UNARMEDBLOCK .. "&lt;/td&gt;",
    };
  local PrimaryParryRoll =
    {
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Parry&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. PRIMARYPARRY .. "&lt;/td&gt;",

    };
  local SecondaryParryRoll =
    {
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Parry&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. PRIMARYPARRY .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Off Hand Parry&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. SECONDARYPARRY .. "&lt;/td&gt;",
    };
  local TailParryRoll =
    {
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Tail Parry&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. TAILPARRY .. "&lt;/td&gt;",
    };
  local LowerLeftParryRoll =
    {
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Lower Left Parry&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. LOWERLEFTPARRY .. "&lt;/td&gt;",
    };
  local LowerRightParryRoll =
    {
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Lower Right Parry&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. LOWERRIGHTPARRY .. "&lt;/td&gt;",
    };
   local ShieldBlockRoll =
    {
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
			"&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Shield Block&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. SHIELDBLOCK .. "&lt;/td&gt;",
    };
  local PhaseRoll =
    {
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Phase&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. PHASE .. "&lt;/td&gt;",
    };
  local DefenseCardDefenses =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Defense Rolls&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  if tonumber(PHASE) &gt;= 1 then
    table.insert(DefenseCardDefenses, 4, table.concat(PhaseRoll, ""))
  end
  if tonumber(SHIELDBLOCK) &gt;= 1 then
    table.insert(DefenseCardDefenses, 4, table.concat(ShieldBlockRoll, ""))
  end
  if tonumber(PRIMARYPARRY) &gt;= 1 then
    table.insert(DefenseCardDefenses, 4, table.concat(PrimaryParryRoll, ""))
  elseif tonumber(SECONDARYPARRY) &gt;= 1 then
    table.insert(DefenseCardDefenses, 4, table.concat(SecondaryParryRoll, ""))
  end
  if tonumber(UNARMEDBLOCK) &gt;= 1 then
    table.insert(DefenseCardDefenses, 4, table.concat(UnarmedBlockRoll, ""))
  end
  if tonumber(DODGE) &gt;= 1 then
    table.insert(DefenseCardDefenses, 4, table.concat(DodgeRoll, ""))
  end
  local DefenseCardShield =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Shielding Unit&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Shield Capacity&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. SHIELDCAPACITY .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Shield Reduction&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. SHIELDREDUCTION .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Shield Recharge&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. SHIELDRECHARGE .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  table.insert(DefenseCard, table.concat(DefenseCardArmor, ""))
  table.insert(DefenseCard, table.concat(DefenseCardResist, ""))
  table.insert(DefenseCard, table.concat(DefenseCardDefenses, ""))
  if tonumber(SHIELDCAPACITY) &gt;= 1 then
    table.insert(DefenseCard, table.concat(DefenseCardShield, ""))
  end
  echo("UI.Defense", table.concat(DefenseCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelOffense</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelOffense()
  if UI.name.Name == "Tim" then
    return
  end
  local HITROLL = tostring(UI.offense.Hitroll)
  local DEFENSEBREAK = tostring(UI.offense.DefenseBreak)
  local DAMROLL = tostring(UI.offense.Damroll)
  local DAMAGE = tostring(UI.offense.Damage)
  local SPEED = tostring(UI.offense.Speed)
  local TOTALSPEED = tostring(UI.offense.TotalSpeed)
  local STYLE = tostring(UI.offense.Style)
  local TACTICS = tostring(UI.offense.Tactics)
  local CRITCHANCE = tostring(UI.offense.CritChance)
  local CRITDAMAGE = tostring(UI.offense.CritDamage)
  local MELEEDAMAGE = tostring(UI.offense.CharacterDamage)
  local SPELLDAMAGE = tostring(UI.offense.SpellDamage)
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local OffenseCard = {}
  local OffenseCardAttack =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Attack Rolls&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td&gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;Hitroll&lt;span style=\"color: " .. C1 .. ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. HITROLL .. "&lt;/td&gt;",
      "&lt;td&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;(&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      DEFENSEBREAK ..
      "%&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;)&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td&gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;Damroll&lt;span style=\"color: " .. C1 .. ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. DAMROLL .. "&lt;/td&gt;",
      "&lt;td&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;(&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;" ..
      DAMAGE ..
      "%&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;)&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td&gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;Speed&lt;span style=\"color: " .. C1 .. ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. SPEED .. "&lt;/td&gt;",
      "&lt;td&gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;\/&lt;/td&gt;",
      "&lt;td&gt;" .. TOTALSPEED .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  local OffenseCardDamage =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Damage&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Melee Damage&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. MELEEDAMAGE .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Spell Damage&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. SPELLDAMAGE .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Crit Chance&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. CRITCHANCE .. "%&lt;/td&gt;",
      "&lt;td&gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;for&lt;/td&gt;",
      "&lt;td&gt;" .. CRITDAMAGE .. "%&amp;nbsp;&lt;span style=\"color: " .. C1 .. ";\"&gt;damage&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  local OffenseCardStyle =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Combat&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td&gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;Style&lt;span style=\"color: " .. C1 .. ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. STYLE .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&amp;nbsp;&lt;/td&gt;",
      "&lt;td&gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;Tatics&lt;span style=\"color: " .. C1 .. ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. TACTICS .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    };
  table.insert(OffenseCard, table.concat(OffenseCardAttack, ""))
  table.insert(OffenseCard, table.concat(OffenseCardDamage, ""))
  table.insert(OffenseCard, table.concat(OffenseCardStyle, ""))
  echo("UI.Offense", table.concat(OffenseCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelCasting</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelCasting()
  if UI.name.Name == "Tim" then
    return
  end
  local BASE = UI.casting.Base
  local NECRO = UI.casting.Necro
  local ABJUR = UI.casting.Abjur
  local ALTER = UI.casting.Alter
  local CONJU = UI.casting.Conju
  local ENCHA = UI.casting.Encha
  local DIVIN = UI.casting.Divin
  local ILLUS = UI.casting.Illus
  local INVOC = UI.casting.Invoc
  local BEGUI = UI.casting.Begui
  local RELIG = UI.casting.Relig
  local MALAD = UI.casting.Malad
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local CastingCard =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;Casting Levels&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Base&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. BASE .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Necro&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. NECRO .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Abjur&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. ABJUR .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Alter&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. ALTER .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Conju&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. CONJU .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Encha&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. ENCHA .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Divin&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. DIVIN .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Illus&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. ILLUS .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;tr&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Invoc&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. INVOC .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Begui&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. BEGUI .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Relig&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. RELIG .. "&lt;/td&gt;",
      "&lt;td&gt;&amp;nbsp;&lt;/td&gt;",
      "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
      C2 ..
      ";\"&gt;Malad&lt;span style=\"color: " ..
      C1 ..
      ";\"&gt;:&lt;/td&gt;",
      "&lt;td&gt;" .. MALAD .. "&lt;/td&gt;",
      "&lt;/tr&gt;",
      "&lt;/tbody&gt;",
      "&lt;/table&gt;&lt;/center&gt;",
    }
  echo("UI.Casting", table.concat(CastingCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UIChar3</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UIChar3()
  UI.Char3Tabs = {"Affects", "Empowers", "Traits", "Boons"}
  UI.CurrentChar3 = UI.CurrentChar3 or UI.Char3Tabs[1]
  UI.Char3Header =
    Geyser.HBox:new(
      {name = "UI.Char3Header", x = "2%", y = "2%", height = "10%", width = "97%"}, UI.LBot
    )
  UI.Char3Footer =
    Geyser.Container:new(
      {name = "UI.Char3Footer", x = "1%", y = "11%", height = "87%", width = "98%"}, UI.LBot
    )
  for k, v in pairs(UI.Char3Tabs) do
    UI[v .. "tab"] = Geyser.Label:new({name = "UI." .. v .. "tab"}, UI.Char3Header)
    UI[v .. "tab"]:setStyleSheet(UI.TabStyleSheet)
    UI[v .. "tab"]:echo("&lt;center&gt;&lt;strong&gt;" .. tostring(v))
    UI[v .. "tab"]:setClickCallback("UI.Char3Click", v)
    UI[v] =
      Geyser.Label:new(
        {x = "1%", y = 0, height = "98%", width = "98%", name = "UI." .. v}, UI.Char3Footer
      )
    UI[v]:setStyleSheet(UI.WindowStyleSheet)
    UI[v]:hide()
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.Char3Click</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.Char3Click(tab)
  UI[UI.CurrentChar3]:hide()
  UI.CurrentChar3 = tab
  for i = 1, #UI.Char3Tabs do
    UI[UI.Char3Tabs[i] .. "tab"]:setStyleSheet(UI.TabStyleSheet)
  end
  if tostring(UI.CurrentChar3) == "Affects" then
    UI.UpdateLabelAffects()
  elseif tostring(UI.CurrentChar3) == "Empowers" then
    UI.UpdateLabelEmpowers()
  elseif tostring(UI.CurrentChar3) == "Traits" then
    UI.UpdateLabelTraits()
  elseif tostring(UI.CurrentChar3) == "Boons" then
    UI.UpdateLabelBoons()
  end
  UI[UI.CurrentChar3]:show()
  UI[UI.CurrentChar3 .. "tab"]:setStyleSheet(UI.ActiveTabStyleSheet)
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UIAffects</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UIAffects()
  UI.AffectsList =
    Geyser.MiniConsole:new(
      {
        name = "UI.AffectsList",
        x = "2.5%",
        y = "2.5%",
        width = "95%",
        height = "95%",
        color = "black",
        scrollBar = false,
        setwrap = "70",
        font = UI.theme.Font,
        fontSize = tonumber(UI.theme.FontSize) - 2,
      },
      UI.Affects
    )
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelAffects</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelAffects()
  if UI.name.Name == "Tim" then
    return
  end
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  clearWindow("UI.AffectsList")
  UI.AffectsList:resetAutoWrap()
  cecho("UI.AffectsList", "&lt;" .. C1 .. "&gt;You are affected by:\n")
  if UI.affects == nil then
    return
  end
  for k1, v1 in pairs(UI.affects) do
    for k2, v2 in pairs(UI.affects[k1]) do
      local affect = k1
      local stat = rex.match(tostring(v2), [[^(.*)\,.*\,.*$]])
      local amount = rex.match(tostring(v2), [[^.*\,(.*)\,.*$]])
      local timer = rex.match(tostring(v2), [[^.*\,.*\,(.*)$]])
      if tonumber(k2) == 1 then
        local line =
          "&lt;" .. C1 .. "&gt;" .. affect .. " " .. stat .. " " .. amount .. ", " .. timer .. "\n"
        cecho("UI.AffectsList", line)
      else
        local line = "                  " .. stat .. " " .. amount .. ", " .. timer .. "\n"
        cecho("UI.AffectsList", line)
      end
    end
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelEmpowers</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelEmpowers()
  if UI.name.Name == "Tim" then
    return
  end
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local EmpowersOrder =
    {
      [[hitpoints]],
      [[mana]],
      [[regen hp]],
      [[regen mana]],
      [[armor class]],
      [[warding]],
      [[saves]],
      [[hit roll]],
      [[damage roll]],
      [[speed]],
      [[resist slash]],
      [[resist blunt]],
      [[resist pierce]],
      [[resist fire]],
      [[resist cold]],
      [[resist mental]],
      [[resist magic]],
      [[resist light]],
      [[resist negative]],
      [[resist holy]],
      [[resist unholy]],
      [[resist lightning]],
      [[resist sound]],
      [[resist acid]],
      [[resist poison]],
      [[resist disease]],
      [[necromantic casting]],
      [[abjurational casting]],
      [[alterational casting]],
      [[conjurational casting]],
      [[enchantment casting]],
      [[divinitive casting]],
      [[illusional casting]],
      [[invocational casting]],
      [[beguilery casting]],
      [[religion casting]],
      [[maladictive casting]],
    }
  local EmpowersCard = {}
  local EmpowersCardTableStart =
    {
      "&lt;center&gt;&lt;span style=\"color: " ..
      C2 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      tonumber(SIZE) +
      2 ..
      "px; font-weight: bold;\"&gt;You have been empowered with&lt;/span&gt;&lt;/center&gt;",
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
      "&lt;tr&gt;",
    };
  local EmpowersCardTableStop = {"&lt;/tr&gt;", "&lt;/tbody&gt;", "&lt;/table&gt;&lt;/center&gt;"};
  table.insert(EmpowersCard, table.concat(EmpowersCardTableStart, ""))
  if UI.empowers == nil then
    return
  end
  local count = 0
  for k, v in pairs(EmpowersOrder) do
    if tonumber(UI.empowers[v]) ~= 0 then
      count = tonumber(count) + 1
      if tonumber(count) % 3 == 0 then
        table.insert(EmpowersCard, "&lt;td align=\"right\"&gt;" .. UI.empowers[v] .. "&amp;nbsp;&lt;/td&gt;")
        table.insert(
          EmpowersCard, "&lt;td align=\"left\"&gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;" .. v .. "&lt;/td&gt;"
        )
        table.insert(EmpowersCard, "&lt;/tr&gt;")
        table.insert(EmpowersCard, "&lt;tr&gt;")
      else
        table.insert(EmpowersCard, "&lt;td align=\"right\"&gt;" .. UI.empowers[v] .. "&amp;nbsp;&lt;/td&gt;")
        table.insert(
          EmpowersCard, "&lt;td align=\"left\"&gt;&lt;span style=\"color: " .. C2 .. ";\"&gt;" .. v .. "&lt;/td&gt;"
        )
        table.insert(EmpowersCard, "&lt;td&gt;&amp;nbsp;&lt;/td&gt;")
      end
    end
  end
  table.insert(EmpowersCard, table.concat(EmpowersCardTableStop, ""))
  echo("UI.Empowers", table.concat(EmpowersCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelTraits</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelTraits()
  if UI.name.Name == "Tim" then
    return
  end
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local TraitsCard = {}
  local TraitsCardTableStart =
    {
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
    };
  local TraitsCardTableStop = {"&lt;/tbody&gt;", "&lt;/table&gt;&lt;/center&gt;"};
  table.insert(TraitsCard, table.concat(TraitsCardTableStart, ""))
  for i = 1, #UI.traits do
    local matched = false
    for k, v in pairs(UI.traitsDetail) do
      if string.lower(UI.traits[i]) == tostring(k) then
        matched = true
        table.insert(TraitsCard, "&lt;tr&gt;")
        table.insert(
          TraitsCard,
          "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
          C2 ..
          ";\"&gt;" ..
          k ..
          "&lt;span style=\"color: " ..
          C1 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(TraitsCard, "&lt;td&gt;" .. v .. "&lt;/td&gt;")
        table.insert(TraitsCard, "&lt;/tr&gt;")
        break
      else
        matched = false
      end
    end
    if matched == false then
      table.insert(TraitsCard, "&lt;tr&gt;")
      table.insert(
        TraitsCard,
        "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
        C2 ..
        ";\"&gt;" ..
        UI.traits[i] ..
        "&lt;span style=\"color: " ..
        C1 ..
        ";\"&gt;:&lt;/td&gt;"
      )
      table.insert(TraitsCard, "&lt;td&gt;The effects of this trait are unknown.&lt;/td&gt;")
      table.insert(TraitsCard, "&lt;/tr&gt;")
    end
  end
  table.insert(TraitsCard, table.concat(TraitsCardTableStop, ""))
  echo("UI.Traits", table.concat(TraitsCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.UpdateLabelBoons</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.UpdateLabelBoons()
  if UI.name.Name == "Tim" then
    return
  end
  local C1 = UI.theme.Color2
  local C2 = UI.theme.Color6
  local FONT = UI.theme.Font
  local SIZE = UI.theme.FontSize
  local BoonsCard = {}
  local BoonsCardTableStart =
    {
      "&lt;center&gt;&lt;table style=\"width: 95%;\" &gt;",
      "&lt;tbody style=\"color: " ..
      C1 ..
      "; Font-family: " ..
      FONT ..
      "; font-size: " ..
      SIZE ..
      "px; font-weight: bold;\"&gt;",
    };
  local BoonsCardTableStop = {"&lt;/tbody&gt;", "&lt;/table&gt;&lt;/center&gt;"};
  table.insert(BoonsCard, table.concat(BoonsCardTableStart, ""))
  for i = 1, #UI.boons do
    local matched = false
    for k, v in pairs(UI.boonsDetail) do
      if tostring(UI.boons[i]) == tostring(k) then
        matched = true
        table.insert(BoonsCard, "&lt;tr&gt;")
        table.insert(
          BoonsCard,
          "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
          C2 ..
          ";\"&gt;" ..
          k ..
          "&lt;span style=\"color: " ..
          C2 ..
          ";\"&gt;:&lt;/td&gt;"
        )
        table.insert(BoonsCard, "&lt;td&gt;" .. v .. "&lt;/td&gt;")
        table.insert(BoonsCard, "&lt;/tr&gt;")
        break
      else
        matched = false
      end
    end
    if matched == false then
      table.insert(BoonsCard, "&lt;tr&gt;")
      table.insert(
        BoonsCard,
        "&lt;td align=\"right\"&gt;&lt;span style=\"color: " ..
        C2 ..
        ";\"&gt;" ..
        UI.boons[i] ..
        "&lt;span style=\"color: " ..
        C1 ..
        ";\"&gt;:&lt;/td&gt;"
      )
      table.insert(BoonsCard, "&lt;td&gt;The effects of this boon are unknown.&lt;/td&gt;")
      table.insert(BoonsCard, "&lt;/tr&gt;")
    end
  end
  table.insert(BoonsCard, table.concat(BoonsCardTableStop, ""))
  echo("UI.Boons", table.concat(BoonsCard, ""))
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>Feed</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end



function expPerTerm(term)
  local newTime = getEpoch()
	local inScopeExp = {}
	local total = 0
  	for k,v in pairs(expPool) do
  		local exp  = rex.match(tostring(v), [[^(.*)\,.*$]])
  		local time = rex.match(tostring(v), [[^.*\,(.*)$]])
  		local minTime = tonumber(newTime) - tonumber(term)
  		local maxTime = newTime
  		if tonumber(time) &lt;= tonumber(maxTime) and tonumber(time) &gt;= tonumber(minTime) then
  			table.insert(inScopeExp, exp)
  		end
  	end
  	for k, v in pairs(inScopeExp) do
  		total = tonumber(total) + tonumber(v)
  	end
    if isStringEmpty(tostring(total)) then
      total = 0
    end
  	return total
end
function isStringEmpty(s)
  return s == nil or s == ''
end
function isTableEmpty(s)
  local next = next
  if next(s) == nil then
    return true
  end
  return false
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.DamageCalc</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.DamageCalc(term)
  if UI.name.Name == "Tim" then
    return
  end
  local dph = 0
  local hits = 0
  local damageTaken = 0
  local DAMAGEPOOL = damagePool or {}
  if not isTableEmpty(DAMAGEPOOL) then
    damageTaken, hits = UI.xPerTerm(DAMAGEPOOL, term)
    dph = tonumber(string.format("%.3f", (tonumber(damageTaken)/tonumber(hits)))) or 0
  end
  if isStringEmpty(tostring(dph)) then
    dph = 0
  end

  if isStringEmpty(tostring(hits)) then
    hits = 0
  end
  if isStringEmpty(tostring(damageTaken)) then
    damageTaken = 0
  end
  return damageTaken, hits, dph
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.DPSCalc</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.DPSCalc(term)
  if UI.name.Name == "Tim" then
    return
  end
  local dps = 0
  local strikes = 0
  local damageDealt = 0
  local DPSPOOL = dpsPool or {}

  if not isTableEmpty(DPSPOOL) then
    damageDealt, strikes = UI.xPerTerm(DPSPOOL, term)
    dps = tonumber(string.format("%.3f", (tonumber(damageDealt)/tonumber(strikes)))) or 0
  end
  if isStringEmpty(tostring(dps)) then
    dps = 0
  end
  if isStringEmpty(tostring(strikes)) then
    strikes = 0
  end
  if isStringEmpty(tostring(damageDealt)) then
    damageDealt = 0
  end
  return damageDealt, strikes, dps
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="no" isFolder="no">
						<name>UI.xPerTerm</name>
						<packageName></packageName>
						<script>if mysettings.UIType ~= "XaosUI" then return end

function UI.xPerTerm(tempTable,term)
  local newTime = getEpoch()
	local inScope = {}
	local total = 0
	local count = 0
	for k,v in pairs(tempTable) do
		local wantedVariable = rex.match(tostring(v), [[^(.*)\,.*$]])
		local time = rex.match(tostring(v), [[^.*\,(.*)$]])
		local minTime = tonumber(newTime) - tonumber(term)
		local maxTime = newTime
		if tonumber(time) &lt;= tonumber(maxTime) and tonumber(time) &gt;= tonumber(minTime) then
			table.insert(inScope, wantedVariable)
			count = count + 1
		end
	end
	for k, v in pairs(inScope) do
		total = tonumber(total) + tonumber(v)
	end

	return total, count
end

function round(x)
  return x&gt;=0 and math.floor(x+0.5) or math.ceil(x-0.5)
end

</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>xPrompt</name>
				<packageName></packageName>
				<script>xPrompt = xPrompt or {}</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>xPrompt</name>
					<packageName></packageName>
					<script>function xPrompt.Initialize()
  xPrompt.ConfigLoad()
end

function xPrompt.ConfigLoad()
  local path = profilePath .. "/ui/xPrompt.lua"
  if io.exists(path) then
    table.load(path, xPrompt)
  else
    ncom("Missing Component: /xPrompt.lua")
    loadError = true
    return
  end
end

--Xaos compatible replacement for the isPorompt function of mudlet.
--Function uses lrexlib to match lines from the mud with known Xoas prompts.
--If you would like a prompt to be added to this function just tell Noax.
--To use it set a trigger pattern type to Lua function with a pattern of 'return isXaosPrompt()'

function isXaosPrompt()
  --Noax Prompt Syntax 'prompt %cHP %h Mana %m Move %v Exp %X, Style: %C Room: %r Exits: %e%c'
  if
    rex.match(
      tostring(line),
      [[^HP (\d+)\% Mana (\d+)\% Move (\d+)\% Exp (\d+)\%\, Style\: (.*?) Room\: (.*?) Exits\: (.*?)$]]
    ) ~= nil
  then
    xPrompt.hp,
    xPrompt.mana,
    xPrompt.move,
    xPrompt.exp,
    xPrompt.style,
    xPrompt.room,
    xPrompt.room,
    xPrompt.exits =
      rex.match(
        tostring(line),
        [[^HP (\d+)\% Mana (\d+)\% Move (\d+)\% Exp (\d+)\%\, Style\: (.*?) Room\: (.*?) Exits\: (.*?)$]]
      )
    return true
    --Xaos builtin Syntax 'prompt newbie'
  elseif
    rex.match(tostring(line), [[^\&lt;(\d+)\%\/ hp (\d+)\%\/ m (\d+)\%\/ mv\&gt; \[(\d+)\%\]$]]) ~= nil
  then
    xPrompt.hp, xPrompt.mana, xPrompt.move, xPrompt.exp =
      rex.match(tostring(line), [[^\&lt;(\d+)\%\/ hp (\d+)\%\/ m (\d+)\%\/ mv\&gt; \[(\d+)\%\]$]])
    return true
    --Xaos builtin Syntax 'prompt all'
  elseif rex.match(tostring(line), [[^\&lt;(\d+)\%hp (\d+)\%m (\d+)\%mv\&gt;$]]) ~= nil then
    xPrompt.hp, xPrompt.mana, xPrompt.move =
      rex.match(tostring(line), [[^\&lt;(\d+)\%hp (\d+)\%m (\d+)\%mv\&gt; $]])
    xPrompt.exp = 0
    return true
    --Xaos builtin at craracter creation
  elseif
    rex.match(tostring(line), [[^(\d+)\% Life (\d+)\% Mana (\d+)\% Moves,(\d+)\% XP\/lvl\&gt;$]]) ~= nil
  then
    xPrompt.hp, xPrompt.mana, xPrompt.move, xPrompt.exp =
      rex.match(tostring(line), [[^(\d+)\% Life (\d+)\% Mana (\d+)\% Moves,(\d+)\% XP\/lvl\&gt;$]])
    return true
    --Marcho's XUI Prompt Syntax 'prompt HEALTH %h MANA %m MVM %v STIL %C XP %X Directions  %e  Hungry  %B %c'
  elseif
    rex.match(
      tostring(line),
      [[^HEALTH (\d+)\% MANA (\d+)\% MVM (\d+)\% STIL (.*) XP (\d+)\% Directions  (.*) Hungry  (.*) $]]
    ) ~= nil
  then
    xPrompt.hp,
    xPrompt.mana,
    xPrompt.move,
    xPrompt.style,
    xPrompt.exp,
    xPrompt.exits,
    xPrompt.hunger =
      rex.match(
        tostring(line),
        [[^HEALTH (\d+)\% MANA (\d+)\% MVM (\d+)\% STIL (.*) XP (\d+)\% Directions  (.*) Hungry  (.*) $]]
      )
    return true
    --Obscillesk Prompt Syntax 'prompt &lt;%hhp %mmn %vmv&gt; &lt;%t&gt; &lt;%C&gt; &lt;%X&gt;'
  elseif
    rex.match(
      tostring(line), [[^\&lt;(\d+)\%hp (\d+)\%mn (\d+)\%mv\&gt; \&lt;(.*)\&gt; \&lt;(.*)\&gt; \&lt;(\d+)\%\&gt; $]]
    ) ~= nil
  then
    xPrompt.hp, xPrompt.mana, xPrompt.move, xPrompt.time, xPrompt.style, xPrompt.exp =
      rex.match(
        tostring(line), [[^\&lt;(\d+)\%hp (\d+)\%mn (\d+)\%mv\&gt; \&lt;(.*)\&gt; \&lt;(.*)\&gt; \&lt;(\d+)\%\&gt; $]]
      )
    return true
    --Solious Prompt (%r)(%e)%c(%Xxp)(%t)%c(%hhp %mm %vmv)
  elseif rex.match(tostring(line), [[^\((\d+)\%hp (\d+)\%m (\d+)\%mv\) $]]) ~= nil then
    xPrompt.hp, xPrompt.mana, xPrompt.move =
      rex.match(tostring(line), [[^\((\d+)\%hp (\d+)\%m (\d+)\%mv\) $]])
    xPrompt.exp = 0
    acom("Your Prompt sucks")
    return true
  else
    return false
  end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Feed</name>
					<packageName></packageName>
					<script>function feedManager(message,ignoretime)
  if lastMessage == nil then
    lastMessage = "None"
  end
  if lastTimestamp == nil then
    timestamp = getTime(true, "hh:mm:ssap")
  end
  local timestamp = getTime(true, "hh:mm:ssap")
  --local console = "UI.FeedList"
  if (ignoretime and message ~= lastMessage) or ((ignoretime == nil or not ignoretime) and (message ~= lastMessage or timestamp ~= lastTimestamp)) then
  --if message ~= lastMessage and (ignoretime or timestamp ~= lastTimestamp then
    cecho(feedconsole, message .. "&lt;DimGrey&gt; @" .. timestamp .. "\n")
    lastMessage = message
    lastTimestamp = timestamp
  end
end

</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>qolWithReldi</name>
				<packageName></packageName>
				<script>qolWithReldi = qolWithReldi or {}</script>
				<eventHandlerList />
				<Script isActive="no" isFolder="no">
					<name>qolWithReldi</name>
					<packageName></packageName>
					<script>function qolWithReldi.Initialize()
  qolWithReldi.ConfigLoad()
	expandAlias("showall off", false)
	expandAlias("scripterKill off", false)
end


function qolWithReldi.ConfigLoad()
  local path = profilePath .. "/ui/qolWithReldi.lua"
  if io.exists(path) then
    table.load(path, qolWithReldi)
  else
    ncom("Missing Component: /qolWithReldi.lua")
    loadError = true
    return
  end
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>Xaos</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>-1</keyCode>
			<keyModifier>-1</keyModifier>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>xaos-ui-0120</name>
				<packageName>xaos-ui-0120</packageName>
				<script></script>
				<command></command>
				<keyCode>0</keyCode>
				<keyModifier>0</keyModifier>
				<KeyGroup isActive="yes" isFolder="yes">
					<name>xaos-ui-0120</name>
					<packageName>xaos-ui-0120</packageName>
					<script></script>
					<command></command>
					<keyCode>0</keyCode>
					<keyModifier>0</keyModifier>
					<Key isActive="yes" isFolder="no">
						<name>east</name>
						<packageName></packageName>
						<script></script>
						<command>east</command>
						<keyCode>54</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>west</name>
						<packageName></packageName>
						<script></script>
						<command>west</command>
						<keyCode>52</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>north</name>
						<packageName></packageName>
						<script></script>
						<command>north</command>
						<keyCode>56</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>south</name>
						<packageName></packageName>
						<script></script>
						<command>south</command>
						<keyCode>50</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>up</name>
						<packageName></packageName>
						<script></script>
						<command>up</command>
						<keyCode>45</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>down</name>
						<packageName></packageName>
						<script></script>
						<command>down</command>
						<keyCode>43</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>look</name>
						<packageName></packageName>
						<script></script>
						<command>look</command>
						<keyCode>53</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>DSoup</name>
						<packageName></packageName>
						<script></script>
						<command>drink soup</command>
						<keyCode>55</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>scan</name>
						<packageName></packageName>
						<script></script>
						<command>scan</command>
						<keyCode>57</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
				</KeyGroup>
			</KeyGroup>
			<Key isActive="yes" isFolder="no">
				<name>F1 - Help</name>
				<packageName></packageName>
				<script>expandAlias("xhelp all")</script>
				<command></command>
				<keyCode>16777264</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F2 - Tab</name>
				<packageName></packageName>
				<script>for k,v in pairs(menu.tabs) do
  menu[v]:hide()
end
menu[menu.tabs[1]]:show()</script>
				<command></command>
				<keyCode>16777265</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F3 - Tab</name>
				<packageName></packageName>
				<script>for k,v in pairs(menu.tabs) do
  menu[v]:hide()
end
menu[menu.tabs[2]]:show()</script>
				<command></command>
				<keyCode>16777266</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F4 - Tab</name>
				<packageName></packageName>
				<script>for k,v in pairs(menu.tabs) do
  menu[v]:hide()
end
menu[menu.tabs[3]]:show()</script>
				<command></command>
				<keyCode>16777267</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F5 - Tab</name>
				<packageName></packageName>
				<script>for k,v in pairs(menu.tabs) do
  menu[v]:hide()
end
menu[menu.tabs[4]]:show()</script>
				<command></command>
				<keyCode>16777268</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F6 - Tab</name>
				<packageName></packageName>
				<script>for k,v in pairs(menu.tabs) do
  menu[v]:hide()
end
menu[menu.tabs[5]]:show()</script>
				<command></command>
				<keyCode>16777269</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F12 - Toggle Scripting</name>
				<packageName></packageName>
				<script>huntTarget = huntTarget or "Helpful Bob"
if auto_hunt then
  auto_hunt = false
  xuicom("You will no longer attempt to automatically hunt targets")
else
  send("auto ")
  auto_hunt = true
  xuicom(
    "You will attempt to automatically hunt something. Current settings indicate you're going to hunt " ..
    huntTarget
  )
	xuicom("Currently, tracking "..wielded.." as your wielded weapon.")
  if statusFollowing then
    --This bit handles the "What do I do if I'm following someone?" question
    obsessionMode = true
    huntTarget = followTarget
    location = nil
    xuicom("You are following " .. followTarget .. " and this script will attempt to hunt them.")
    xuicom("Obsession mode is on by default. Use &lt;white&gt;obsessionoff&lt;light_blue&gt; to turn it off.\n")
    cechoLink(
      "[ XUI ] &lt;light_blue&gt;Click here for more info on obsession mode.\n",
      [[xuicom("Obsession mode inputs hunt aggressively in an attempt to keep up with the party leader.\n")]],
      "obsession mode info",
      true
    )
    if huntTarget then
    else
      variableCheck(huntTarget, "hunt location")
      auto_hunt = false
    end
  end
end
combat = false
hunting = false</script>
				<command></command>
				<keyCode>16777275</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
		</KeyGroup>
	</KeyPackage>
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
