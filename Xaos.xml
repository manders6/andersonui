<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Xaos</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Connection</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Login</name>
					<script>disableTimer("Party Grab")
disableTimer("Update Variables")
disableTimer("Update Score")
disableTimer("Quest Update")
disableTimer("Party Timer")
disableTimer("User Timer")
disableTimer("Update Combat")
disableTimer("XPRate")
disableTimer("drinkTimer")

retrieveprofiles()

if xaos.config.autologin then
  expandAlias(xaos.config.autologinaction)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]</string>
						<string>Your command:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>OnLogin</name>
					<script>combat=false
foundTarget=false
initialload=true

updatestats()
expandAlias("seteq")

if not mysettings.features.msdp then
  enableTimer("Party Grab")
  enableTimer("Party Timer")
end

enableTimer("Update Variables")
enableTimer("Update Score")
enableTimer("Quest Update")
enableTimer("Update Combat")
enableTimer("XPRate")
enableTimer("User Timer")
enableTimer("drinkTimer")
feedManager("[ALERT] Logged in to character")

raiseEvent("xaos_connect")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Reconnected character.</string>
						<string>Welcome to Xaos MUD</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CopyOver Start</name>
					<script>copyoverinprogress=true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Performing copyover... Please wait.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CopyOver In Progress</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return copyoverinprogress</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>100%</name>
						<script>
tempTimer(1,function()
    raiseEvent("xaos_connect")
  end
)

copyoverinprogress=false
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>100%</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Scripting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Script States</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Combat true</name>
						<script>combat = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string> is in awful condition</string>
							<string>has some big nasty wounds and scratches</string>
							<string>has quite a few wounds </string>
							<string>is in excellent condition </string>
							<string>looks pretty hurt</string>
							<string>has some small wounds and bruises </string>
							<string>No way!  You are still fighting!</string>
							<string>You are still in combat!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Combat false - Death</name>
						<script>combat = false
hunting = false
targetFound=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Combat false + Script bit</name>
						<script>combat = false
hunting = false
targetFound=false

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You blink out of existence!</string>
							<string>You hit the ground!</string>
							<string>You have fled from combat.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Death</name>
						<script>killedID = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Death and XP</name>
						<script>--You have gained 16205 experience.

last_xp = last_xp or 0

killedID = multimatches[1][2]
xpgained = tonumber(multimatches[2][2])/1000

xpDiff = (current_xp - last_xp)

if xpDiff&lt;0 then
	xpDiff = xpDiff+100
end

xpCollection1 = (xpCollection1 + (xpgained))



--last_xp = current_xp
last_killedID = killedID
--last_xpDiff = xpDiff

if killedID and xaos.config.show_killed then
cecho("data","&lt;medium_turquoise&gt;[Kill " .. getTime(true,"HH.mm") .. "] "..killedID..": ".. string.format("%4.2f",xpgained).."%\n")
end

  local curasc = calcAscendPercent(xaos.Level,xaos.LevelPercent)
  local ascstring = string.format("%2.2f",curasc) .. "%"
  
  
  xp_overflow = xp_overflow or 0
  if current_xp &gt; 99 then
    xp_overflow = round(current_xp / 100)
    current_xp = current_xp % 100
    -- xuicom("Bucket has value "..bucket.." xp overflow is "..xp_overflow)
    --xpbar.front:echo(current_xp .. "% with " .. xp_overflow .. " dings in reserve (" .. current_xp + ((xp_overflow-1)*100) .. ")", nil, "c")
    ascstring = ascstring .. " - " .. xp_overflow .. " stored levels"
  else
    --  
    --xpbar.back:echo(current_xp .. "%", nil, "c")
  end
  --xpbar:setValue(current_xp, 100, nil)
  --Build a new variable, XP delta, for tracking HP Loss
  
  ascbar:setValue(curasc, 100, nil)
  --ascbar.front:echo(curasc .. "%", nil, "c")
  
 
  
  ascbar:setText("&lt;center&gt;" .. ascstring .. "&lt;/center&gt;" )
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) has been defeated!!</string>
							<string>You have gained ([0-9]+) experience</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>data collection</name>
						<script>debugecho("death")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>data collection</name>
						<script>--You have gained 16205 experience.

last_xp = last_xp or 0

killedID = matches[2]


xpDiff = (current_xp - last_xp)

if xpDiff&lt;0 then
	xpDiff = xpDiff+100
end

xpCollection1 = (xpCollection1 + xpDiff)

if killedID and xaos.config.show_killed then
cecho("data","&lt;medium_turquoise&gt;[Kill " .. getTime(true,"HH.mm") .. "] "..last_killedID..": "..xpDiff.."%\n")
end

last_xp = current_xp
last_killedID = killedID
last_xpDiff = xpDiff</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enemy Condition</name>
						<script>
combat=true
targetFound=false
status.resting=false

lastcombattime = getEpoch()

if xaos.config.scripting.scan_mode and auto_hunt then
  disableTimer("scan listener")
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.* is in awful condition.*\.$|^.* has quite a few wounds.*\.$|^.* looks pretty hurt.*\.$|^.* has some small wounds and bruises .*\.$|^.* is in excellent.*\.$|^.* has some big nasty wounds and scratches,.*\.$|^.* has a few scratches .*\.$)</string>
							<string>^(?![ ]+[&lt;]|^.* is in awful condition.*\.$|^.* has quite a few wounds.*\.$|^.* looks pretty hurt.*\.$|^.* has some small wounds and bruises .*\.$|^.* is in excellent.*\.$|^.* has some big nasty wounds and scratches,.*\.$|^.* has a few scratches .*\.$)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>data collection</name>
						<script>if killcapturegrab then

  local whokilled = string.trim(multimatches[1][2])
  if not table.contains(killcapture,whokilled) then
    table.insert(killcapture,string.trim(whokilled))
  end
end
--killcapture = {}
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:[aA] |[tT]he |[aA]n )?(.*) has been defeated!!</string>
							<string>You have gained ([0-9]+) experience</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>auto action tracking</name>
						<script>
autoAction = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You will now automatically execute (.*).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Scripting On</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return auto_hunt</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scan Mode</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return xaos.config.scripting.scan_mode</string>
							<string>return auto_hunt</string>
							<string>return not statusFollowing</string>
							<string>return xaos.scripting.area.name ~= nil</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
							<integer>4</integer>
							<integer>4</integer>
							<integer>4</integer>
						</regexCodePropertyList>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>isscanning</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isscanning</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>grab scan</name>
								<script>
local mob = string.trim(matches[2])
local howfar = matches[3]
local dir = matches[4]


local current_area = xaos.scripting.area

if table.contains(current_area.killarray,mob) then
  if dir ~= nill and dir ~= "" then
    if howfar == "off in the distance" then
      scancount[dir][3] = scancount[dir][3] +1
    elseif howfar == "not far" then
      scancount[dir][2] = scancount[dir][2] +1
    elseif howfar == "nearby to the" then
      scancount[dir][1] = scancount[dir][1] +1
    end
  else 
    dir="none"
    scancount[dir][1] = scancount[dir][1] +1
        
  end
  
  if not targetFound then
    scantargetdir=dir
      
    targetFound=true
    if current_area.keywordoverride then
      targetFoundID = current_area.keyword
    else
      targetFoundID = mob
    end
  end
end


</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^(?:[aA] |[tT]he |[aA]n )?(.*), (nearby to the|off in the distance|not far) (\w+)\.</string>
									<string>^(?:[aA] |[tT]he |[aA]n )?(.*), right here.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Is Not Combat</name>
								<script></script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return not combat</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
								</regexCodePropertyList>
								<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
									<name>End Scan Reset</name>
									<script>
if targetFound and not targetAction then
  targetAction = true
  --echo(scantargetdir)
  local mobcnt = scancount[scantargetdir][1]
  debugecho("cnt " .. mobcnt)
  if tonumber(mobcnt) &lt;= tonumber(xaos.config.scripting.maxmobs) then
  
    tempTimer(.001,function () 
      send("bclear")
      disableTimer("scan listener")
      echo("\n")
      if scantargetdir ~= "none" then
        send(scantargetdir)
      end
      send("kill " .. targetFoundID)
    end)
  else
  
    tempTimer(.001,function () 
      local dircast = ""
      if xaos.class.mage or xaos.class.cleric or xaos.class.barbarian or xaos.class.primary=="geomancer" or xaos.class.primary=="rake" then
        dircast = "c light"
      end      
      send("bclear")
      disableTimer("scan listener")
      echo("\n")
      send(dircast .. " " ..  scantargetdir .. " " .. targetFoundID)
    end)
    tempTimer(.5, function () send("kill " .. targetFoundID) end)
  end

end</script>
									<triggerType>0</triggerType>
									<conditonLineDelta>0</conditonLineDelta>
									<mStayOpen>0</mStayOpen>
									<mCommand></mCommand>
									<packageName></packageName>
									<mFgColor>#ff0000</mFgColor>
									<mBgColor>#ffff00</mBgColor>
									<mSoundFile></mSoundFile>
									<colorTriggerFgColor>#000000</colorTriggerFgColor>
									<colorTriggerBgColor>#000000</colorTriggerBgColor>
									<regexCodeList>
										<string>return isXaosPrompt()</string>
									</regexCodeList>
									<regexCodePropertyList>
										<integer>4</integer>
									</regexCodePropertyList>
								</Trigger>
							</TriggerGroup>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Fail Scan Reset</name>
								<script>isscanning = false

if not targetFound and not combat then
  send("hunt " .. huntTarget)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>return isXaosPrompt()</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>4</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ran Away before we got here.</name>
							<script>local name = string.trim(matches[2])

debugecho("ran away")
hunting=false
if targetFound and name == targetFoundID then
  targetAction=false
  targetFound=false
  send("scan")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>There is no one named \'(.*)\' here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>start scan</name>
							<script>if not combat then

  isscanning = true
  scancount = {
    none = {0},
    north = {0,0,0},
    south = {0,0,0},
    east  = {0,0,0},
    west  = {0,0,0},
    up    = {0,0,0},
    down  = {0,0,0},
  }
  scantargetdir=""
  targetFoundID=""
  targetFound = false
  targetAction = false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Looking around you see:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Backflips</name>
							<script>combat=false
targetAction=false
targetFound=false

tempTimer(1,function() send("scan") end)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> backflips from combat!</string>
								<string> has fled!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>No one here.</name>
							<script>tempTimer(4,
  function() 
    send("scan")
  end
 )</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>No-one around by that name.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Arrived</name>
							<script>local mob = string.trim(matches[2])
if not combat then
  if status.resting then
    send("wake")
  end
  if table.contains(xaos.scripting.area.killarray,mob) then
    if xaos.scripting.area.keywordoverride then
      send("kill " .. xaos.scripting.area.keyword)
    else
      send("kill " .. mob)
    end
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(?:[aA] |[tT]he |[aA]n )?(.*) (arrives|swims|crawls|sneaks|flies) from</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Picked up and thrown</name>
							<script>send("scan")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You hit the ground</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Leader chase</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return statusLeader</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>is here</name>
							<script>
if string.lower(string.trim(matches[2])) == string.lower(followTarget) then
  debugwrite("--follow found")
  hunting=false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.*) is here!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Too fast</name>
							<script>if string.lower(string.trim(matches[2])) == string.lower(followTarget) then
  debugwrite("--lost your leader")
  hunting=true
  send("bclear")
  send(lastleaderdir)
  send("hunt " .. followTarget)
  lastleaderdir=""
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You try to follow, but (.*) is moving too quickly.</string>
								<string>You try to follow (.*) but they are moving too quickly</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Grab Leader Direction</name>
							<script>if string.lower(string.trim(matches[2])) == string.lower(followTarget) then
  lastleaderdir = matches[3]
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.*) leaves (.*)\.</string>
								<string>(.*) flies (.*)\.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Leader Check</name>
							<script>--If you are not currenlty the leader of the group, and not leading the party.
--This is to handle if the party leader changes.
if string.trim(curpartystatus.leader) ~= "Your" and string.trim(curpartystatus.leader) ~= "Someone" and not overrideleader then
  if string.trim(followTarget) ~= string.trim(curpartystatus.leader) then
    expandAlias("followleader")
  end
elseif string.trim(curpartystatus.leader) == "Your" then
  if xaos.config.afkmode then
    --The leader has been lost you are now the leader
    
  end
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*)\'s party:</string>
								<string>^(Your) Party:</string>
								<string>^(.*) party:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Leader Handling</name>
							<script>
if string.trim(curpartystatus.leader) ~= "Your" and killTarget ~= "" and auto_hunt  and autoleaderswitch then
  if string.trim(followTarget) == "" then
    --You are not the leader, and are not following the leader.
    --expandAlias("followleader")
  end
end
if xaos.party.leader == "Your" and killTarget == "" and auto_hunt and autoleaderswitch then
  --Its your party now!
  expandAlias("startscripting")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^(.*)\'s party:</string>
								<string>^(Your) Party:</string>
								<string>^(.*) party:</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Follow the scent</name>
						<script>direction = matches[3]
target = matches[2]
local huntWait = xaos.config.scripting.huntwait

if statusLeader then
  statusHunting=true 
  if string.lower(string.trim(target)) == string.lower(followTarget) then
    huntWait = 0
  end
end

if statusFollowing then
  send("bclear")
end
if huntWait == nil then
  huntWait = 0
end
if auto_hunt then
  if not combat then
    local killlist = ""
    
    if killTarget ~= "" then
      local killTargetTable = string.split(killTarget,",")
          
      for key,value in pairs(killTargetTable) do
        killlist = killlist .. "kill " .. value .. ";"
      end 
    end
    if xaos.config.scripting.scan_mode then
      if not hunting then
        tempTimer((huntWait), function ()
          if not combat then 
              debugecho("hunting " .. tostring(hunting))
              if not targetFound then
                send(direction..";" .. killlist .. "scan;")
              end
            
          end
        end)
      end
    else
      tempTimer((huntWait + 0.1), function ()
        if not combat then 
          
            send(direction..";" .. killlist .. "hunt " ..huntTarget)

          
        end
      end)
    end
  end
end
hunting = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.*) is (\w+) from here( and very close)?</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defeat Comprehensive</name>
						<script>combat = false
hunting = false
initialcommandrun=0
targetFound = false
targetAction = false

local endcombatWait = xaos.config.scripting.endcombatwait

if auto_hunt then
  send("bclear")
end
if xaos.config.autoempower then
  continueempower()
end

if auto_hunt and statusLeader and statusFollowing then
  expandAlias("auto_hunt")
end

if auto_hunt and not statusFollowing then
  local killTargetTable = string.split(killTarget,",")
  for key,value in pairs(killTargetTable) do
    send("kill "..value)
  end 
end

--If auto_butcher or auto_skin
if auto_butcher then
	send("butcher corpse")
end
if auto_skin then
	send("skin corpse")
end

if auto_hunt then
	--send("get isarti")
end

if xaos.config.scripting.scan_mode and not statusFollowing then
  if xaos.config.scripting.minmana &gt; tonumber(xPrompt.mana) or xaos.config.scripting.minhp &gt; tonumber(xPrompt.hp) then
    tempTimer(2,
      function ()
        if not combat then
          send("rest")
          status.resting=true
        end
      end
    ) 
  else
  
    tempTimer((endcombatWait+.1), 
      function ()
        if not combat and (getEpoch()-lastkilltime) &gt;= endcombatWait then 
          send("scan")
        else
          debugecho(getEpoch()-lastkilltime)
        end
      end
    )
  
  end
  
end

-- Counter
killCount = killCount + 1
lastkilltime = getEpoch()
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Kill when in same room</name>
						<script>
if auto_hunt then
	if not statusFollowing then
    local killTargetTable = string.split(killTarget,",")
    for key,value in pairs(killTargetTable) do
      send("kill "..value)
    end 
    if string.trim(matches[2]) == "Someone" then
      tempTimer(3, 
        function ()
            if not combat then 
              send("scan")
            else
              debugecho(getEpoch()-lastkilltime)
            end
          end)
    end
  else
    
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.*) is here!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Door opening</name>
						<script>if auto_hunt then
	send("unlock south")
	send("unlock north")
	send("unlock east")
	send("unlock west")
	send("unlock up")
	send("unlock down")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>It's locked.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Item notification</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile>C:/Users/Steam Machine/button-35.mp3</mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(\w*Artifact\w*)</string>
							<string>return not hasFocus()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bump into something</name>
						<script>send("bclear")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Alas, you cannot go that way.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Initial Combat Action</name>
						<script>if initialcommandrun &lt; 1 then
  if xaos.config.scripting.initialcommand ~= "" then
  expandAlias(xaos.config.scripting.initialcommand)
  
  end
  if  xaos.config.buffmode then
    if (xaos.buffs.statusBerserk==false and xaos.class.warrior==true and (xaos.config.berserkovercenter or mastermind)) then
      send("berserk")
    end
  end
  
  initialcommandrun=initialcommandrun+1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.* is in awful condition.*\.$|^.* has quite a few wounds.*\.$|^.* looks pretty hurt.*\.$|^.* has some small wounds and bruises .*\.$|^.* is in excellent.*\.$|^.* has some big nasty wounds and scratches,.*\.$|^.* has a few scratches .*\.$)</string>
							<string>^(?![ ]+[&lt;]|^.* is in awful condition.*\.$|^.* has quite a few wounds.*\.$|^.* looks pretty hurt.*\.$|^.* has some small wounds and bruises .*\.$|^.* is in excellent.*\.$|^.* has some big nasty wounds and scratches,.*\.$|^.* has a few scratches .*\.$)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Find Mode</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return xaos.config.scripting.findmode</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Found follow target</name>
							<script>if xaos.party.leader == "Your" and xaos.config.scripting.findmode then
  if string.trim(matches[2]) == string.trim(followTarget) then
    debugecho("found " .. followTarget)
    expandAlias("startscripting")
  end
end

--if xaos.config.scripting.findmode == nil then xaos.config.scripting.findmode = false end
--if xaos.config.scripting.scan_mode == nil then xaos.config.scan_mode = false end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(.*) is here!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>QoL</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Web killer</name>
							<script>send("bclear;kill web")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>holds you in place!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Resting</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>End Rest</name>
							<script>
if status.resting and 
  (tonumber(xPrompt.mana) &gt;= tonumber(xaos.config.scripting.minmana) and tonumber(xPrompt.hp) &gt;= tonumber(xaos.config.scripting.minhp) 
  ) then
  
  send("wake")
  send("stand")
  send("scan")
  status.resting=false
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isXaosPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Start Rest</name>
							<script>status.resting=true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You rest.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Detect Mode</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return detectmode</string>
						<string>return xaos.scripting.area.name == nil</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>start scan</name>
						<script>
isdetectscanning = true
targetFound = false
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Looking around you see:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>isscanning</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isdetectscanning</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>grab scan</name>
							<script>--(?:[aA] |[tT]he |[aA]n )(.*), nearby to the (\w+)\.
--(?:[aA] |[tT]he |[aA]n )(.*), (nearby to the|off in the distance|not far) (\w+)\.

local mob = string.trim(matches[2])
local howfar = matches[3]
local dir = matches[4]


for areaindex,area in pairs(xaos.areas) do
  if table.contains(area.killarray,mob) then
    if not targetFound then
      targetFound=true
      echo("\n")
      expandAlias("setarea " .. area.name)
      expandAlias("startscripting")
    end
  end
end


</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(?:[aA] |[tT]he |[aA]n )(.*), (nearby to the|off in the distance|not far) (\w+)\.</string>
								<string>(?:[aA] |[tT]he |[aA]n )(.*), right here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prompt reset</name>
							<script>isdetectscanning = false
detectmode=false

if not targetFound then

  echo("No Area Found, try being around mobs.")

end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isXaosPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>General combat</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>disarmament</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Disarm</name>
							<script>statusDisarm = true

send("wield "..wielded)
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>DISARMS you</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wield awareness</name>
							<script>statusDisarm = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You hold (.*) in your right hand.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Looting</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Look on no corpse</name>
						<script>send("get all.isarti")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^.* crumbles to dust.$</string>
							<string>explodes into</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Combat Helpers</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bashed</name>
						<script>send("stand")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>sent you sprawling with a powerful bash!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>tripped</name>
						<script>send("stand")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>trips you and you go</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Knocked</name>
						<script>send("stand")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>knocking you to the ground!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hit the ground</name>
						<script>send("stand")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You hit the ground with a </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Script Helpers</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bugout stop</name>
						<script>cecho("data","[ALERT " .. getTime(true,"HH.mm") .. "] Bugout Called\n")



auto_hunt=false
  </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Bugout inputted.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Guarded</name>
						<script>combat=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>jumps to defend you!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Auto Loot</name>
						<script>
if not statusOverloaded then

  --if autoLootlimit == nil then
  --  autoLootlimit = ""
  --end
  --local lootlimit = string.split(autoLootlimit,",")
  
  --if table.size(lootlimit) &lt;= 1 or table.contains(lootlimit,string.trim(matches[2])) then
    if xaos.config.scripting.autoLoot ~= "" then
      local autoLootTable = string.split(xaos.config.scripting.autoLoot,",")
      for key,value in pairs(autoLootTable) do
        send("get " .. value .. " cor")
      end 
    end
    if xaos.config.scripting.autoPickup ~= "" then
      local autoPickupTable = string.split(xaos.config.scripting.autoPickup,",")
      for key,value in pairs(autoPickupTable) do
        send("get " .. value)
      end 
    end
    

  --end
end

if xaos.config.scripting.autoDeathAction ~= "" then
  local autoautoDeathActionTable = string.split(xaos.config.scripting.autoDeathAction,",")
  for key,value in pairs(autoautoDeathActionTable) do
    expandAlias(value)
  end 
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:[aA] |[tT]he |[aA]n )?(.*) has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sap Over</name>
						<script>send("wake")
if statusLeader and statusFollowing and auto_hunt then
  send("hunt " .. followTarget)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The throbbing in your head discontinues.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>pledges</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Renovi Used</name>
						<script>renoviAvailable = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are restored by Order!</string>
							<string>You can not invoke Order yet.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Renovi Available</name>
						<script>renoviAvailable = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are able to invoke the powers of the universe again.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Communication</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Clean Capture</name>
					<script>
--captureOOC("&lt;cadet_blue&gt;","OOC","&lt;gray&gt;",matches[2], "&lt;cadet_blue&gt;", matches[3])
feedManager("[OOC] &lt;gray&gt;" .. matches[2] .. ": &lt;cadet_blue&gt;" .. matches[3]) 
if gagging then
	deleteLine()
end

--createChatConsole()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([\w\s]+) oocs '(.+)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>They tell you</name>
					<script>if gagging then
	deleteLine()
end

captureOOC("&lt;forest_green&gt;","TEL","&lt;gray&gt;",matches[2], "&lt;white&gt;", matches[3])

if xaos.config.beeptell then
  playSoundFile([[C:\Windows\media\Windows Pop-up Blocked.wav]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([\w\s]+) tells you '(.+)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You tell the group</name>
					<script>

captureOOC("&lt;dark_green&gt;","GTL","&lt;gray&gt;","You", "&lt;green&gt;", matches[2])

if gagging then
	deleteLine()
end

-- Cooldown for your beep notification
killTimer("tellTimer")
tellTimer = tempTimer(600, [[ tellCoolDown = false ]])

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You tell the group '(.+)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Beep when not focused</name>
					<script>
-- Initialized in scripts
if not tellCoolDown then
send("reply ^W[ XUI ]^G I'm not currently looking at my screen. Give me a moment.")
tellCoolDown = true
end

-- Cooldown for your beep notification
killTimer("tellTimer")
tellTimer = tempTimer(600, [[ tellCoolDown = false ]])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile>C:/Users/Steam Machine/button-35.mp3</mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w\s]+) tells you '(.+)'</string>
						<string>return not hasFocus()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>You tell them</name>
					<script>captureOOC("&lt;forest_green&gt;","TEL","&lt;gray&gt;","You&gt;"..matches[2], "&lt;white&gt;", matches[3])

if gagging then
	deleteLine()
end

-- Tell beep cooldown
killTimer("tellTimer")
tellTimer = tempTimer(600, [[ tellCoolDown = false ]])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You tell (\w+) '(.*)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tells the group</name>
					<script>

captureOOC("&lt;dark_green&gt;","GTL","&lt;gray&gt;",matches[2], "&lt;green&gt;", matches[3])


if gagging then
	deleteLine()
end

if xaos.config.beeptell then
  playSoundFile([[C:\Windows\media\Windows Pop-up Blocked.wav]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile>C:/Windows/media/Windows Pop-up Blocked.wav</mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([\w\s]+) tells the group '(.*)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>IC Capture</name>
					<script>
captureOOC("&lt;purple&gt;","IC ","&lt;gray&gt;",matches[2], "&lt;purple&gt;", matches[3])
if gagging then
	deleteLine()
end

--createChatConsole()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([\w\s]+) ICs '(.+)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Say Capture</name>
					<script>
captureOOC("&lt;yellow&gt;","SAY","&lt;gray&gt;",matches[2], "&lt;yellow&gt;", matches[3])
if gagging then
	--deleteLine()
end

--createChatConsole()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([\w\s]+) says '(.+)'$</string>
						<string>([\w\s]+) says to \w+ '(.+)'$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>QOL</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Should save prompt</name>
					<script>

savedPrompt = matches[2]

xuicom("Your prompt has been saved.")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Current prompt (.*+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Coin Handler</name>
					<script>-- IIS
-- General QOL
if autodropSilver or statusOverloaded then
	send("drop "..matches[3].." silver")
end


recentGold = recentGold + matches[2] </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You get (\d+) gold and (\d+) silver coins from</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spams</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Parry</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You (.*)parry </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Back Away</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You back away from</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dodge</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You dodge</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Phase</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You phase to avoid</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Advance</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You advance towards a </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Misses you</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>pathetic (.*) misses you</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Reflects off you</name>
						<script>deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>reflects off you</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Weapon Flags</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shocked</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>is shocked by</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Chilled</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>is chilled by</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Posison</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> is poisoned by </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>is burned by</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> is burned by </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Frozen</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> is frozen by </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>LifeSteal</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>draws life from a </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Struck</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> is struck by lightning from </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Loot</name>
					<script>
local person = "Me"
local loot = string.trim(matches[2])

if not string.match(loot," coins") then
  --cecho("data","&lt;white&gt;[LO " .. getTime(true,"HH.mm") .. "] " .. loot .. "\n")
  
  local notimp = {"fragment of the fallen","unaligned soul","coin of the defiler"}
  if table.contains(notimp,loot) then
    feedManager("&lt;white&gt;[LOOT] " .. loot)
    --send("put '" .. loot .. "' '" .. xaos.backpack)
  else
    feedManager("&lt;DodgerBlue&gt;[LOOT] " .. loot)
  end
  
  
  
  table.insert(lootcollector,{time=getTime(true,"HH.mm"),loot=loot})
  
  local notimp = {"fragment of the fallen","unaligned soul"}
  if not table.contains(notimp,loot) then
    --send("put '" .. loot .. "' '" .. xaos.backpack)
  end
  
end

--a fragment of the fallen

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You get (?:a|the|an) (.*) from the (?:glowing )?corpse</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Other Loot</name>
					<script>local person = string.trim(matches[2])
local loot = string.trim(matches[3])

if not string.match(loot," coins") then
  local notimp = {"fragment of the fallen","unaligned soul","coin of the defiler"}
  if table.contains(notimp,loot) then
    feedManager("&lt;white&gt;[LOOT] " .. person .. "-" .. loot)
  else
    feedManager("&lt;DodgerBlue&gt;[LOOT] " .. person .. "-" .. loot)
  end
end

--a fragment of the fallen</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(?:[aA] |[tT]he |[aA]n )?(.*) gets (?:a|the|an) (.*) from the (?:glowing )?corpse</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Artifact Drop</name>
					<script>feedManager("&lt;yellow&gt;[LOOT] Artifact!")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Enjoy your Artifact!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Crafting</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Surplus Low Quality</name>
					<script>
if string.trim(matches[3]) ~= craftingparams["quality"] then
  send("put '" .. matches[2] .. "' back")
else
  if craftfullstatus then
    craftsetiteration = craftsetiteration + 1
  end
end
if craftfullstatus then
  if craftsetiteration &gt; table.size(craftset) then
    craftfullstatus = false
  else
    send(expandAlias(craftset[craftsetiteration]))
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have created (?:a )?(?:pair of)?(.*)\. \((.*) quality\)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Quests</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Start Quest Grab</name>
					<script>startquestgrab=true
if xaos.questextras == nil then
  xaos.questextras = {}
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>offers the following quests:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quest Grab</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return startquestgrab</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Get Name</name>
						<script>
if not string.find(multimatches[2][2],"(Unavailable:") then
  questextraname=string.trim(multimatches[2][2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#ffff00</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>ANSI_COLORS_F{011}_B{IGNORE}</string>
							<string>(.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>6</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Get Exp</name>
						<script>questextraxp=tonumber(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Exp: ([0-9]+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Get Objs</name>
						<script>questextraobjs=string.trim(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Objs: (.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Quest Grab Finish</name>
						<script>if questextraname~="" then
  if table.size(table.n_filter(xaos.questextras, function (oitem) return oitem.name == questextraname end)) == 0 then
    table.insert(xaos.questextras,{name=questextraname,exp=questextraxp,objs=questextraobjs})
  end
end


startquestgrab=false
questextraname=""</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Questmaster find</name>
					<script>
if QMContains(string.trim(matches[2])) then
  questmaster=QMGetName(string.trim(matches[2]))
else
  questmaster="unknown"
end
echo("\n\nQuestmaster set: " .. questmaster .. "\n\n")

send("quest list")
if auto_questTurnIn then
  expandAlias("turnIn")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\(Questmaster\) (.*)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get all the repeatable quests</name>
					<script>if not string.find(multimatches[1][2],"(Unavailable:") then
  send("quest request " .. multimatches[1][2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>   (.*)</string>
						<string>ANSI_COLORS_F{011}_B{IGNORE}</string>
						<string>       Repeatable:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>6</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get all the normal quests</name>
					<script>if not string.find(multimatches[1][2],"(Unavailable:") then
  send("quest request " .. multimatches[1][2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>   (.*)</string>
						<string>ANSI_COLORS_F{011}_B{IGNORE}</string>
						<string>       Optimal Levels:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>6</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Complete Log</name>
					<script>feedManager("[QUEST] Complete: " .. string.trim(matches[2]))
--local firstxp = (last_xp_overflow*100) + last_current_xp
--local nowxp = (xp_overflow*100) + current_xp


--cecho("data","[ Quest ] Complete: " .. string.trim(matches[2]) .. ": " .. string.format("%4.2f",(nowxp-firstxp)/1000) .. "K%\n")

--last_xp_overflow = xp_overflow
--last_current_xp = current_xp</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have completed the quest (.*)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>XP Award</name>
					<script>feedManager("[ XP " .. getTime(true,"HH.mm") .. "] Complete: " .. string.format("%4.2f",tonumber(multimatches[2][2])/1000) .. "K XP")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have been awarded ([0-9]+) XP!</string>
						<string>You have gained ([0-9]+) experience.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Random XP Gain</name>
					<script>echo("--" .. multimatches[1][2] .. " " .. multimatches[3][2] .. "\n")

--if not string.find(multimatches[1][2]," has been defeated!!") then
cecho("data","[ XP " .. getTime(true,"HH.mm") .. "] Gain: " .. string.format("%4.2f",tonumber(multimatches[3][2])/1000) .. "K XP\n")
--end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>2</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*(?&lt;!has been defeated!!))$</string>
						<string>2</string>
						<string>You have gained ([0-9]+) experience</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>5</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hunting</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Quest Left</name>
						<script>feedManager("[ Quest ] " .. killedID .. ": " .. string.trim(matches[2]))


if killedID == "Someone" then
  expandAlias("questeat")
else
  quest_updateobjective(killedID,1)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Amount remaining:(.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Quest Goal Done</name>
						<script>if (getEpoch()-lastcombattime) &lt; 5 then
  feedManager("[ Quest ] " .. killedID .. ": Complete")
end
--quest_updateobjective(killedID,1)
--quest_completeobjective(killedID)

expandAlias("questeat")

--echo("\ngetting next target\n")
if xaos.autoquest.autoquest_currentquest ~="" then
  if killedID == "Someone" then
    tempTimer(3,function () autoquest_go() end)
  else
    autoquest_go()
  end
end </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Goal completed!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Auto Questing Lost</name>
						<script>--get a random target?
if xaos.autoquest.autoquest_currentquest ~="" then
  if not autoquest_switchtargets() then
    
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>No-one around by that name.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quest Status</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>StartCheck</name>
						<script>questgagreadyforreset=true
xaos.quests={}

questinfo = "\n"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Quests you are currently on</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Status Quest Header</name>
						<script>
local curquest = string.trim(matches[2])
local qm = string.trim(matches[3])
tempQuest=curquest
table.insert(xaos.quests,{name=curquest,qm=qm,objectives={}})
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Quest\:  (.*)QuestMaster\:  (.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Status Objctive</name>
						<script>local comp = string.trim(matches[2])
local kill = string.trim(matches[3]) == "Kill"
local name = fixstring(string.trim(matches[4]))
local curcnt = string.trim(matches[5])
local maxcnt = string.trim(matches[6])

for key,value in pairs(xaos.quests) do 
    if value.name==tempQuest then
      table.insert(xaos.quests[key].objectives,
        {
          name=name,
          complete=(comp=="X"),
          current=curcnt,
          max=maxcnt,
          kill=kill,
        })
    end
end

echo (" -- Collected")


</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>5</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>\[([X| ])\]( Kill)?(?: [0-9]+x)?(?: [aA]n | [aA] | [tT]he )?([^\(\[]*)\(?([0-9]*)?\/?([0-9]*)\)?</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Gags</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return questgag ~= nil</string>
							<string>return questgag</string>
							<string>return questgagreadyforreset</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
							<integer>4</integer>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>StartCheck</name>
							<script>questgagreadyforreset=true
deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Quests you are currently on</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gag Quest Description</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^     (.*)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gag Quest Header</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Quest\:  (.*)QuestMaster\:  (.*)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gag Objctive</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>5</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>\[([X ]*)\]( Kill)?(?: [0-9]+x)?([^\(\[]*)\(?([0-9]*)?\/?([0-9]*)\)?</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gag Empty Lines</name>
							<script>deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prompt reset</name>
							<script>questTurnIn=false
questgag=false

echo(tostring(questinfo))

if gagmode then
  statcount = statcount+1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isXaosPrompt()</string>
								<string>return questgagreadyforreset ~= nil</string>
								<string>return questgagreadyforreset</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
								<integer>4</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Score</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Echo Level</name>
					<script>
local lvl = tonumber(string.trim(matches[2]))



currentLevel=lvl
xaos.Level=lvl</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Hero Lvl: ([0-9]+)</string>
						<string> Level\: (.*)\|</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Level Percent</name>
					<script>--Hero Exp:(?:\s*)([0-9]+)/([0-9]+)

local lvlpercent = 100*matches[2]/matches[3]

currentLevelPercent = lvlpercent
xaos.LevelPercent = lvlpercent</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Hero Exp:(?:\s*)([0-9]+)/([0-9]+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ascend Percent</name>
					<script>xaos.ascendcount = tonumber(matches[2])
--Ascend:(?:\s*)([0-9]+)/10000</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Ascend:(?:\s*)([0-9]+)/10000</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get Class</name>
					<script>local primary = string.trim(matches[2])
local reborn = string.trim(matches[3])

--Class: ([^\s\n-]*)(?:-)?(.*)? Religion



xaos.class.primary = primary
xaos.class.reborn = reborn
xaos.class.cleric = false
xaos.class.mage = false
xaos.class.warrior = false
xaos.class.thief = false
xaos.class.barbarian=false

local classtable = {}
classtable = {"warrior","gladiator","knight","berserker","paladin","geomancer"}
if table.contains(classtable,primary) or table.contains(classtable,reborn) then
  xaos.class.warrior = true
end


classtable = {"cleric","bishop","monk","druid"}
if table.contains(classtable,primary) or table.contains(classtable,reborn) then
  xaos.class.cleric = true
end

classtable = {"barbarian","spirit champion","witch doctor","rift binder","journeyman"}
if table.contains(classtable,primary) or table.contains(classtable,reborn) then
  xaos.class.barbarian = true
end

classtable = {"thief","rake","assassin","disciple"}
if table.contains(classtable,primary) or table.contains(classtable,reborn) then
  xaos.class.thief = true
end

classtable = {"mage","invoker","illusionist","elementalist","mentalist","necromancer"}
if table.contains(classtable,primary) or table.contains(classtable,reborn) then
  xaos.class.mage = true
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Class: ([^-]*)(?:-)?(.*)? \|</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tactics</name>
					<script>xaos.tactics = string.trim(matches[2])

if gagmode then
  statcount = statcount+1
  deleteLine()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your current tactics:  (.*)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tactics Gag</name>
					<script>if gagmode then
  deleteLine()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Available tactical options are:</string>
						<string>        default:  Relies on the style to determine in-room movements.</string>
						<string>     aggressive:  Chases opponent regardless.</string>
						<string>       sentinel:  Will not back away but will still advance.</string>
						<string>        retreat:  Actively avoids opponent's range.</string>
						<string>        brawler:  (modifier) Switches to closest opponent if current is out of range.</string>
						<string>     stationary:  Does not advance or retreat, remains completely stationary.</string>
						<string>NOTE:  While the rest are mutually exclusive, you can mix brawler with any of them.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Fighting Style</name>
					<script>xaos.fightingstyle = string.trim(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are currently fighting in (.*) style.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Frags</name>
					<script>if xaos.currency == nil then
  xaos.currency = {}
end
xaos.currency.frags=string.trim(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Frags: ([0-9]+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Trait Grab</name>
					<script>xaos.traits = string.gsub(string.trim(multimatches[2][2]),",","")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\|-Traits</string>
						<string>\| (.*) \|</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Name</name>
					<script>xaos.charactername = string.trim(matches[2])

--On Login
if initialload then
  loadprofile(true)
  initialload=false
  enableTimer("User Timer")
  expandAlias(xaos.config.reconnectaction)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Name: ([^-\s]+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Items and Weight</name>
					<script>local itemcur = tonumber(string.trim(multimatches[2][2]))
local itemmax = tonumber(string.trim(multimatches[2][3]))
local eqcur = tonumber(string.trim(multimatches[1][2]))
local eqmax = tonumber(string.trim(multimatches[1][3]))

--echo(itemcur .. " " .. itemmax  .. " " .. eqcur  .. " " .. eqmax)

local ratio = .95

if (itemcur/itemmax) &gt; ratio then
  feedManager("Items dangerously full, could miss an artifact: " .. math.floor(itemmax*ratio),true)
  statusOverloaded=true
elseif (eqcur/eqmax) &gt; ratio then
  feedManager("Weight dangerously full, could miss an artifact: ".. math.floor(eqmax*ratio),true)
  statusOverloaded=true
else
  statusOverloaded=false
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\| Eq Weight:(?:\s+)([0-9]+)/([0-9]+)</string>
						<string>\|     Items:(?:\s+)([0-9]+)/([0-9]+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get Hero Points</name>
					<script>xaos.heropoints=tonumber(string.trim(matches[2]))</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Hero Points: (.*) \|</string>
						<string>You gain (?:.*) hero points, totalling (.*).</string>
						<string>You feel empowered! \((.*) hero points remaining\).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Race Grab</name>
					<script>xaos.characterrace = string.lower(string.trim(matches[2]))</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Race: (.*) Class: </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Score Grab</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return scoregrab</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Start</name>
						<script>startscoregrab=true
debugwrite("score grab on")
moveCursor(0,getLineNumber()-1)
deleteLine()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>/(.*)\\</string>
							<string>\| Hero Lvl: </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>In Score Grab</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return startscoregrab</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gag Score</name>
							<script>echo("--del")
deleteLine()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^\|</string>
								<string>\-----------------------------------------------------------------------------------/</string>
								<string>/(.*)\\</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>0</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Score Grab Reset</name>
							<script>startscoregrab=false
scoregrab=false
debugwrite("score grab reset")

if gagmode then
  statcount = statcount+1
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isXaosPrompt()</string>
								<string>return startscoregrab</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Equipment</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Start</name>
					<script>startequipmentgrab=true
held=""
currentequipment = {}</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are wearing</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Equipment</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return startequipmentgrab</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Grab Gear</name>
						<script>
--&lt;(worn on \w*|worn about \w*|worn around \w*|floating nearby|held (?:in|with) (?:right|left|both) hands?)&gt;  \[[\w\s]*\](?: \(Bound\))?(?: \(Artifact\))?(?: \(Glowing\))?(?: \(Humming\))?(?: \(Spiked\))?(?: \(Visored\))? (?:an|the|a)?(.*)

local wear = string.trim(matches[2])
local item = string.trim(matches[3])

item = string.gsub(item,"'s","")
--item = string.gsub(item,"'","")
item = string.gsub(item," of "," ")
item = string.gsub(item," the "," ")
--item = rex.gsub(item,[['(.*)']],"")
--item = rex.gsub(item,[["(.*)"]],"")
item = string.gsub(item,"'","")
item = string.gsub(item,"\"","")

item = string.trim(item)

if wear == "held in right hand" or wear == "held with both hands" then
  wielded = item
end

if wear == "held in left hand" then
  held = item
end

if wear == "worn about body" then
  xaos.backpack = item
end
if equipmentgrab then
table.insert(xaos.currentequip,{location=wear,item=item})
echo("  -- seteq")
end
table.insert(currentequipment,{location=wear,item=item})
echo("  -- grabbed")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>&lt;(worn on \w*|worn about \w*|worn around \w*|floating nearby|held (?:in|with) (?:right|left|both) hands?)&gt;  \[[\w\s]*\](?: \(Bound\))?(?: \(Artifact\))?(?: \(Glowing\))?(?: \(Humming\))?(?: \(Spiked\))?(?: \(Visored\))? (?:an|the|a)?(.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt reset</name>
						<script>equipmentgrab=false
startequipmentgrab=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
							<string>return startequipmentgrab</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Skills</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Start Grab</name>
					<script>grabskills=true
xaos.skills = {}
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>---------------------------------- Uncategorized ----------------------------------</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Grabbing</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return grabskills</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt reset - Skills</name>
						<script>grabskills=false
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Header</name>
						<script>          </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\s{10}(.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Skill</name>
						<script>if grabskills then
  local index = 0
  
  local k
  for k=1,7,3 do
    
    if matches[k] ~= nil then
      local temp = string.gsub(matches[k+1],"|","")
      temp = string.trim(temp)
      table.insert(xaos.skills,string.lower(temp))
    end
    
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([^0-9%]+)([0-9]+)\%</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Spells</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Start Grab</name>
					<script>grabspells=true
xaos.spells = {}
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>-=regular=-</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Grabbing</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return grabspells</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt reset - Spells</name>
						<script>grabspells=false
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Header</name>
						<script>          </script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\s{10}(.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Spell</name>
						<script>
local k
for k=1,7,3 do
  
  if matches[k] ~= nil then
    local temp = matches[k+1]
    temp = string.trim(temp)
    table.insert(xaos.spells,string.lower(temp))
  end
  
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([^0-9]+)([0-9]+)\%  (?:[0-9]+)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Party</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Party Grab</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return partygrab</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Member</name>
						<script>--echo(" -- grabbed")

table.insert(curpartystatus.members,
{
  name = string.trim(matches[5]),
  hp = matches[2],
  mana = matches[3],
  move = matches[4],
  missingcount = 0,
  charmie = rex.match(matches[5],[[^([aA] |[tT]he |[aA]n )]]) ~= nil
})

if partystatusgrab then
  deleteLine()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[0-9]+\) ([0-9 ]{1,3})% ([0-9 ]{1,3})% ([0-9 ]{1,3})% (.*) (?:attacking:)</string>
							<string>[0-9]+\) ([0-9 ]{1,3})% ([0-9 ]{1,3})% ([0-9 ]{1,3})% (.*)(?: ) (?:\(Guarding\))</string>
							<string>[0-9]+\) ([0-9 ]{1,3})% ([0-9 ]{1,3})% ([0-9 ]{1,3})% (.*) (?:\(Guarded by\))</string>
							<string>[0-9]+\) ([0-9 ]{1,3})% ([0-9 ]{1,3})% ([0-9 ]{1,3})% (.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Missing</name>
						<script>--echo(" -- grabbed")

local missingcount = 0
local findmember = table.n_filter(xaos.party.members,function (item) return item.name == matches[2] end)
--debugecho(table.size(findmember))
if table.size(findmember) ~= 0 then
  missingcount = findmember[1].missingcount
end
table.insert(curpartystatus.members,
{
  name = string.trim(matches[2]),
  hp = "??",
  mana = 0,
  move = 0,
  missingcount=missingcount+1,
  charmie = rex.match(matches[2],[[^([aA] |[tT]he |[aA]n )]]) ~= nil
})
--debugecho(missingcount)
if xaos.party.leader == "Your" and matches[2] ~= "someone" and xaos.config.scripting.findmode and missingcount &gt; 0 then
  --playSoundFile([[C:\Windows\media\chimes.wav]])
  if followTarget == "" then
    debugecho("we lost " ..  matches[2])
    lastkillTarget=killTarget
    expandAlias("fhunt " .. matches[2])
  end
end
if partystatusgrab then
  deleteLine()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[0-9]+\) ---- ---- ---- (.*)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt reset</name>
						<script>partygrab=false
partystatusgrab=false

xaos.party = curpartystatus
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Start Grab</name>
					<script>partygrab=true
curpartystatus = {
  leader = string.trim(matches[2]),
  members = {}
}

if partystatusgrab then
  deleteLine()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.*)\'s party:</string>
						<string>^(Your) Party:</string>
						<string>^(.*) party:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Not in a Party</name>
					<script>if partystatusgrab then
  deleteLine()
  partystatusgrab=false
end

xaos.party = {
  leader = "Your",
  members = {}
}</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are not currently in a party.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Grouping</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Follows you</name>
						<script>--send("party form")
--send("party invite "..matches[2])
--statusFollowing = false

if not isInParty(string.trim(matches[2])) and yourParty() then
  send("party form")
  send("party invite "..matches[2])
  if xaos.config.autoguard then
    send("guard " .. matches[2])
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.+) now follows you.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You follow</name>
						<script>--statusFollowing = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You now follow (.*).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You stop following</name>
						<script>--statusFollowing = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You stop following (.*).</string>
							<string>^You already follow yourself.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Invited</name>
						<script>if xaos.config.autojoin then 
  send("party join "..matches[2])
end
--followTarget = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(\w+) has invited you to join the party.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Wants to join</name>
						<script>if yourParty() then
  send("party invite " .. matches[2])
  if xaos.config.autoguard then
    send("guard " .. matches[2])
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>(.*) wants to join</string>
							<string>^\s{0,1}(\w+) has requested to join your party\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Party Beckon</name>
						<script>local becktarget = string.trim(matches[2])
echo("\n" .. becktarget .. " is asking to follow\n")
if isInParty(becktarget) then
  if isLeader(becktarget) then
    send("follow self")
    expandAlias("followleader")
  else
    send("follow " .. becktarget)
    expandAlias("overrideleader " .. becktarget)
  end
  send("tell " .. becktarget .. " Following you")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) beckons for you to follow.</string>
							<string>^(.*) beckons you to follow.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Reldi QOL</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>party</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>partyguard</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Guard Success</name>
								<script>local text = matches[1]
feedManager(text)
send("gtell ^W[UI]^R:^G".. tostring(matches[2]).. " has been GUARDED.^^")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}You will now guard (.*) from attackers.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Unguard Success</name>
								<script>local text = matches[1]
feedManager(text)
send("gtell ^W[UI]^R:^G".. tostring(matches[2]).. " has been UNGUARDED.^^")</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}You will stop guarding (.*).$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Asked for Guard</name>
								<script>if yourParty() then
  local target = matches[2]
  local theText = "guard " .. target
  send (theText)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#0000ff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}(.*) tells the group '(G|g)(U|u)(A|a)(R|r)(D|d)'$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>partyheal</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Asked for Heal</name>
								<script>--You can change the healVar with the alias.
			local target = matches[2]
			local healVar = qolWithReldi.healword or "heal"
			local theText = "C " .. healVar .." " .. target
			send (theText)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#00aaff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}(.*) tells the group '(H|h)(E|e)(A|a)(L|l)'$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>partyrescue</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rescue Success</name>
								<script>local text = matches[1]
			feedManager(text)
			local theText = "gtell ^W[UI]^R:^G".. tostring(matches[2]).. " has been successfully rescued.^^"
			send (theText)</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}You rescue (.*)!$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Asked for Rescue</name>
								<script>if yourParty() then
  local target = matches[2]
  local theText = "rescue " .. target
  send (theText)
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#00aaff</mFgColor>
								<mBgColor>#000000</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^\s{0,1}(.*) tells the group '(R|r)(E|e)(S|s)(C|c)(U|u)(E|e)'$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Buffs</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Affects</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Start Check Buffs</name>
						<script>affectgrab=true
for key,value in pairs(xaos.buffs) do
  xaos.buffs[key] = false
end

xaos.bufflist = {}

if gagmode then
  deleteLine()
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are affected by the following:</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - center</name>
						<script>xaos.buffs.statusCenter=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Skill: discipline        modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - berserk</name>
						<script>xaos.buffs.statusBerserk=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string> Skill: berserk           modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - resolve</name>
						<script>xaos.buffs.statusResolve=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Skill: resolve           modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - warcry</name>
						<script>xaos.buffs.statusWarcry=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Skill: warcry            modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - bless</name>
						<script>xaos.buffs.statusBless=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Spell: bless             modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Affects - trance</name>
						<script>xaos.buffs.statusTrance=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Skill: trance            modifies</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>GetList</name>
						<script>table.insert(xaos.bufflist,string.trim(matches[2]))
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:\s*)(?:Skill:|Spell:| misc:|Effect:) (.*) (modifies|grants|makes|adds|gives|will)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>AffectGrabs</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return affectgrab</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>GetList</name>
							<script>if gagmode then
  deleteLine()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(?:Skill:|Spell:| misc:|Effect:)</string>
								<string>(modifies)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prompt reset</name>
							<script>affectgrab=false

if gagmode then
  statcount = statcount+1
else
  --echo(checkbuffs().missing)
  tempTimer(.1,function() echo(checkbuffs().missing) end)
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>return isXaosPrompt()</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>BuffMode</name>
					<script>--BuffMode is for combat buffs that cause delay.  If you are following someone, turning this off will help
--you keep up.</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return xaos.config.buffmode</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Defeated</name>
						<script>local mastermind = table.contains(string.split(xaos.traits," "),"mastermind")

if (xaos.buffs.statusBerserk==false and xaos.class.canberserk() and (xaos.config.berserkovercenter or mastermind)) then
  send("berserk")
end
if (xaos.buffs.statusBless==false and xaos.class.canbless()) then
  send("cast bless")
end
if (xaos.buffs.statusWarcry==false and xaos.class.canwarcry()) then
  send("warcry")
end
if (xaos.buffs.statusResolve==false and xaos.class.canresolve() and (not xaos.config.berserkovercenter or mastermind)) then
  send("resolve")
end
if (xaos.buffs.statusCenter==false and xaos.class.cancenter() and (not xaos.config.berserkovercenter or mastermind)) then
  send("center")
end
if (xaos.buffs.statusTrance==false and xaos.class.cantrance()) then
  send("trance")
end
if (xaos.buffs.statusSpellSlip==false and (xaos.class.isclass("rake"))) then
  send("cast 'spell slip")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>has been defeated!!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Combat true</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string> is in awful condition</string>
							<string>has some big nasty wounds and scratches</string>
							<string>has quite a few wounds </string>
							<string>is in excellent condition </string>
							<string>looks pretty hurt</string>
							<string>has some small wounds and bruises </string>
							<string>No way!  You are still fighting!</string>
							<string>You are still in combat!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Berserk Drop</name>
						<script>if combat then 
  send("berserk")
end
xaos.buffs.statusBerserk=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel your pulse slow down.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Berserk Fail</name>
						<script>if combat then 
  send("berserk")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your pulse speeds up, but nothing happens.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Berserk Success</name>
						<script>xaos.buffs.statusBerserk=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your pulse races as you are consumed by rage!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Warcy Drop</name>
						<script>if (xaos.buffs.statusWarcry==false and (xaos.class.primary=="knight" or xaos.class.primary=="berserker")) then
  send("warcry")
end
xaos.buffs.statusWarcry=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The effects of the warcry die.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Warcry Fail</name>
						<script>send("warcry")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You couldn't wrap your tongue around those yells.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>warcry success</name>
						<script>xaos.buffs.statusWarcry=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You yell out a glorious warcry!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bless drop</name>
						<script>xaos.buffs.statusBless = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel less righteous.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bless Success</name>
						<script>xaos.buffs.statusBless=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel righteous.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Your fury subsides.</name>
						<script>if combat then
send("fury")
else
statusFuryTry = false
end
xaos.buffs.statusFury=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your fury subsides.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You fail to build upon the rage.</name>
						<script>if combat then
send("fury")
else
statusFuryTry = false
end
xaos.buffs.statusFury=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You fail to build upon the rage.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You shudder with barely controlled rage!</name>
						<script>xaos.buffs.statusFury=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You shudder with barely controlled rage!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Resolve Drop</name>
						<script>send("resolve")
xaos.buffs.statusResolve=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your incredible resolve fades!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Resolve Fail</name>
						<script>send("resolve")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your resolve fails you!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Resolve Success</name>
						<script>xaos.buffs.statusResolve=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You are filled with unshakeable resolve!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>center successs</name>
						<script>xaos.buffs.statusCenter=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your senses sharpen and time slows.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>center drop</name>
						<script>xaos.buffs.statusCenter=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lose your focus.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trance Drop</name>
						<script>xaos.buffs.statusTrance=false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You end your trance.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trance Success</name>
						<script>xaos.buffs.statusTrance=true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You enter a deep trance.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rake</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prepared to spell slip</name>
							<script>statusSpellSlip = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You prepare yourself for dodging.</string>
								<string>You are already prepared...</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Spell slip fall</name>
							<script>statusSpellSlip = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You lose the edge.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Hero Empowers</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hero Empowers</name>
					<script>empowerincrease()

if fullautoempower then
continueempower()
else
  
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You feel empowered! \((.*) hero points remaining\).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Start Empower Grab</name>
					<script>startempowergrab=true
xaos.heroempowers={}

if gagmode then
  deleteLine()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Available empowerments:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Empower Grab</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return startempowergrab</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Grab Empower</name>
						<script>for k=1,table.size(matches),3 do
  local ind = (k-1)
  --echo(ind)
  local cost = string.trim(matches[2+ind])
  local name = string.trim(matches[3+ind])
  local current = (cost-40)/40
  
  table.insert(xaos.heroempowers,{cost=cost,name=name,current=current})
end

if gagmode then
  deleteLine()
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([0-9]+)\s+(?:[-0-9]+)  (.{22})</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt Finish</name>
						<script>startempowergrab=false
table.sort(xaos.heroempowers,function (e1,e2) return tonumber(e1.cost) &lt; tonumber(e2.cost) end)

if gagmode then
  statcount = statcount+1
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hero Empower Extra Gag</name>
						<script>if gagmode then
  deleteLine()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Cost  Empower   </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Beta</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return xaos.config.betamode</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sorting</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return sortingmode</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sorting</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return issorting</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gear Sorting</name>
							<script>local quality = string.trim(multimatches[1][2])
local cur = tonumber(string.trim(multimatches[2][2]))
local max = tonumber(string.trim(multimatches[2][3]))

itemwordcount =0

--echo (100*cur/max)
if quality=="artifact" then
  --send("e;drop '" .. lastid .. ";w;clear")
  send("put '" .. lastid .. "' pink ")
elseif quality=="epic" then
  if (100*cur/max) &lt;= 60 then
    send("put '" .. lastid .. "' gold")
  else
    --send("drop '" .. lastid)
    --send("e;drop '" .. lastid .. ";w;clear")
    send("put '" .. lastid .. "' brown ")
  end
elseif quality == "supreme" then
  if (100*cur/max) &lt;= 60 then
    send("put '" .. lastid .. "' silver")
  else
    --send("e;d;drop '" .. lastid .. ";u;w;clear")
    send("put '" .. lastid .. "' maroon")
  end
else
  send("put '" .. lastid .. "' sheer")
end
expandAlias("id " .. lastid)
--tempTimer(3,function () expandAlias("id " .. lastid) end)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Quality:  (.*)</string>
								<string>Enchantment: (.*)/(.*)  </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>End Sort</name>
							<script>issorting=false
send("look")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile>C:/Windows/media/tada.wav</mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are not carrying that.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Item Bound</name>
							<script>issorting=false
send("look")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You can't drop a bound item.</string>
								<string>You can not mix bound and unbound items.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Out of Space</name>
							<script>--issorting=false
send("bclear;e;d;w;get spool;make new cloth backpack;size giant;source 2 sew;color " .. matches[2] .. ";proceed")
send("e;u;w;drop " .. matches[2])
expandAlias("id " .. lastid)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile>C:/Windows/media/chord.wav</mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>(?:.*) won\'t fit, a (.*) backpack hasn't enough room</string>
								<string>A (.*) backpack has reached its maximum items limit</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Cant put container in backpack</name>
							<script>issorting=false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile>C:/Windows/media/chord.wav</mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Putting (.*) into a (.*) backpack would be bad.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ran out of mana</name>
							<script>send("sleep")
tempTimer(20,function () send("wake");expandAlias("id " .. lastid) end)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You don't have enough mana.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>None there try next word</name>
							<script>issorting=false
itemwordcount = itemwordcount + 1
send("look")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>I see no (?:.*)?here.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Look an item!</name>
						<script>--t 
local item = string.trim(multimatches[1][2])

if rex.match(item,[[A (?:\w*) backpack lies here]]) == nil then

  item = rex.gsub(item,[[^(A |The )]],"")
  item = rex.gsub(item,[[lies here\.$]],"")
  item = rex.gsub(item,[[on the ground here\.$]],"")
  item = string.trim(item)
  --debugecho(item)
  local pattern = "(\\w*)"
  for i=1,itemwordcount do 
    pattern= "(?:\\w*) " .. pattern
  end
  debugecho(pattern)
  item = rex.match(item,pattern)
  issorting = true
  debugecho(item)
  if item ~= nil and item ~= "" then
    send("clear")
    send("get all." .. item)
    expandAlias("id " .. item)
  end
  
  

end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>\[(?:.*)\] (?:\(Magical\) )?(?:\(Glowing\) )?(?:\(Humming\) )?(?:\(Visored\) )?(?:\(Spiked\) )?(.*)</string>
							<string>return not issorting</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>gostEnchanting</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName>gostEnchanting</packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>gostEnchanting</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>doneEnchant</name>
							<script>enchCount=enchCount+1
currentlyEnchanting = false
send("show")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>table's binding field fades away.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>applyStab</name>
							<script>send("apply stab")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile>C:/Windows/media/chimes.wav</mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>shiver and emit a high pitch whine!</string>
								<string>You notice a flux within the enchantments upon</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>applyHarm</name>
							<script>send("apply harm")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The calibration required exceeds a</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Check Level</name>
							<script>local current = tonumber(string.trim(multimatches[1][2]))
local max = tonumber(string.trim(multimatches[1][3]))
local cost = tonumber(string.trim(multimatches[2][2]))

if (not currentlyEnchanting) then

  if ((current+cost) &gt; max) then
   cecho("&lt;red&gt;  Over enchant")
   if enchanting.multi then
     send("done")
     send("drop '" .. enchantTarget .. "'")
     send("enchant '" .. enchantTarget .. "' table")
     startEnchant()
   end
   
  else
    currentlyEnchanting=true
    if(enchCount&lt;tableEnchant[tostring(switchCount)].count)then
      if not enchanting.manual then
  	   tempTimer(.5,[[send("pro")]])
      end
      --enchCount=enchCount+1
    else
  	  switchCount=switchCount+1
  		while(tableEnchant[tostring(switchCount)].count==0)do
  	    switchCount=switchCount+1
  		end
  	  if(tableEnchant[tostring(switchCount)])then
  			send("enchant "..tableEnchant[tostring(switchCount)].enchant)
        echo("\n" .. "Ready to Continue." .. "\n")
        enchCount=0
  	    if not enchanting.manual then
          tempTimer(.5,[[send("pro")]])
        end
        --enchCount=1
  		else
  			send("show")
  			send("done")
        cecho("&lt;green&gt;  Complete")
        
        --Next
        if enchantContinue then
         send("drop '" .. enchantTarget .. "'")
         --send("done")
         send("enchant '" .. enchantTarget .. "' table")
         startEnchant()
        end
  	  end
  	end	
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>6</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Enchantment level:  (.*)/(.*)</string>
								<string>Cost:  (.*)</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>missing spark</name>
							<script>currentlyEnchanting = false
send("disenchant ember")
send("disenchant ember")
send("disenchant ember")
send("disenchant ember")
send("disenchant ember")
tempTimer(2,[[send("pro")]])

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are missing 1x a tiny spark of magic</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>de focus</name>
							<script>
send("de focus")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A small focus of magic flares brilliantly as the magic erupts from within!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>XUI</name>
				<script>--Created by Marchosias
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return mysettings.UIType == "XUI"</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Prompt eater</name>
					<script>if not mysettings.features.msdp then

  hpbar:setValue(tonumber(xPrompt.hp), 100, nil)
  hpbar:setText("&lt;center&gt;" .. string.format("%2.1f",xPrompt.hp) .. "%" .. "&lt;/center&gt;")


  manabar:setValue(tonumber(xPrompt.mana), 100, nil)
  manabar:setText("&lt;center&gt;" .. string.format("%2.1f",xPrompt.mana) .. "% &lt;/center&gt;" )

  mvmbar:setValue(tonumber(xPrompt.move), 100, nil)
  mvmbar:setText("&lt;center&gt;" .. string.format("%2.1f",xPrompt.move) .. "%" .. "&lt;/center&gt;")
end

current_xp = tonumber(xPrompt.exp)

xaos.fightingstyle = xPrompt.style
if not mysettings.showprompt then
  deleteLine()
end

  
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isXaosPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Damage Calc</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>End Round</name>
						<script>if (RoundCalc.mine.damage&gt;0 or RoundCalc.opp.damage&gt;0) then
  local tempdamage = "&lt;cyan&gt;" .. "My Dam: " .. RoundCalc.mine.damage .. ", Opp Dam: " .. RoundCalc.opp.damage
  tempTimer(.01,function() cecho(tempdamage) end)

  TotalCalc.Combine(RoundCalc)
  RoundCalc.Clear()  
  --TotalCalc.Display()
end
--
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>return isXaosPrompt()</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Damage</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Parry</name>
							<script>RoundCalc.mine.parry = RoundCalc.mine.parry + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You (.*)parry </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dodge</name>
							<script>RoundCalc.mine.dodge = RoundCalc.mine.dodge + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You dodge</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Misses you</name>
							<script>RoundCalc.mine.miss = RoundCalc.mine.miss + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>pathetic (.*) misses you</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Reflects off you</name>
							<script>RoundCalc.mine.reflect = RoundCalc.mine.reflect + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>reflects off you</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Damage</name>
							<script>--^Your \w+(?: critical)?(?: precise)?(?: propelled)? (.*) (?:misses|nicks|lightly skins|skins|lightly grazes|grazes|scratches|scrapes|hits|strikes|wounds|injures|mauls|scars|maims|mangles|destroys|decimates|guts|leaves GASHES|forever SCARS|DEMOLISHES|MASSACRES|DEVASTATES|does UNSPEAKABLE|SPLATTERS|-ANNIHILATES-|-=OBLITERATES=-|-=EVICERATES=-|-=LAYS WASTE=-) .*\((\d+) dam\)$
local damcount = matches[3]
local damtype = matches[2]

if damcounts == nil then
  damcounts = {}
end
if damcounts[damtype] == nil then
  damcounts[damtype]=0
end
damcounts[damtype]=damcounts[damtype]+damcount
--debugecho(RoundCalc.mine.damage)
--debugecho(RoundCalc.mine.hit)
RoundCalc.mine.damage = tonumber(RoundCalc.mine.damage) + tonumber(damcount)
RoundCalc.mine.hit = tonumber(RoundCalc.mine.hit) + 1

--local strlen = string.len(matches[1])
local strlen = tonumber(mainWindowWrap) - string.len(matches[1]) - string.len(damcount) - 3 --3 for scroll bar
if strlen &lt; 0 then --word wrap
  
end
local spacer = ""
for i=1,strlen do
  spacer = spacer .. " "
end
cecho("&lt;yellow&gt;" .. spacer .. damcount)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your \w+(?: critical)?(?: precise)?(?: propelled)? (.*) (?:misses|nicks|lightly skins|skins|lightly grazes|grazes|scratches|scrapes|hits|strikes|wounds|injures|mauls|scars|maims|mangles|destroys|decimates|guts|leaves GASHES|forever SCARS|DEMOLISHES|MASSACRES|DEVASTATES|does UNSPEAKABLE|SPLATTERS|-ANNIHILATES-|-=OBLITERATES=-|-=EVICERATES=-|-=LAYS WASTE=-) .*\((\d+) dam\)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Phase</name>
							<script>RoundCalc.mine.phase = RoundCalc.mine.phase + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You phase to avoid</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Block</name>
							<script>RoundCalc.mine.block = RoundCalc.mine.block + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You block </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Misses</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Parry</name>
							<script>RoundCalc.opp.parry = RoundCalc.opp.parry + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>parries your </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dodge</name>
							<script>RoundCalc.opp.dodge = RoundCalc.opp.dodge + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>dodges your </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Misses you</name>
							<script>RoundCalc.opp.miss = RoundCalc.opp.miss + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>pathetic (.*) misses you</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Reflects off you</name>
							<script>RoundCalc.opp.reflect = RoundCalc.opp.reflect + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>reflects off you</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Block</name>
							<script>RoundCalc.opp.block = RoundCalc.opp.block + 1
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string> blocks your </string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Incoming Damage</name>
							<script>RoundCalc.opp.damage = RoundCalc.opp.damage + tonumber(matches[2])
RoundCalc.opp.hit = RoundCalc.opp.hit + 1


local strlen = tonumber(mainWindowWrap) - string.len(matches[1]) - string.len(matches[2]) - 3 --3 for scroll bar
local spacer = ""
for i=1,strlen do
  spacer = spacer .. " "
end
cecho("&lt;red&gt;" .. spacer .. matches[2])
--cecho("&lt;red&gt;   " .. matches[2])</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^.+ your .+\. \((\d+) dam\)$</string>
								<string>^.+ you\. \((\d+) dam\)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Phase</name>
							<script>-- debugecho("phased")
RoundCalc.opp.phase = RoundCalc.opp.phase + 1</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>phases to avoid your</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Heals</name>
						<script>local strlen = tonumber(mainWindowWrap) - string.len(matches[1]) - string.len(matches[2]) - 3 --3 for scroll bar
local spacer = ""
for i=1,strlen do
  spacer = spacer .. " "
end
cecho("&lt;green&gt;" .. spacer .. matches[2])

--cecho("&lt;green&gt;   " .. matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(?:.*)\(([0-9]+) heal\)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Prompt Script - End</name>
					<script>if statcount &gt;= maxstatcount then
  gagmode = false
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>return isXaosPrompt()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>UIPulse</name>
				<script>parsePulse(string.trim(matches[2]))
deleteLine()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>UI_Pulse_Start\[(.*)\]UI_Pulse_Stop</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Specific Loot</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Glowing Humming Loot!</name>
				<script>if corpsedigging then
send("get '" .. fixstring(matches[3]) .. "' cor")
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\[(.*)\] \(Glowing\) \(Humming\) (?:a |an |the )(.*) (?:of)</string>
					<string>\[(.*)\] \(Humming\) (?:a |an |the )(.*) (?:of)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Torn Weave Robe</name>
				<script>if corpsedigging then
--send("get '" .. fixstring(matches[3]) .. "' cor")
send("get torn cor;put torn back")
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>[large   ] a torn weave robe</string>
					<string>[medium  ] a torn weave robe</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>echo start look in corpse</name>
				<script>
--A Sorcerer's robe 
if string.trim(matches[2]) ~= "A surplus backpack" then
corpsedigging=true
debugwrite("--digging")
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>(.*) holds:</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Look in corpse</name>
				<script>send("l i corpse")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>has been defeated!!</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Gains</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Spells Start</name>
				<script>gainmode = "spells"</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Spell gains:</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>New trigger</name>
				<script>gainmode="uncategorized"</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>-------------------------------------- Uncategorized skills --------------------------------------</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Prompt reset</name>
				<script>gainmode=""</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>return isXaosPrompt()</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>All</name>
				<script>
if gainmode=="spells" then
  for i=2,12,3 do
    --echo(string.trim(matches[i]))
    send("gain " .. string.trim(matches[i]))
  end
  
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>([^0-9]+)([0-9]+)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Archive, for future use</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Data</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>counting</name>
					<script>enemyCount = enemyCount + 1</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CountUp</name>
						<script>enemyCount = enemyCount or 0
enemyCount = enemyCount + 1


debugc("EnemyCount iterated, currently at "..enemyCount)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>\[\s+\w+\s\w+\s+\] </string>
							<string>\[\s+\w+\s+\] </string>
							<string>\[\s+\w+\s\w+\s+\w+\s\] </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CountDown</name>
						<script>enemyCount = enemyCount or 0
enemyCount = enemyCount -1


debugc("EnemyCount iterated, currently at "..enemyCount)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>has been defeated</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Count Reset</name>
						<script>enemyCount = 0


debugc("EnemyCount iterated, currently at "..enemyCount)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\[Exits\: \w+ \] </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>level collection</name>
				<script>

--if leveltotals[xaos.Level] == nil then
--  leveltotals[xaos.Level] = 0
--else
--  leveltotals[xaos.Level] = leveltotals[xaos.Level] + 1
--end

--local currentmax = tonumber(xaos.Level)*2
--if (tonumber(leveltotals[xaos.Level]) &gt;= tonumber(currentmax)) then
--  cecho("data","[ Alert ] You gained a level! - " .. xaos.Level .. " - " .. xaos.LevelPercent .."\n")
--end
--expandAlias("scoreeat")

xaos.ascendcount=xaos.ascendcount+1
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You gained a level!</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Highest damage collection</name>
				<script>--echo(tonumber(matches[2]))
if highestdam == nil then
  highestdam = tonumber(matches[2])
elseif tonumber(matches[2]) &gt; tonumber(highestdam) then
  highestdam = tonumber(matches[2])
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Your .*\. \((\d+) dam\)$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Temporary</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Scrollspam</name>
					<script>if scrollSpam then
  send("buy giant;rec giant")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You are already mighty as a titan!</string>
						<string>You mispronounce a syllable.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Fcuking wizi imms</name>
				<script>


captureOOC("&lt;cadet_blue&gt;","OOC","&lt;gray&gt;","Wizi Imm", "&lt;cadet_blue&gt;", matches[2])


if gagging then
	deleteLine()
end
--createChatConsole()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>An immortal oocs '(.+)'$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Buffs</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mentalist</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Combat Ease</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>divided will tracking</name>
							<script>divided = true

autoMode = "mentalist debuff"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You have divided the will</string>
								<string>will appears to already be divided.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Reset on death</name>
							<script>divided = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>has been defeated</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Critical</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Third Eye False</name>
							<script>buffThirdEye = false</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Your third eye closes.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Third Eye True</name>
							<script>buffThirdEye = true</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are already under that power.</string>
								<string>The third eye opens and your sight extends!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Thief</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Warrior stuff</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Warcry true</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You yell out a glorious warcry!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Determination on</name>
						<script>determ = true
determValue = matches[2]</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You will absorb damage as long as you have (\d+) mana or more.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Determination false</name>
						<script>determ = false
determValue = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Determination turned off.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>You are centered</name>
						<script>statusCenter = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your senses sharpen and time slows.</string>
							<string>You are as focused as you can be.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Not centered</name>
						<script>statusCenter = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You lose your focus.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Debuffs</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Silenced</name>
					<script>status.silence = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have been cursed to silence.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Not silenced</name>
					<script>status.silence = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your voice returns to you.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>Xaos</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
			<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>Full Update</name>
				<script>updatestats()
copytoprofile()</script>
				<command></command>
				<packageName></packageName>
				<time>00:05:00.000</time>
			</Timer>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>xaos-ui-0120</name>
				<script></script>
				<command></command>
				<packageName>xaos-ui-0120</packageName>
				<time>00:00:00.000</time>
				<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
					<name>xaos-ui-0120</name>
					<script></script>
					<command></command>
					<packageName>xaos-ui-0120</packageName>
					<time>00:00:00.000</time>
					<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
						<name>Combat_timer</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<time>00:00:00.000</time>
						<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
							<name>disarm check</name>
							<script>
wielded = wielded or sword
if statusDisarm==true then
	send("wield "..wielded)
end
</script>
							<command></command>
							<packageName></packageName>
							<time>00:00:03.000</time>
						</Timer>
						<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
							<name>Specialized</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<time>00:00:00.000</time>
							<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
								<name>Utility</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<time>00:00:00.000</time>
								<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
									<name>healing Util</name>
									<script>
if auto_hunt and autoHeal then
  if (current_health &lt; 90 and not combat) then
    send("bclear;"..autoHealCommand)
  end
end
inputAttack = inputAttack or nil
if (current_health &lt; autoHealThreshold and autoAction ~= "c heal" and autoHeal) then
  send("auto "..autoHealCommand)
	autoAction = autoHealCommand
  debugc("Evaluated and found that healing is needed. Switching to auto heal")
	autoMode = "auto heal"
end
if (current_health &gt; 85 and autoAction == autoHealCommand and autoHeal and autoMode == "auto heal") then
  send("auto " .. inputAttack)
	autoMode = "normal"
  debugc("Evaluated and found I am healed. Switching to an attack")
end</script>
									<command></command>
									<packageName></packageName>
									<time>00:00:03.000</time>
								</Timer>
							</TimerGroup>
							<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
								<name>pledges</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<time>00:00:00.000</time>
								<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
									<name>pledges</name>
									<script>
if autoRenovi and renoviAvailable and tonumber(current_mana)&lt;tonumber(renoviThreshold) then
	send("cast renovi")
end</script>
									<command></command>
									<packageName></packageName>
									<time>00:00:03.000</time>
								</Timer>
								<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
									<name>Prosel</name>
									<script>if current_health &lt; 50 then
	send("cast prosel")
end</script>
									<command></command>
									<packageName></packageName>
									<time>00:00:03.000</time>
								</Timer>
							</TimerGroup>
						</TimerGroup>
					</TimerGroup>
					<TimerGroup isActive="no" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
						<name>Ilkin Spam</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<time>00:00:08.000</time>
						<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
							<name>Ilkin spam</name>
							<script>send("cast harmony Mmmmm")</script>
							<command></command>
							<packageName></packageName>
							<time>00:00:08.000</time>
						</Timer>
					</TimerGroup>
				</TimerGroup>
			</TimerGroup>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>Enchanting Extras</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>DE Boot</name>
					<script>send("disenchant " .. disenchantTarget)
--send("disenchant charged axe")
--send("disenchant static blade")</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:05.200</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Check Skills</name>
					<script>send("skills")</script>
					<command></command>
					<packageName></packageName>
					<time>00:05:00.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Make Master Stab</name>
					<script>send("make new master ench;show;pro;put all.master cloak")</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:15.000</time>
				</Timer>
			</TimerGroup>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>auto_hunt</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>hunt listener</name>
					<script>  --if not statusHunting then
  
    if auto_hunt then 
  
  			expandAlias("auto_hunt") 
  
  	end
  	
  	debugc("[ Debug ] Hunt listener is firing, auto_hunt status is "..tostring(auto_hunt).."\n")
  	
  	if obsessionMode then
  		hunting = false
  	end
  
  --end
  

	
	
</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:04.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>leader listener</name>
					<script>  if not hunting then
  
    if auto_hunt then 
  
  			expandAlias("auto_hunt",false) 
  
  	end
  	
  	debugc("[ Debug ] Hunt listener is firing, auto_hunt status is "..tostring(auto_hunt).."\n")
  	
  
  end
  

	
	
</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:02.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>scan listener</name>
					<script>  
  if auto_hunt and not targetFound then 

			expandAlias("auto_hunt") 

	end
	
	debugc("[ Debug ] Hunt listener is firing, auto_hunt status is "..tostring(auto_hunt).."\n")
	
	if obsessionMode then
		--hunting = false
	end

	
	
</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Combat Reset  Timer</name>
					<script>--Fail safe which resets combat if no combat has been had in that timeframe.


if auto_hunt and (getEpoch()-lastcombattime) &gt; 10 and combat then
  combat=false
  hunting=false
  targetFound=false
  send("scan")
  echo("combat reset")
end</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:10.000</time>
				</Timer>
			</TimerGroup>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>QOL</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:01:06.000</time>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>drinkTimer</name>
					<script>
if xaos.config.drinkMode=="soup" then
	send("drink soup")
elseif xaos.config.drinkMode=="creation" then
	send("cast create food;get all.mush;eat mush;eat mush;eat mush;eat mush")
	send("cast create spring;drink;drink;drink;drink")
elseif xaos.config.drinkMode == "butchery" then
	send("but cor;get all.meat;eat meat;eat meat;eat meat;eat meat;eat meat;eat meat;drop all.meat")
	send("drink "..xaos.config.customDrink)
elseif xaos.config.drinkMode == "corpse" then
	send("get cor;eat cor")
	send("drink "..xaos.config.customDrink)
end
</script>
					<command></command>
					<packageName></packageName>
					<time>00:01:00.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Go away silver</name>
					<script>send("drop 10000 silver")</script>
					<command></command>
					<packageName></packageName>
					<time>00:10:00.000</time>
				</Timer>
			</TimerGroup>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>XUI</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>XPRate</name>
					<script>table.insert(xpcollector,{time=getTime(true,"HH.mm"),xp=xpCollection1})
table.insert(killcollector,{time=getTime(true,"HH.mm"),kills=killCount})


if (xpCollection1) &gt; topXPCollection then
	topXPCollection = (xpCollection1)
end

if (killCount) &gt; topKillCollection then
	topKillCollection = (killCount)
end

xpCollection1 = 0
killCount = 0

displaytimespan = displaytimespan or 5

updateKillbars(displaytimespan)
updateXPbars(displaytimespan)





</script>
					<command></command>
					<packageName></packageName>
					<time>00:01:00.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Update Combat</name>
					<script>clearWindow("CombatList")


cecho("CombatList",damageDisplay(TotalCalc))

</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Party Timer</name>
					<script>fillPartyBox()</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.500</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>User Timer</name>
					<script>

local lbltext = "&lt;div style='white-space: pre-wrap;padding:5px;'&gt;"
lbltext = lbltext .. xaos.charactername .. "&lt;br/&gt;&lt;br/&gt;"
lbltext = lbltext .."Lev : " .. xaos.Level .. " (" .. string.format("%2.2f",xaos.LevelPercent) .. "%)" .. "&lt;br/&gt;"

lbltext = lbltext .."Tact: " .. tostring(xaos.tactics) .. "&lt;br/&gt;"
lbltext = lbltext .."Styl: " .. tostring(xaos.fightingstyle) .. "&lt;br/&gt;"
if xaos.config.show_race then
  lbltext = lbltext .."Race: " .. tostring(xaos.characterrace) .. "&lt;br/&gt;"
end
lbltext = lbltext .. "&lt;/div&gt;"
userDisplay:echo(lbltext)</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:00.500</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Party Grab</name>
					<script>partystatusgrab=true
send("party",false)
--deleteLine()</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:05.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Quest Update</name>
					<script>local function clearquestwindows()
  clearWindow("queststatus")
  clearWindow("queststatuswin")
end
local function writequestwindows(text)
  cecho("queststatus",text)
  cecho("queststatuswin",text)
end
clearquestwindows()

writequestwindows("Current Quests: \n")

local remquest

if questfiltertype == "qm" then
  for qk,qv in pairs(xaos.quests) do 
    if qv.qm == questfiltername then
      writequestwindows("\n&lt;medium_turquoise&gt;" .. qv.name .. " - " .. qv.qm .. "\n")
  
      for ok,ov in pairs(qv.objectives) do
        writequestwindows(" (" .. ov.current .. "/" .. ov.max .. ") " .. ov.name .. "\n")
      end
    end
  end 
elseif questfiltertype == "q" then
  for qk,qv in pairs(xaos.quests) do 
    if qv.name == questfiltername then
      writequestwindows("\n&lt;medium_turquoise&gt;" .. qv.name .. " - " .. qv.qm .. "\n")
  
      for ok,ov in pairs(qv.objectives) do
        writequestwindows(" (" .. ov.current .. "/" .. ov.max .. ") " .. ov.name .. "\n")
      end
    end
  end 
else
  for qk=table.size(xaos.quests),1,-1 do
  --for qk,qv in pairs(xaos.quests) do 
    local qv=xaos.quests[qk]
    writequestwindows("\n&lt;medium_turquoise&gt;" .. qv.name .. " - " .. qv.qm .. "\n")
  
    if xaos.autoquest.autoquest_currentquest ~= "" and qv.name == xaos.autoquest.autoquest_currentquest then
      remquest = qv
    end
  
    for ok,ov in pairs(qv.objectives) do
      writequestwindows(" (" .. ov.current .. "/" .. ov.max .. ") " .. ov.name .. "\n")
    end
  end
end

if remquest ~= nil then

  writequestwindows("\nAutoQuest:\n")

  writequestwindows("\n&lt;medium_turquoise&gt;" .. remquest.name .. " - " .. remquest.qm .. "\n")
    
  for ok,ov in pairs(remquest.objectives) do
    writequestwindows(" (" .. ov.current .. "/" .. ov.max .. ") " .. ov.name .. "\n")
  end
      
end





</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Update Score</name>
					<script>clearWindow("ScoreList")

cecho("ScoreList","\n&lt;white&gt;Fighting\n")
cecho("ScoreList","Tactics             : " .. tostring(xaos.tactics) .. "\n")
cecho("ScoreList","Style               : " .. tostring(xaos.fightingstyle) .. "\n")
cecho("ScoreList","\n&lt;white&gt;Level\n")
cecho("ScoreList","Level               : " .. tostring(xaos.Level) .. "\n")
cecho("ScoreList","Level %             : " .. tostring(string.format("%2.2f",xaos.LevelPercent)) .. "\n")
--cecho("ScoreList","Level Dings         : " .. tostring(leveltotals[currentLevel]) .. "\n")
--cecho("ScoreList","Ratio               : " .. tostring(xaos.LevelPercent / leveltotals[currentLevel]) .. "\n")

--local asc = levelratio[(xaos.Level%100)]
--local curpercent = (tonumber(xaos.LevelPercent)/100)
--local ratiomax = levelratio[(xaos.Level%100)]+((levelratio[(xaos.Level%100)+1]-levelratio[(xaos.Level%100)])*(tonumber(xaos.LevelPercent)/100))

--cecho("ScoreList","Ascend %            : " .. tostring(string.format("%2.2f",100*(levelratio[(xaos.Level%100)]+((levelratio[(xaos.Level%100)+1]-levelratio[(xaos.Level%100)])*(tonumber(xaos.LevelPercent)/100))))) .. "\n")
cecho("ScoreList","Ascend %            : " .. tostring(string.format("%2.2f",calcAscendPercent(xaos.Level,xaos.LevelPercent))) .. "\n")
--cecho("ScoreList","Ascend %            : " .. tostring(ratiomax) .. "\n")
cecho("ScoreList","\n&lt;white&gt;Score\n")
cecho("ScoreList","Fragments           : " .. tostring(xaos.currency.frags) .. "\n")
cecho("ScoreList","Race                : " .. tostring(xaos.characterrace) .. "\n")
--cecho("ScoreList",damageDisplay(TotalCalc))

</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
				<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>Update Variables</name>
					<script>


clearWindow("VariableList")

--cecho("VariableList","&lt;white&gt;Buffs\n")
--for key,value in pairs(xaos.buffs) do
--  local formattedkey = string.sub(key,7) .. "                    "
--  formattedkey = string.sub(formattedkey,1,20)
--  cecho("VariableList", formattedkey .. ": " .. tostring(value) .. "\n")
--end

local function writevariablename(name,value,linkcommand)
  name = string.sub(name .. "                    ",1,20)
  if linkcommand == nil then
    cecho("VariableList",name)
  else
    cechoLink("VariableList","&lt;grey&gt;" .. name,linkcommand,"Click to set input syntax",true)
  end
  cecho("VariableList",": " .. value .. "\n")
end

cecho("VariableList","\n&lt;white&gt;Scripting\n")
writevariablename("Is Scripting",tostring(auto_hunt))
--cecho("VariableList","Is Scripting        : " .. tostring(auto_hunt) .. "\n")
writevariablename("Area",tostring(xaos.scripting.area.name))
writevariablename("Max Mobs",tostring(xaos.config.scripting.maxmobs),'expandAlias("xhelp scriptconfig maxmobs");printCmdLine"maxmobs "')

writevariablename("Hunt Wait",tostring(xaos.config.scripting.huntwait),[[cecho("&lt;cyan&gt;huntwait #");printCmdLine"huntwait "]])
--cechoLink("VariableList", "&lt;grey&gt;Hunt Wait",[[cecho("&lt;cyan&gt;huntwait #");printCmdLine"huntwait "]],"Click to set input syntax",true)
--cecho("VariableList","           : " .. tostring(xaos.config.scripting.huntwait) .. "\n")
writevariablename("End Combat Wait",tostring(xaos.config.scripting.endcombatwait),[[cecho("&lt;cyan&gt;endcombatwait #");printCmdLine"endcombatwait "]])
--cechoLink("VariableList", "&lt;grey&gt;End Combat Wait",[[cecho("&lt;cyan&gt;endcombatwait #");printCmdLine"endcombatwait "]],"Click to set input syntax",true)
--cecho("VariableList","     : " .. tostring(xaos.config.scripting.endcombatwait) .. "\n")
writevariablename("Killing",tostring(killTarget))
--cecho("VariableList","Killing             : " .. tostring(killTarget) .. "\n")
writevariablename("Hunting",tostring(huntTarget))
--cecho("VariableList","Hunting             : " .. tostring(huntTarget) .. "\n")
writevariablename("Following",tostring(followTarget) .. "  (" .. tostring(statusFollowing) .. "-" .. tostring(statusLeader) .. ")" )
--cecho("VariableList","Following           : " .. tostring(followTarget) .. "  (" .. tostring(statusFollowing) .. ")\n")
--writevariablename("Has Leader",tostring(statusLeader))
--cecho("VariableList","Has Leader          : " .. tostring(statusLeader) .. "\n")

writevariablename("Auto Loot",tostring(xaos.config.scripting.autoLoot),[[cecho("&lt;cyan&gt;autoloot &lt;comma separated list&gt;");printCmdLine"autoloot "]])
--cechoLink("VariableList", "&lt;grey&gt;Auto Loot",[[cecho("&lt;cyan&gt;autoloot &lt;comma separated list&gt;");printCmdLine"autoloot "]],"Click to set input syntax",true)
--cecho("VariableList","           : " .. tostring(xaos.config.scripting.autoLoot) .. "\n")
writevariablename("Auto Pickup",tostring(xaos.config.scripting.autoPickup),[[cecho("&lt;cyan&gt;autopickup &lt;comma separated list&gt;");printCmdLine"autopickup "]])
--cechoLink("VariableList", "&lt;grey&gt;Auto Pickup",[[cecho("&lt;cyan&gt;autopickup &lt;comma separated list&gt;");printCmdLine"autopickup "]],"Click to set input syntax",true)
--cecho("VariableList","         : " .. tostring(xaos.config.scripting.autoPickup) .. "\n")
--writevariablename("Scan Mode",tostring(xaos.config.scripting.scan_mode))
--cecho("VariableList","Scan Mode           : " .. tostring(xaos.config.scripting.scan_mode) .. "\n")
writevariablename("Find Mode",tostring(xaos.config.scripting.findmode))
--cecho("VariableList","Find Mode           : " .. tostring(xaos.config.scripting.findmode) .. "\n")
writevariablename("Buff Mode",tostring(xaos.config.buffmode) ,[[printCmdLine"buffmode"]])
--cechoLink("VariableList", "&lt;grey&gt;Buff Mode",[[printCmdLine"buffmode"]],"Click to set input syntax",true)
--cecho("VariableList","           : " .. tostring(xaos.config.buffmode) .. "\n")
writevariablename("Berserk over Center",tostring(xaos.config.berserkovercenter),[[printCmdLine"xconfig berserkovercenter"]])
--cechoLink("VariableList", "&lt;grey&gt;Berserk over Center",[[printCmdLine"xconfig berserkovercenter"]],"Click to set input syntax",true)
--cecho("VariableList"," : " .. tostring(xaos.config.berserkovercenter) .. "\n")
writevariablename("Min HP",tostring(xaos.config.scripting.minhp),[[cecho("&lt;cyan&gt;xconfig minhp # (0-100)");printCmdLine"xconfig minhp "]])
--cechoLink("VariableList", "&lt;grey&gt;Min HP",[[cecho("&lt;cyan&gt;xconfig minhp # (0-100)");printCmdLine"xconfig minhp "]],"Click to set input syntax",true)
--cecho("VariableList","              : " .. tostring(xaos.config.scripting.minhp) .. "\n")
writevariablename("Min Mana",tostring(xaos.config.scripting.minmana),[[cecho("&lt;cyan&gt;xconfig minmana # (0-100)");printCmdLine"xconfig minmana "]])
--cechoLink("VariableList", "&lt;grey&gt;Min Mana",[[cecho("&lt;cyan&gt;xconfig minmana # (0-100)");printCmdLine"xconfig minmana "]],"Click to set input syntax",true)
--cecho("VariableList","            : " .. tostring(xaos.config.scripting.minmana) .. "\n")
writevariablename("Wielded",tostring(wielded))
--cecho("VariableList","Wielded             : " .. tostring(wielded) .. "\n")
if xaos.config.debugmode then
cecho("VariableList","Combat              : " .. tostring(combat) .. "\n")
cecho("VariableList","targetFound         : " .. tostring(targetFound) .. "\n")
cecho("VariableList","targetFoundID       : " .. tostring(targetFoundID) .. "\n")
end

cecho("VariableList","\n&lt;white&gt;UI\n")
writevariablename("Show Exp",tostring(xaos.config.show_killed),[[printCmdLine"showkills"]])
--cechoLink("VariableList", "&lt;grey&gt;Show Exp",[[printCmdLine"showkills"]],"Click to set input syntax",true)
--cecho("VariableList","            : " .. tostring(xaos.config.show_killed) .. "\n")
</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
			</TimerGroup>
		</TimerGroup>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Xaos</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Config</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Help</name>
					<script>local command = matches[2]
if  command ~= nil then
  command = string.lower(string.trim(command))
end
local helpdesc = {}

table.insert(helpdesc,
  {name="script",
   commands={
    {name="setarea",options="&lt;name&gt;?",desc="Sets the current area, for use in scan mode.  Supplying no name will show a list."},
    {name="cleararea",options="",desc="Clears the current area."},
    {name="startscripting",options="&lt;name&gt;?",desc="Starts scripting the current area, or if a name is included, starts hunting the mob name.  In BETA."},   
    {name="stopscripting",options="",desc="Stops the current script."},
    {name="followleader",options="",desc="Will attempt to stay with your party leader. This will AUTO switch if the leader changes."},
    {name="overrideleader",options="&lt;name&gt;",desc="This will override the leader, to force following someome.  Make sure this is the exact name of the character."},
    {name="phunt",options="&lt;mob&gt;",desc="Prey Hunt: Set target and kill to &lt;mobname&gt; and start hunting.  This does not work with scan mode."},
    {name="fhunt",options="&lt;friend&gt;",desc="Friend Hunt: Set target to &lt;name&gt;, clear kill and start hunting"},
    {name="detectarea",options="",desc="Will attempt to determine the current area.  Make sure you are surrounded by area mobs."},
   
   }
  }
)
table.insert(helpdesc,
  {name="scriptconfig",
   commands={
    {name="endcombatwait",options="&lt;number&gt;",desc="Sets how long to wait at the end of combat, before continuing."},
    {name="huntwait",options="&lt;number&gt;",desc="Sets how long to wait before every hunt or scan action, before continuing."},
    {name="setinitial",options="&lt;command&gt;",desc="Will execute this command, once at the start of combat per mob."},
    {name="autoloot",options="&lt;comma seperated list of items&gt;",desc="Will attempt to loot the items from every corpse."},
    {name="autopickup",options="&lt;comma seperated list of items&gt;",desc="Will attemp to pickup the items after every death."},
    {name="maxmobs",options="&lt;number&gt;",desc="Sets the maximum number of scriptable mobs before it will move into a room.  If over the limit will attempt to pull with lightning bolt."},
    {name="scanmode",options="",desc="Turns on/off scan mode for scripting."},
    {name="findmode",options="",desc="Turns on/off find mode for scripting.  If one of your party members gets left behind, it will try and go find them."},
    {name="buffmode",options="",desc="Turns on/off whether you will try and use buffs such as berserk, turning off can help with staying with your party leader."},
    {name="xconfig",options="&lt;berserkovercenter|minmana|minhp|showprompt&gt;",desc="Sets configuration options. Min Mana and HP require a 0-100."},
   }
  }
)
table.insert(helpdesc,
  {name="empowers",
   commands={
    {name="fullempower",options="",desc="Starts the empower process.  Used for when you have alot of hero points (aka ascend)"},
    {name="startempower",options="&lt;all&gt;?",desc="Will full empower either ac resists, or all resists. (5 times each)"},
    {name="autoempower",options="&lt;set/remove/view&gt; &lt;name&gt;? &lt;percent&gt;?",desc="Will automatically empower whenever you kill or run fullempower based on your ratios.  view will show you your current configuration."},
   }
  }
)
table.insert(helpdesc,
  {name="quest",
   commands={
    {name="questfilter",options="qf &lt;qm|q|clear&gt; &lt;name?&gt;",desc="Filters the quest list based on the provided questmaster(qm) or quest."},
    {name="autoquest",options="aq &lt;questname|questnumber|clear|queue&gt;",desc="Will attempt to complete all kill objectives in a quest. In BETA."},
   }
  }
)
table.insert(helpdesc,
  {name="other",
   commands={
    {name="multi",options="&lt;#&gt; &lt;command&gt;",desc="runs the command # of times, use {id} in the command string to reference the number."},
    {name="afkmode",options="&lt;on|off|show&gt;?",desc="turns on afkmode, this starts tracking things that happen when you are away.  Turning it off will present the xp difference and loot gained."},
    {name="showkills",options="",desc="Turns on/off kill counters in the data window."},
    {name="stash/unstash",options="",desc="Your stash is whatever you are currently wearing on your body. This works as eiterh stash &lt;item&gt; or get all.item stash"},
    {name="beckon",options="",desc="If you are in the same party as a person, will get them to turn on their hunt triggers to you."},
    {name="gt guard",options="",desc="Will request a guard from the leader."},
    {name="gt rescue",options="",desc="Will request a rescue from the leader."},
    {name="gt heal",options="",desc="Will request a heal from your party."},
    {name="rescueall",options="",desc="Will try to rescue all players in the party."},
   }
  }
)
table.insert(helpdesc,
  {name="gear",
   
   commands={
    {name="wearall",options="&lt;name&gt;",desc="Will put on a full set of gear based on a name (for spell up sets)"},
    {name="wearnormal",options="",desc="Will put on your normal gear (set with seteq)"},
    {name="seteq",options="",desc="Sets your 'normal' gear"},
   }
  }
)
table.insert(helpdesc,
  {name="damagescenario",
   commands={
    {name="SetScenario",options="&lt;roundcount&gt; &lt;name&gt;",desc=""},
    {name="ClearScenario",options="",desc="Resets the current scenario."},
    {name="FinishScenario",options="",desc="Ends the current scenario and adds it to the array."},
    {name="ShowScenario",options="",desc="Displays the log window for the scenario."},
   }
  }
)
table.insert(helpdesc,
  {name="craft",
   desc="IN BETA",
   commands={
    {name="setcrafting",options="&lt;size&gt; &lt;colour&gt; &lt;quality&gt;",desc="set the crafting parameters\n\tcolor: orange=conjuration, teal=enchantment, pink=religion, maroon=abjuration"},
    {name="makespellset",options="",desc=""},
   }
  }
)
table.insert(helpdesc,
  {name="enchant",
   desc="IN BETA - currently disabled",
   commands={
    {name="setenchant",options="",desc=""},
    {name="startenchant",options="&lt;target&gt;",desc=""},
   }
  }
)

table.insert(helpdesc,
  {name="sort",
   desc="IN BETA",
   commands={
    {name="sortroom",options="",desc=""},
    {name="sorthelp",options="",desc=""},
    {name="id",options="&lt;name&gt;",desc=""},
   }
  }
)




if command == "" then
  helpheadecho("Available Help Sections")
  helpdescecho("type xhelp &lt;section&gt; for more")
  helpbodyecho("all")
  for k,v in pairs(helpdesc) do
    helpbodyecho(v.name)    
  end
  helpbodyecho("")
elseif command == "all" then
  helpheadecho("UI Help")
  helpheadecho("&lt;arg&gt; defines arguments, ? means its optional.")
  for k,v in pairs(helpdesc) do
    helpheadecho(v.name) 
    if v.desc ~= nil then
      helpheaddescecho(v.desc)
    end   
    for ck,cv in pairs(v.commands) do
      helpbodyecho(cv.name .. " " .. cv.options)
      helpdescecho(cv.desc)
    end
  end
else
  local command1 = string.split(command," ")[1]
  local command2 = string.split(command," ")[2]
  local filttable = table.n_filter(helpdesc, function (item) return item.name==command1 end)
  
  
  if command2 == nil then
    helpheadecho("UI Help")
    helpheadecho("&lt;arg&gt; defines arguments, ? means its optional.")
    for k,v in pairs(filttable) do
      helpheadecho(v.name)    
      for ck,cv in pairs(v.commands) do
        helpbodyecho(cv.name .. " " .. cv.options)
        helpdescecho(cv.desc)
      end
    end
  else
    for k,v in pairs(filttable) do   
      for ck,cv in pairs(v.commands) do
        if cv.name == command2 then
          helpbodyecho(cv.name .. " " .. cv.options)
          helpdescecho(cv.desc)
        end
      end
    end
  end
end
</script>
					<command></command>
					<packageName></packageName>
					<regex>^xhelp(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>AFK Mode</name>
					<script>local command = "help"

if matches[2] ~= "" then
  command = matches[2]
  command = string.lower(string.trim(command))
end

if command == "help" then
  cecho("main","&lt;medium_turquoise&gt;\nAvailable Commands:\n")
  cecho("main","&lt;medium_turquoise&gt;  on\n")
  cecho("main","&lt;medium_turquoise&gt;  off\n")
  cecho("main","&lt;medium_turquoise&gt;  show\n")
elseif command == "on" then
  if not xaos.config.afkmode then
    overnight={}
    overnight.timerid = overnight.timerid or createStopWatch() 
    
    startStopWatch(overnight.timerid)
    
    overnight.currentLevelPercent = xaos.LevelPercent
    overnight.currentLevel=xaos.Level
    overnight.autoQuestTurnIn=auto_questTurnIn
    overnight.showKills = show_killed
    overnight.currentFrags=xaos.currency.frags
    --overnight.currentSouls=currentSouls
    
    lootcollector={}
    
    xaos.config.auto_questTurnIn=true
    xaos.config.show_kills=false
    xaos.config.afkmode = true
    
    cecho("data","&lt;medium_turquoise&gt;[AFK " .. getTime(true,"HH.mm") .. "] AFK Mode Activated\n")
  else
    cecho("data","&lt;medium_turquoise&gt;[AFK " .. getTime(true,"HH.mm") .. "] AFK Mode Already Active\n")
  end
elseif command == "off" then
  if xaos.config.afkmode then
    xaos.config.afkmode = false
    cecho("main","&lt;medium_turquoise&gt;AFK Mode Deactivated\n")
  
    cecho("main","&lt;medium_turquoise&gt;\nLoot:\n")
    for k,v in pairs(lootcollector) do
      echo(v.loot .. " @ " .. v.time .. "\n")
    end
  
    cecho("main","&lt;medium_turquoise&gt;\nXP\n")
    cecho("main","Levels: " .. string.format("%2.2f",(tonumber(xaos.Level) + (tonumber(xaos.LevelPercent)/100))-(tonumber(overnight.currentLevel) + (tonumber(overnight.currentLevelPercent)/100))))
    cecho("main","\n")
    --(tonumber(xaos.Level) + (tonumber(xaos.LevelPercent)/100))-(tonumber(overnight.currentLevel) + (tonumber(overnight.currentLevelPercent)/100))
    cecho("main","Ascend %: " .. string.format("%2.2f",calcAscendPercent(xaos.Level,xaos.LevelPercent)-calcAscendPercent(overnight.currentLevel,overnight.currentLevelPercent)))
    cecho("main","\n")
    
    local watchtime = getStopWatchBrokenDownTime(overnight.timerid)
    
    cecho("main","Timer   : D: " .. watchtime.days .. " H: " .. watchtime.days .. " H: " .. watchtime.hours .. " M: " .. watchtime.minutes .. " S: " .. watchtime.seconds)
    cecho("main","\n")
    cecho("main","\n")
    
    xaos.config.auto_questTurnIn=overnight.autoQuestTurnIn
    xaos.config.show_killed=overnight.showKills
    
    
    cecho("data","&lt;medium_turquoise&gt;[AFK " .. getTime(true,"HH.mm") .. "] AFK Mode Deactivated\n")
  else
    cecho("data","&lt;medium_turquoise&gt;[AFK " .. getTime(true,"HH.mm") .. "] AFK Mode Not Active\n")
  end
elseif command == "show" then
  if xaos.config.afkmode then
    cecho("main","&lt;medium_turquoise&gt;\nLoot:\n")
    for k,v in pairs(lootcollector) do
      echo(v.loot .. " @ " .. v.time .. "\n")
    end
  
    cecho("main","&lt;medium_turquoise&gt;\nXP\n")
    cecho("main","Levels  : " .. string.format("%2.2f",(tonumber(xaos.Level) + (tonumber(xaos.LevelPercent)/100))-(tonumber(overnight.currentLevel) + (tonumber(overnight.currentLevelPercent)/100))))
    cecho("main","\n")
    --(tonumber(xaos.Level) + (tonumber(xaos.LevelPercent)/100))-(tonumber(overnight.currentLevel) + (tonumber(overnight.currentLevelPercent)/100))
    cecho("main","Ascend %: " .. string.format("%2.2f",calcAscendPercent(xaos.Level,xaos.LevelPercent)-calcAscendPercent(overnight.currentLevel,overnight.currentLevelPercent)))
    cecho("main","\n")
    local watchtime = getStopWatchBrokenDownTime(overnight.timerid)
    cecho("main","Timer   : Days: " .. watchtime.days .. " Time: " .. string.format("%  2.0f",watchtime.hours) .. ":" .. string.format("%2.0f",watchtime.minutes) .. ":" .. string.format("%2.0f",watchtime.seconds))
    cecho("main","\n")
    cecho("main","\n")
  else
    cecho("main","&lt;red&gt;\n AFK Mode Not Active\n")
  end
end

</script>
					<command></command>
					<packageName></packageName>
					<regex>^afkmode(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>xconfig</name>
					<script>local command = string.trim(matches[2])
local args = matches[3]

if command == "" then
  hecho("Config Commands: \n")
  hecho("berserkovercenter\n")
  hecho("berserkmode\n")
  hecho("minmana\n")
  hecho("minhp\n")
  hecho("showprompt\n")
  hecho("autoempower\n")
  hecho("showrace\n")
  hecho("showkillsxp\n")
end

if command=="berserkovercenter" then
  xaos.config.berserkovercenter = not xaos.config.berserkovercenter
  echo("Berserk Over Center: " .. tostring(xaos.config.berserkovercenter))
  copytoprofile()
end

if command == "berserkmode" then
  xaos.config.berserkmode = not xaos.config.berserkmode
  echo("Berserk Mode: " .. tostring(xaos.config.berserkmode))
  copytoprofile()
end

if command == "minmana" then
  xaos.config.scripting.minmana = tonumber(args)
  echo("Min Mana: " .. tostring(xaos.config.scripting.minmana))
  copytoprofile()
end

if command == "minhp" then
  xaos.config.scripting.minhp = tonumber(args)
  echo("Min HP: " .. tostring(xaos.config.scripting.minhp))
  copytoprofile()
end

if command == "showprompt" then
  mysettings.showprompt = not mysettings.showprompt
  helpbodyecho("Show Prompt: " .. tostring(mysettings.showprompt))
  savemysettings()
end

if command == "autoempower" then
  xaos.config.autoempower = not xaos.config.autoempower
  helpbodyecho("Auto Empower: " .. tostring(xaos.config.autoempower))
  copytoprofile()
end

if command == "showrace" then
  xaos.config.show_race = not xaos.config.show_race
  helpbodyecho("Show Race: " .. tostring(xaos.config.show_race))
  copytoprofile()
end

if command == "showkillsxp" then
  xaos.config.show_killed = not xaos.config.show_killed
  helpbodyecho("Show Killed XP: " .. tostring(xaos.config.show_killed))
  copytoprofile()
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^xconfig(?: )?(\w*)(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Debug Mode</name>
					<script>xaos.config.debugmode = not xaos.config.debugmode

echo("\n\n Debug Mode: " .. tostring(xaos.config.debugmode) .. "\n\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^debugmode</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Buff Mode</name>
					<script>xaos.config.buffmode = not xaos.config.buffmode

echo("\n\n Buff Mode: " .. tostring(xaos.config.buffmode) .. "\n\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^buffmode</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Beta Mode</name>
					<script>xaos.config.betamode = not xaos.config.betamode

echo("\n\n Beta Mode: " .. tostring(xaos.config.betamode) .. "\n\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^betamode</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Modules</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>enablemodule</name>
						<script>setFeature(string.lower(string.trim(matches[2])),true)</script>
						<command></command>
						<packageName></packageName>
						<regex>enablemodule(?:\s)?(.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>disablemodule</name>
						<script>setFeature(string.lower(string.trim(matches[2])),false)
cecho("\n&lt;cyan&gt;Most modules will not be completly disabled, until you restart mudlet.\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>disablemodule(?:\s)?(.*)</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Quests</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Turn In</name>
					<script>questTurnIn=true
last_xp_overflow = xp_overflow
last_current_xp = current_xp

expandAlias("questeat")

local queststoturnin = {}

if questmaster == "unknown" then
  queststoturnin = xaos.quests
else
  queststoturnin = quest_getqmquests(questmaster)
end
debugecho(table.size(queststoturnin))
for k,v in pairs(queststoturnin) do
  if quest_iscomplete(v.name) then
  --if quest_iscomplete(questname) then
      send("quest complete " .. v.name)
      --questinfo = questinfo .. "" .. questname .. "  - Completed\n"
    else
      --echo("InfoList","\n\n" .. questname .. "  - Not Complete\n")
      echo("" .. v.name .. "  - Not Complete\n")
      --questinfo = questinfo .. "" .. questname .. "  - Not Complete\n"
    end
end
send("quest list")
tempTimer(2,function () expandAlias("questeat") end)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^turnIn</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>autoTurnIn</name>
					<script>if auto_questTurnIn then
  auto_questTurnIn=false
  echo("\nAuto Turn In: off\n ")
else
  auto_questTurnIn=true
  echo("\nAuto Turn In: on\n")
end
</script>
					<command></command>
					<packageName></packageName>
					<regex>^auto[t|T]urn[I|i]n</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Quest eat</name>
					<script>questgag=true
questgagreadyforreset=false
send("quest cur")</script>
					<command></command>
					<packageName></packageName>
					<regex>^questeat</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>qf</name>
					<script>--echo(matches[1])

expandAlias("questfilter" .. string.sub(matches[1],3))  





</script>
					<command></command>
					<packageName></packageName>
					<regex>^qf(?: )?(\w*)?(?: )?(.*)?</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>questfilter</name>
					<script>local command = matches[2]
local name = matches[3]

--debugecho(command)
--debugecho(name)

if command == nil or command == "" then
 hecho("Available filters: qm, q")
else
  command = string.lower(string.trim(command))
  if command == "clear" then
    questfiltertype = ""
    questfiltername = ""
  else
    if command == "qm" then
      if name == nil or name == "" then        
        for k,v in pairs(xaos.questmasters) do
          echo("[" .. k .. "]\t" .. v.name .. "\n")
        end
      else
        if tonumber(name) ~= nil then
          questfiltername = xaos.questmasters[tonumber(name)].name
        else
          questfiltername = string.trim(name)
        end
        questfiltertype = command
        
      end
    end
  end
  

end






</script>
					<command></command>
					<packageName></packageName>
					<regex>^questfilter(?: )?(\w*)?(?: )?(.*)?</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>AutoQuest</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Auto Quest</name>
						<script>local questtocomplete = string.trim(matches[2])

if questtocomplete == "" then
  echo("Quests to complete\n")
  for k,v in pairs(quest_getstatus(false)) do
    echo(k .. ": " .. v.name .. " - " .. v.qm .. "\n")
  end
elseif questtocomplete == "clear" then
  autoquest_clear()
elseif questtocomplete == "queue" then
  xaos.autoquest.queue = {}
  for k,v in pairs(string.split(matches[3],",")) do
    table.insert(xaos.autoquest.queue,quest_getstatus(false)[tonumber(v)].name)
  end
  
  autoquest_setquest(xaos.autoquest.queue[1])
  autoquest_go()
elseif tonumber(questtocomplete) ~= nil then
  autoquest_setquest(quest_getstatus(false)[tonumber(questtocomplete)].name)
  autoquest_go()
  
else
  if matches[3] ~= nil then
    questtocomplete = questtocomplete .. " " .. string.trim(matches[3])
  end
  autoquest_setquest(questtocomplete)
  autoquest_go()

end



</script>
						<command></command>
						<packageName></packageName>
						<regex>^autoquest(?: )?(\w*)(?: )?(.*)?</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>ahunt</name>
						<script>send("bclear")

huntTarget = tostring(matches[2])

expandAlias("scripthunt")</script>
						<command></command>
						<packageName></packageName>
						<regex>^ahunt (.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^aq (.*)</name>
						<script>expandAlias("autoquest " .. matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^aq(?: )?(.*)</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Archive</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Update Quest Window -QM</name>
						<script>local qm = matches[2]

clearWindow("queststatus")
table.sort(quests,
    function(elem1,elem2)
      --if table.size(elem1.objectives) == table.size(elem2.objectives) then
      local elem1comp = table.size(table.n_filter(elem1.objectives,function(item) return not item.complete end))
      local elem2comp = table.size(table.n_filter(elem2.objectives,function(item) return not item.complete end))
      if elem1comp ~= elem2comp then
        return elem1comp &lt; elem2comp
      else
        return elem1.name &lt; elem2.name 
      end
    end)
for key,value in pairs(quests) do
   if value.qm == qm then
    if table.size(value.objectives)==0 or table.size(table.n_filter(value.objectives,function(item) return not item.complete end))==0 then
      --if showcompplete then
      cecho("queststatus","\n&lt;grey&gt;" .. value.name .. " - " .. value.qm .. "\n")  
      --end
    else 
      cecho("queststatus","\n&lt;medium_turquoise&gt;" .. value.name .. " - " .. value.qm .. "\n")  
      for key2,value2 in pairs(value.objectives) do
        echo("queststatus"," " .. value2.name .. "\n")
      end
    end
  end
end

echo("update complete")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^updatequestsqm (.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Update Quest Window</name>
						<script>local showcomplete = matches[2]

clearWindow("queststatus")
table.sort(quests,
    function(elem1,elem2)
      --if table.size(elem1.objectives) == table.size(elem2.objectives) then
      local elem1comp = table.size(table.n_filter(elem1.objectives,function(item) return not item.complete end))
      local elem2comp = table.size(table.n_filter(elem2.objectives,function(item) return not item.complete end))
      if elem1comp ~= elem2comp then
        return elem1comp &lt; elem2comp
      else
        return elem1.name &lt; elem2.name 
      end
    end)
for key,value in pairs(quests) do
  --local elem2comp = table.size(table.n_filter(elem2.objectives,function(item) return not item.complete end))
  if table.size(value.objectives)==0 or table.size(table.n_filter(value.objectives,function(item) return not item.complete end))==0 then
    if showcomplete then
    cecho("queststatus","\n&lt;grey&gt;" .. value.name .. " - " .. value.qm .. "\n")  
    end
  else 
    cecho("queststatus","\n&lt;medium_turquoise&gt;" .. value.name .. " - " .. value.qm .. "\n")  
    for key2,value2 in pairs(value.objectives) do
      echo("queststatus"," " .. value2.name .. "\n")
    end
  end
  --echo("queststatus"," " .. matches[3] .. "\n")
end

echo("update complete")
</script>
						<command></command>
						<packageName></packageName>
						<regex>^updatequests (.*)</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="no" isFolder="yes">
				<name>Enchanting</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>setenchant</name>
					<script>tableEnchantNum["22"]=1   --impart strength
tableEnchantNum["26"]=1   --impart intelligence
tableEnchantNum["25"]=1   --impart wisdom
tableEnchantNum["23"]=1   --impart dexterity
tableEnchantNum["24"]=1   --impart constitution
tableEnchantNum["10"]=1   --add saves
tableEnchantNum["6"]=0   --add hitpoints
tableEnchantNum["8"]=0   --add mana
   --add moves
   --add light
tableEnchantNum["3"]=1   --add speed
tableEnchantNum["1"]=4   --add hitroll
tableEnchantNum["2"]=0   --add damroll
tableEnchantNum["7"]=1   --regen hp
tableEnchantNum["9"]=1   --regen mana
tableEnchantNum["4"]=2   --armor physical
tableEnchantNum["5"]=3   --armor elemental
tableEnchantNum["14"]=5   --casting conjurational
tableEnchantNum["18"]=0   --casting invocational
tableEnchantNum["16"]=0   --casting enchantment

   --resist fire
   --resist cold
   --resist lightning
   --resist acid
   --resist holy
   --resist unholy
   --resist magic
   --resist negative
   --instill returning
   --instill sanguine touch
   --instill enkindling touch
   --instill glacial touch
   --instill static touch



   --add luck
tableEnchantNum["20"]=0   --casting necromantic
tableEnchantNum["11"]=0   --casting abjurational
tableEnchantNum["12"]=0   --casting alterational
tableEnchantNum["21"]=0   --casting religious
tableEnchantNum["15"]=0   --casting divinational
tableEnchantNum["17"]=0   --casting illusional
tableEnchantNum["13"]=0   --casting beguilery
tableEnchantNum["19"]=0   --casting maladictive
   --research
   --advanced research
   --greater research</script>
					<command></command>
					<packageName></packageName>
					<regex>setenchant</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>startenchant</name>
					<script>enchantTarget = string.trim(matches[2])
--send("get '" .. enchantTarget)
send("enchant '" .. enchantTarget .. "' table")
send("show")
startEnchant()</script>
					<command></command>
					<packageName></packageName>
					<regex>startenchant (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>disenchant</name>
					<script>disenchantTarget = matches[2]
send("disenchant " .. matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>det (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>showenchant</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex>showenchant</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Script</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>phunt</name>
					<script>send("bclear")
prey=matches[2]
huntTarget = tostring(matches[2])
killTarget = tostring(matches[2])

autoleaderswitch = false
expandAlias("scripthunt")</script>
					<command></command>
					<packageName></packageName>
					<regex>^phunt (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>fhunt</name>
					<script>followTarget=tostring(matches[2])

huntTarget = tostring(matches[2])
killTarget = ""
auto_hunt = true

autoleaderswitch = false
statusFollowing=true
statusLeader=false

enableTimer("hunt listener")
disableTimer("scan listener")
disableTimer("leader listener")

xaos.config.scripting.scan_mode = false
--send("auto ")
auto_hunt = true
xuicom(
  "You will attempt to stay with: " ..
  huntTarget
)
xuicom("Currently, tracking "..wielded.." as your wielded weapon.")
if statusFollowing then
  --This bit handles the "What do I do if I'm following someone?" question
  obsessionMode = true
  huntTarget = followTarget
  location = nil
  --xuicom("You are following " .. followTarget .. " and this script will attempt to hunt them.")
  --xuicom("Obsession mode is on by default. Use &lt;white&gt;obsessionoff&lt;light_blue&gt; to turn it off.\n")
  cechoLink(
    "[ XUI ] &lt;light_blue&gt;Click here for more info on obsession mode.\n",
    [[xuicom("Obsession mode inputs hunt aggressively in an attempt to keep up with the party leader.\n")]],
    "obsession mode info",
    true
  )
  if huntTarget then
  else
    variableCheck(huntTarget, "hunt location")
    auto_hunt = false
  end
end
combat = false
hunting = false</script>
					<command></command>
					<packageName></packageName>
					<regex>^fhunt (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>scripthunt</name>
					<script>auto_hunt = true
statusFollowing=false
statusLeader=false
followTarget = ""

if not xaos.config.scripting.scan_mode then
  enableTimer("hunt listener")
else
  disableTimer("hunt listener")
  send("scan")
end
disableTimer("scan listener")
disableTimer("leader listener")

send("auto ")
auto_hunt = true
xuicom(
  "You will attempt to automatically hunt something. Current settings indicate you're going to hunt " ..
  huntTarget
)
--xuicom("Currently, tracking "..wielded.." as your wielded weapon.")


combat = false
hunting = false</script>
					<command></command>
					<packageName></packageName>
					<regex>^scripthunt</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Auto Loot</name>
					<script>xaos.config.scripting.autoLoot = string.trim(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^auto[lL]oot(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Auto Pickup</name>
					<script>xaos.config.scripting.autoPickup = string.trim(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^auto[p|P]ickup(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Area</name>
					<script>local area = string.trim(matches[2])


local findmember = table.n_filter(xaos.areas,function (item) return item.name == area end)

if table.size(findmember) ~= 0 then

  
  xaos.scripting.area = findmember[1]
  --Set Area Overrides
  if xaos.scripting.area.scanmode ~= nil then xaos.config.scripting.scan_mode = xaos.scripting.area.scanmode end
  if xaos.scripting.area.huntWait ~= nil then xaos.config.scripting.huntwait = xaos.scripting.area.huntWait end
  if xaos.scripting.area.endcombatWait ~= nil then xaos.config.scripting.endcombatwait = xaos.scripting.area.endcombatWait end
  if xaos.scripting.area.maxmobs ~= nil then xaos.config.scripting.maxmobs = xaos.scripting.area.maxmobs end

  echo(" Area set to: " .. xaos.scripting.area.name .. "\n")
  cechoLink("&lt;cyan&gt;startscripting to go.\n", [[expandAlias("startscripting")]], "Click to send.", true)
  echo("\n\n")
else

  for k,v in pairs(xaos.areas) do
    echo("\t" .. v.name .. "\n")
  end   
  
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^setarea(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Clear Area</name>
					<script>  xaos.scripting.area = {}
  xaos.config.scripting.scan_mode = false
  
  echo(" Area Cleared")</script>
					<command></command>
					<packageName></packageName>
					<regex>^cleararea</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Start Scripting</name>
					<script>local prey = matches[2]


if prey ~= nil and prey ~= "" then

  expandAlias("cleararea")
  
  if huntWait==0 then
    huntWait=1
    if xaos.config.scripting.scan_mode then 
      send("scan")
    else
      expandAlias("phunt " .. prey)
    end
  end
  
  
  
else
  xaos.config.scripting.scan_mode = xaos.scripting.area.scanmode
  
  huntTarget = xaos.scripting.area.keyword
  killTarget = xaos.scripting.area.killlist
  

  if xaos.scripting.area.name ~= nil then
    expandAlias("scripthunt")    
  else
    expandAlias("detectarea")
  end

end</script>
					<command></command>
					<packageName></packageName>
					<regex>^startscripting(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>lookfor</name>
					<script>followTarget=tostring(matches[2])

huntTarget = tostring(matches[2])
killTarget = ""
auto_hunt = true

statusFollowing=false

enableTimer("hunt listener")
disableTimer("scan listener")

xaos.config.scripting.scan_mode = false

--send("auto ")
auto_hunt = true
xuicom(
  "You will attempt to automatically hunt something. Current settings indicate you're going to hunt " ..
  huntTarget
)
xuicom("Currently, tracking "..wielded.." as your wielded weapon.")
if statusFollowing then
  --This bit handles the "What do I do if I'm following someone?" question
  obsessionMode = true
  huntTarget = followTarget
  location = nil
  xuicom("You are following " .. followTarget .. " and this script will attempt to hunt them.")
  xuicom("Obsession mode is on by default. Use &lt;white&gt;obsessionoff&lt;light_blue&gt; to turn it off.\n")
  cechoLink(
    "[ XUI ] &lt;light_blue&gt;Click here for more info on obsession mode.\n",
    [[xuicom("Obsession mode inputs hunt aggressively in an attempt to keep up with the party leader.\n")]],
    "obsession mode info",
    true
  )
  if huntTarget then
  else
    variableCheck(huntTarget, "hunt location")
    auto_hunt = false
  end
end
combat = false
hunting = false</script>
					<command></command>
					<packageName></packageName>
					<regex>^lookfor (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>followleader</name>
					<script>overriderleader = false
autoleaderswitch = true

leaderhunt(xaos.party.leader)</script>
					<command></command>
					<packageName></packageName>
					<regex>^followleader</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>newareakillcapture</name>
					<script>killcapturegrab=true
killcapture = {}</script>
					<command></command>
					<packageName></packageName>
					<regex>^newareakillcapture</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>detectareaa</name>
					<script>auto_hunt = false
detectmode=true
expandAlias("cleararea")
send("scan")</script>
					<command></command>
					<packageName></packageName>
					<regex>^detectarea</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>stopscripting</name>
					<script>disableTimer("hunt listener")
disableTimer("scan listener")
disableTimer("leader listener")

auto_hunt = false</script>
					<command></command>
					<packageName></packageName>
					<regex>^stopscripting</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>overrideleader</name>
					<script>overriderleader = true
autoleaderswitch = false

xuicom("Make sure this is set to the EXACT name of your target.")

leaderhunt(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^overrideleader (.*)</regex>
				</Alias>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Config</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>^findmode</name>
						<script>--xaos.config.scripting.findmode
xaos.config.scripting.findmode = not xaos.config.scripting.findmode

echo("\n\n Find Mode: " .. tostring(xaos.config.scripting.findmode) .. "\n\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^findmode</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>^maxmob (.*)</name>
						<script>xaos.config.scripting.maxmobs=tonumber(matches[2])

echo("\n\n Max Mobs: " .. tostring(xaos.config.scripting.maxmobs) .. "\n\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^maxmobs (.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>scanmode</name>
						<script>if xaos.config.scripting.scan_mode then
  xaos.config.scripting.scan_mode=false
  echo("Scan Mode Off")
  
  if auto_hunt then
    enableTimer("hunt listener")
    disableTimer("scan listener")
  end
  
 else
  xaos.config.scripting.scan_mode=true
  disableTimer("hunt listener")
  if not combat then
    send("scan")
  end
  if xaos.config.scripting.huntwait == 0 then xaos.config.scripting.huntwait = 1 end
  echo("Scan Mode On")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^scanmode$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>huntwait</name>
						<script>xaos.config.scripting.huntwait=tonumber(matches[2])

echo("\n\n Hunt Wait: " .. tostring(xaos.config.scripting.huntwait) .. "\n\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^huntwait (.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>setinitial</name>
						<script>

xaos.config.scripting.initialcommand=matches[2]



echo("\n\n Initial Combat Action: " .. tostring(xaos.config.scripting.initialcommand) .. "\n\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^setinitial (.*)</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>endcombatwait</name>
						<script>xaos.config.scripting.endcombatwait=tonumber(matches[2])

echo("\n\n End Combat Wait: " .. tostring(xaos.config.scripting.endcombatwait) .. "\n\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^endcombatwait (.*)</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Crafting</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Set Crafting</name>
					<script>local makesize = string.trim(matches[2])
local makecol = string.trim(matches[3])
local makequal = string.trim(matches[4])

--color: orange=conjur, teal=enchantment, pink=religion

craftingparams = { colour= makecol, quality=makequal, size=makesize}

echo(display(craftingparams))</script>
					<command></command>
					<packageName></packageName>
					<regex>^setcrafting ([^\s\n]*) ([^\s\n]*) ([^\s\n]*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Make Cloth</name>
					<script>local maketype = string.trim(matches[2])

send("get spool")

if maketype == "scarf" then
send("make new cloth " .. maketype .. ";source 2 " .. craftingfurnaces.cloth .. ";source 1 spool;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
else
send("make new cloth " .. maketype .. ";source 1 " .. craftingfurnaces.cloth .. ";source 1 spool;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^makecloth (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Make Weap</name>
					<script>local maketype = string.trim(matches[2])

if maketype == "cloth scarf" then
send("make new " .. maketype .. ";source 2 sew;source 1 spool;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
else
send("make new " .. maketype .. ";source 1 metal;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^makeweap (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Make Jewelry</name>
					<script>local maketype = string.trim(matches[2])

if maketype == "scarf" then
send("make new " .. maketype .. ";source 2 sew;source 1 spool;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
else
send("make new " .. maketype .. ";source 1 metal;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^makejew (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>MakeClothSet</name>
					<script>
craftset = {
  -- "makejew simple ring",
  --"makejew simple ring",
  --"makejew simple necklace",
  --"makejew simple necklace",
  "makecloth shirt",
  "makecloth pants",
  "makecloth gloves",
  "makecloth robe",
  "makecloth belt",
  --"makejew simple bracelet",
  --"makejew simple bracelet",
  --"makeweap metal stil",
  --"makeweap metal stil",
  "makecloth hood",
  "makecloth boots",
  --"makeioun ioun",
}

craftfullstatus = true
craftsetiteration = 1

send(expandAlias(craftset[craftsetiteration]))</script>
					<command></command>
					<packageName></packageName>
					<regex>^makeclothset</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>MakeJewSet</name>
					<script>
craftset = {
   "makejew simple ring",
  "makejew simple ring",
  "makejew simple necklace",
  "makejew simple necklace",
  --"makecloth shirt",
  --"makecloth pants",
  --"makecloth gloves",
  --"makecloth robe",
  --"makecloth belt",
  "makejew simple bracelet",
  "makejew simple bracelet",
  --"makeweap metal stil",
  --"makeweap metal stil",
  --"makecloth hood",
  --"makecloth boots",
  --"makeioun ioun",
}

craftfullstatus = true
craftsetiteration = 1

send(expandAlias(craftset[craftsetiteration]))</script>
					<command></command>
					<packageName></packageName>
					<regex>^makejewset</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Make Ioun</name>
					<script>local maketype = string.trim(matches[2])

if maketype == "scarf" then
send("make new " .. maketype .. ";source 1 cutter;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
else
send("make new " .. maketype .. ";source 1 cutter;quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^makeioun (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Furnaces</name>
					<script>local cloth = string.trim(matches[2])
local metal = string.trim(matches[3])
local gem = string.trim(matches[4])

--color: orange=conjur, teal=enchantment, pink=religion

craftingfurnaces = { cloth= cloth, metal=metal, gem =gem }

echo(display(craftingfurnaces))</script>
					<command></command>
					<packageName></packageName>
					<regex>^setfurnaces ([^\s\n]*) ([^\s\n]*) ([^\s\n]*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Make Metal</name>
					<script>local maketype = string.trim(matches[2])


send("make new " .. maketype .. ";source 1 " .. craftingfurnaces.metal .. ";quality " .. craftingparams["quality"] .. ";colour " .. craftingparams["colour"] .. ";size " .. craftingparams["size"] .. ";proceed")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^makemetal (.*)</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Gear Set</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>wearall (.*)</name>
					<script>for k,v in pairs(currentequipment) do
  if v.location == "worn on finger" or v.location=="worn on wrist" or v.location=="worn on neck" then
    send("remove '" .. v.item .."")
  end
end

local item = string.trim(matches[2])
send("wield " .. item .. " stil")
send("hold " .. item .. " stil")
send("wear '" .. item .. " ring' 'left finger")
send("wear '" .. item .. " ring' 'right finger")
send("wear '" .. item  .. " necklace' 'left neck")
send("wear '" .. item  .. " necklace' 'right neck")
send("wear '" .. item  .. " scarf' 'left neck")
send("wear '" .. item  .. " scarf' 'right neck")
send("wear '" .. item .. " shirt' torso")
send("wear '" .. item .. " hood' head")
send("wear '" .. item .. " glove' hand")
send("wear '" .. item .. " robe' body")
send("wear '" .. item .. " belt' waist")
send("wear '" .. item .. " bracelet' 'left wrist")
send("wear '" .. item .. " bracelet' 'right wrist")
send("wear '" .. item .. " ioun' float")
send("wear '" .. item .. " pants' legs")
send("wear '" .. item .. " boots' feet")</script>
					<command></command>
					<packageName></packageName>
					<regex>^wearall (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wearnormal</name>
					<script>for k,v in pairs(currentequipment) do
  if v.location == "worn on finger" or v.location=="worn on wrist" or v.location=="worn on neck" then
    send("remove '" .. v.item .."")
  end
end

local floatcount = 0 
for k,v in pairs(xaos.currentequip) do
  --held in right hand
  --held in left hand
  --held in both hands
  echo (v.location)
  if v.location == "held in right hand" or v.location=="held with both hands" then
    send("wield " .. v.item .."")
  elseif v.location == "held in left hand" then
    send("hold " .. v.item .."")
  elseif v.location == "floating nearby" then
    if floatcount == 0 then
    send("wear '" .. v.item .."' float")
    else
      send("kinetic '" .. v.item)
    end
    floatcount=floatcount+1
  else
    local temploc = string.gsub(v.location,"worn on ","")
    temploc = string.gsub(temploc,"worn about ","")
    temploc = string.gsub(temploc,"worn around ","")
    send("wear '" .. v.item .."' " .. temploc)
  end
end
--echo("Dont forget your kinetics!")</script>
					<command></command>
					<packageName></packageName>
					<regex>^wearnormal</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Equipment</name>
					<script>equipmentgrab=true
startequipmentgrab=false
xaos.currentequip = {}

if mysettings.features.msdp then
  grab_EQUIPMENT()
else
  send("eq")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>seteq</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^unwield</name>
					<script>send("rem '" ..wielded)
send("rem '" .. held)</script>
					<command></command>
					<packageName></packageName>
					<regex>^unwield</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^rewield</name>
					<script>send("wield " ..wielded)
if held ~= "" then
send("hold " .. held)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^rewield</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^stash (.*)</name>
					<script>send("put '" .. matches[2] .. "' '" ..xaos.backpack)</script>
					<command></command>
					<packageName></packageName>
					<regex>^stash (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^unstash (.*)</name>
					<script>send("get '" .. matches[2] .. "' '" ..xaos.backpack)</script>
					<command></command>
					<packageName></packageName>
					<regex>^unstash (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^stash (.*)</name>
					<script>send("put '" .. matches[2] .. "' '" ..xaos.backpack)</script>
					<command></command>
					<packageName></packageName>
					<regex>^put (.*) stash$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^unstash (.*)</name>
					<script>send("get '" .. matches[2] .. "' '" ..xaos.backpack)</script>
					<command></command>
					<packageName></packageName>
					<regex>^get (.*) stash$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>l(?:ook)? i(?:n)? stash</name>
					<script>send("look in '" ..xaos.backpack)</script>
					<command></command>
					<packageName></packageName>
					<regex>^l(?:ook)? i(?:n)? stash</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Save Gear Set</name>
					<script>savegearset(string.trim(matches[2]))</script>
					<command></command>
					<packageName></packageName>
					<regex>savegear (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Load Gear Set</name>
					<script>weargearset(string.trim(matches[2]))</script>
					<command></command>
					<packageName></packageName>
					<regex>loadgear (.*)</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>XaosUI Scripting</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>auto_hunt</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>auto_hunt</name>
						<script>--deleteLine()

--Check if you're in combat or already hunting
--If in combat, do nothing
--If already hunting, do nothing
--If neither in combat, nor hunting, hunt
if not combat and not hunting and not restingMode then
	send("hunt "..huntTarget.."\n",false)
	hunting = true
	debugc("[ Debug ] &lt;light_blue&gt;auto_hunt is being invoked. Hunt target is "..huntTarget.."\n")

end

if current_mana &lt; 50  and autoRest then
	restingMode = true
end

if current_health &gt; 90 and current_mana &gt; 90 and restingMode then
	restingMode = false
	send("stand")
end

if restingMode and not combat then
	send("cast renovi")
	send("sleep")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^auto_hunt$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>follow</name>
						<script>followTarget = matches[2]
send("follow "..matches[2])
send("party join "..matches[2])
autoFollow = true

xuicom("For the purposes of the auto hunt feature, your follow target has been set.")
cecho("[ XUI ] &lt;light_blue&gt;You're now following "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^follow (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>customHunt</name>
						<script>huntTarget = tostring(matches[2])

xuicom("You've selected to automatically hunt "..matches[2])
xuicom("Please ensure your kill keyword matches using &lt;white&gt;customKill")</script>
						<command></command>
						<packageName></packageName>
						<regex>^customHunt (.*+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>customKill</name>
						<script>killTarget = tostring(matches[2])

xuicom("You've selected to automatically kill "..matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^customKill (.*+)$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Grouping</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Turn off obsession</name>
							<script>obsessionMode = false

xuicom("Obsession mode deactivated")</script>
							<command></command>
							<packageName></packageName>
							<regex>^obsessionoff$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>Auto set</name>
						<script>autoAttack = matches[2]
inputAttack = matches[2]
xuicom("Setting your autoattack to "..matches[2]..". If the script changes your auto settings for some reason, it will return to that.")
send("auto "..matches[2])

-- Note for future tampering. input Attack is modified here and the auto trigger</script>
						<command></command>
						<packageName></packageName>
						<regex>^auto (.*)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Auto enchantment</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Proc number</name>
						<script>enchantIteration = matches[2]
send("proc")</script>
						<command></command>
						<packageName></packageName>
						<regex>^proc (\d+)$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>xaos-ui-0120</name>
				<script></script>
				<command></command>
				<packageName>xaos-ui-0120</packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>xaos-ui-0120</name>
					<script></script>
					<command></command>
					<packageName>xaos-ui-0120</packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>general</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>combat</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>wield</name>
								<script>deleteLine()
wielded = matches[2]
send("wield "..matches[2])
debugc("Setting wield variable to "..wielded)
xuicom(wielded.." now recognized as your primary weapon. If disarmed in combat, it will be sought to rewield.")</script>
								<command></command>
								<packageName></packageName>
								<regex>^wield (\w+)$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Class QOL</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>mages</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>mageBuff</name>
									<script>terminus = table.size(mage_buff) 
send("cast permanency")
for i = 1,terminus do
	send("cast '"..mage_buff[i].."'")
end</script>
									<command></command>
									<packageName></packageName>
									<regex>mageBuff</regex>
								</Alias>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>mentalists</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>mentalistGain</name>
										<script>terminus = table.size(mentalist_buffs) 
for i = 1,terminus do
	send("gain "..tostring(mentalist_buffs[i]))
end


for i = 1, table.size(mentalist_utility) do
	send("gain "..tostring(mentalist_utility[i]))
end

for i = 1, table.size(mentalist_combat) do
	send("gain "..tostring(mentalist_combat[i]))
end
</script>
										<command></command>
										<packageName></packageName>
										<regex>mentalistGain</regex>
									</Alias>
								</AliasGroup>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Clerics</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>autoHeal set</name>
									<script>autoHealThreshold = tonumber(matches[2])
xuicom("You will attempt to "..autoHealCommand.." when below "..matches[2].."% HP.")</script>
									<command></command>
									<packageName></packageName>
									<regex>autoHeal (\d+)</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>autoHeal Command</name>
									<script>
autoHealCommand = matches[2]


xuicom("You will attempt to "..autoHealCommand.." when below "..autoHealThreshold.."% HP.")</script>
									<command></command>
									<packageName></packageName>
									<regex>autoHC (.*)</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>pledges</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>renoviThreshold</name>
									<script>renoviThreshold = matches[2]
cecho("[ XUI ] &lt;light_blue&gt;You will attempt to use renovi below "..matches[2].." mana.\n")</script>
									<command></command>
									<packageName></packageName>
									<regex>^renoviThreshold (\d+)$</regex>
								</Alias>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>warrior</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>auto determ</name>
									<script>determThresh = matches[2]
determThresh2 = matches[3]
xuicom("This utility will set your determination on when below "..determThresh.."% hitpoints to turn off when you have "..matches[3].." mana.")
</script>
									<command></command>
									<packageName></packageName>
									<regex>^autoDet (\d+) (\d+)\s*$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name>auto determ 1 arg</name>
									<script>determThresh = matches[2]
xuicom("This utility will set your determination on when below "..determThresh.."% hitpoints.")
</script>
									<command></command>
									<packageName></packageName>
									<regex>^autoDet (\d+)$</regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>PlayerSettings</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>retrievePrompt</name>
								<script>xuicom("Restoring old prompt settings. Unfortunately this will be without your desired colors.")
send("prompt "..savedPrompt)</script>
								<command></command>
								<packageName></packageName>
								<regex>^retrievePrompt$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>marchPrompt</name>
								<script>xuicom("As a provisional measure, we're going to save your old prompt so you can get it back.")
send("prompt")
 

send("PROMPT HEALTH %h MANA %m MVM %v STIL %C XP %X Directions  %e  Hungry  %B %c")</script>
								<command></command>
								<packageName></packageName>
								<regex>^marchPrompt$</regex>
							</Alias>
							<AliasGroup isActive="no" isFolder="yes">
								<name>UI Settings</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="no" isFolder="no">
									<name>Health bar - color</name>
									<script>healthR = matches[2]
healthG = matches[2]
healthB = matches[2]
xuicom("Pushing your changes.")
hpbar:setColor(healthR,healthG,healthB)</script>
									<command></command>
									<packageName></packageName>
									<regex>healthCol (\d+)\s(\d+)\s(\d+)</regex>
								</Alias>
							</AliasGroup>
							<Alias isActive="yes" isFolder="no">
								<name>RP Say</name>
								<script>custom_say = custom_say or ""
send("say "..custom_say..matches[2])</script>
								<command></command>
								<packageName></packageName>
								<regex>^say (.+)</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>customSaySetter</name>
								<script>custom_say = matches[2]</script>
								<command></command>
								<packageName></packageName>
								<regex>^customSay (.*)</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>RP global</name>
								<script>custom_say = custom_say or ""
send("ic "..custom_say..matches[2])</script>
								<command></command>
								<packageName></packageName>
								<regex>^ic (.*)</regex>
							</Alias>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Utility settings</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<Alias isActive="yes" isFolder="no">
									<name>autoLog</name>
									<script>loginName = matches[2]
loginPW = matches[3]</script>
									<command></command>
									<packageName></packageName>
									<regex>^autoLog (\w+) (.+)$</regex>
								</Alias>
								<Alias isActive="yes" isFolder="no">
									<name></name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
								</Alias>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>QOL</name>
							<script>customDrink = matches[2]
xuicom("When presented the opportunity to drink from your inventory, you will drink "..matches[2])</script>
							<command></command>
							<packageName></packageName>
							<regex>^customDrink (.*)$</regex>
							<Alias isActive="yes" isFolder="no">
								<name>hero empowerment</name>
								<script>for i = 1,5 do
	send("hero empower "..matches[2])
end

send("hero empower")</script>
								<command></command>
								<packageName></packageName>
								<regex>^mhemp (.*+)$</regex>
							</Alias>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Faceless</name>
								<script>send("quest request fragments of the fallen god")
send("give fragment faceless")
send("give fragment faceless")
send("quest complete fragments of the fallen god")</script>
								<command></command>
								<packageName></packageName>
								<regex>shard_create</regex>
							</AliasGroup>
							<AliasGroup isActive="yes" isFolder="yes">
								<name>Utility</name>
								<script></script>
								<command></command>
								<packageName></packageName>
								<regex></regex>
								<AliasGroup isActive="yes" isFolder="yes">
									<name>Enchanting</name>
									<script></script>
									<command></command>
									<packageName></packageName>
									<regex></regex>
									<Alias isActive="yes" isFolder="no">
										<name>encCons</name>
										<script>xuicom("Refactoring for " .. matches[2])
if matches[2] == "ember" then
  send("craft new ember;proc")
elseif matches[2] == "focus" then
  -- xuicom("I'm simulating crafting sources")
  send(
    "craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new focus;proc"
  )
elseif matches[2] == "source" then
  -- xuicom("I'm simulating crafting sources")
  for i = 1, 3 do
    send(
      "craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new focus;proc"
    )
  end
  send("craft new source;proc")
elseif matches[2] == "orb" then
  for i = 1, 2 do
    for i = 1, 3 do
      send(
        "craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new ember;proc;craft new focus;proc"
      )
    end
    send("craft new source;proc")
  end
  send("craft new orb;proc")
else
  xuicom(
    "This utility accepts the arguments &lt;white&gt;ember&lt;light_blue&gt;,&lt;white&gt;focus&lt;light_blue&gt;, &lt;white&gt;source&lt;light_blue&gt;, &lt;white&gt;orb&lt;light_blue&gt;"
  )
  xuicom("Your input should look like &lt;white&gt;encCons ember 4")
  return
end</script>
										<command></command>
										<packageName></packageName>
										<regex>^encCons (\w+)$</regex>
									</Alias>
								</AliasGroup>
							</AliasGroup>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>Events</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>test</name>
								<script>raiseEvent("eventa")</script>
								<command></command>
								<packageName></packageName>
								<regex>^test$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="no" isFolder="yes">
							<name>assert</name>
							<script>local s = matches[2]

s = string.gsub(s, "%$", "\n")
feedTriggers("\n" .. s .. "\n")
echo("\n")</script>
							<command></command>
							<packageName></packageName>
							<regex>`assert (.*)</regex>
						</AliasGroup>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Sort</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Sort Room</name>
					<script>sortingmode=true
--issorting = true
itemwordcount=0
send("look")</script>
					<command></command>
					<packageName></packageName>
					<regex>^sortroom</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Sort Help</name>
					<script>cecho("&lt;cyan&gt;pink=artifact\n")
cecho("&lt;cyan&gt;gold=epic with space\n")
cecho("&lt;cyan&gt;silver=supreme with space\n")
cecho("&lt;cyan&gt;brown=epic full\n")
cecho("&lt;cyan&gt;maroon=supreme full\n")
cecho("&lt;cyan&gt;sheer=garbage\n")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^sorthelp</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Sort Stop</name>
					<script>sortingmode=false</script>
					<command></command>
					<packageName></packageName>
					<regex>^sortstop</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Sort Get</name>
					<script>issorting = true
expandAlias("get all." .. string.trim(matches[2]))
expandAlias("id " .. string.trim(matches[2]))

--gold=epic with space
--silver=supreme with space

--brown=epic full
--maroon=supreme full

--sheer=garbage</script>
					<command></command>
					<packageName></packageName>
					<regex>^startsortget (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Sort</name>
					<script>issorting = true
itemwordcount=0
--expandAlias("get all." .. string.trim(matches[2]))
expandAlias("id " .. string.trim(matches[2]))

--pink=artifact
--gold=epic with space
--silver=supreme with space
--brown=epic full
--maroon=supreme full
--sheer=garbage
</script>
					<command></command>
					<packageName></packageName>
					<regex>^startsort (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ID</name>
					<script>lastid = string.trim(matches[2])
send("c id '" .. matches[2])
</script>
					<command></command>
					<packageName></packageName>
					<regex>^id (.*)</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Misc</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Multi Command</name>
					<script>local counter = tonumber(matches[2])
local command = string.trim(matches[3])

--debugecho(counter)
--debugecho(command)
for i=1,counter do 
  --echo(i)
  local tempcom = string.gsub(command,"{id}",i)
  --debugecho(tempcom)
  expandAlias(tempcom)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^multi ([0-9]*) (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Multi Cont Command</name>
					<script>local counter = matches[2]
local command = matches[3]

if counter == "clear" then
  echo("clear")
else
  counter = tonumber(counter)
  command = string.trim(command)

  if multicommand == nil then
    multicommand = ""
  end
  
  if multicounter == nil then
    multicounter = 0
  end
  
  --Repeat
  if multicommand == command then
    multicounter = multicounter + 1
  else
    multicounter = 0
    multicommand = command
  end
  
  echo (1+(counter*multicounter))
  echo (counter+(counter*multicounter))
  
  for i=1+(counter*multicounter),counter+(counter*multicounter) do 
    echo(i)
    local tempcom = string.gsub(command,"{id}",i)
    debugecho(tempcom)
    expandAlias(tempcom)
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^multicont ([0-9]+)?(.*)</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>FullEmpower</name>
					<script>
send("hero empower hit roll")
--send("hero empower speed")
send("hero empower hitpoints")
send("hero empower regen hp")
send("hero empower armor class")
send("hero empower warding")

--xaos.config.empowerlist = {

if matches[2] ~= nil then

  local schools = string.split(string.trim(matches[2])," ")
  
  if not table.contains(schools,"mage") then
    send("hero empower damage roll")
  end
  
  if table.contains(schools,"invo") then
    send("hero empower invocational casting")
  end
  
  if table.contains(schools,"reli") then
    send("hero empower religion casting")
  end

  if table.contains(schools,"conj") then
    send("hero empower conjurational casting")
  end

  if table.contains(schools,"ench") then
    send("hero empower enchantment casting")
  end
  
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^[f|F]ull[e|E]mpower(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>facelessfrag</name>
					<script>send("give 2 frags faceless")
tempTimer(2,function () expandAlias("turnIn") end)
tempTimer(4,function () send("quest list") end)</script>
					<command></command>
					<packageName></packageName>
					<regex>^facelessfrag</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>showkills</name>
					<script>xaos.config.show_killed = not xaos.config.show_killed</script>
					<command></command>
					<packageName></packageName>
					<regex>^showkills</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>empoweriterate</name>
					<script>empoweriterate=1
</script>
					<command></command>
					<packageName></packageName>
					<regex>empoweriterate</regex>
				</Alias>
				<Alias isActive="no" isFolder="no">
					<name>^fragconvert</name>
					<script>send("quest request fragments of the fallen god")
send("give 2 frags faceless")
send("quest complete fragments of the fallen god")
send("quest request fragments of the fallen god")</script>
					<command></command>
					<packageName></packageName>
					<regex>^fragconvert</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>unlocklep</name>
					<script>send('unlock north 715124')</script>
					<command></command>
					<packageName></packageName>
					<regex>unlocklep</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>DefilerTurnIn</name>
					<script>send("quest request the defiler")
send("give coin hood")
send("quest complete the defiler")
tempTimer(2,function() send("quest request the defiler") end)</script>
					<command></command>
					<packageName></packageName>
					<regex>defilerturnin</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Reset XP Graph</name>
					<script>xpcollector = {}
killcollector = {}

displaytimespan = displaytimespan or 5

updateKillbars(displaytimespan)
updateXPbars(displaytimespan)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^resetxp</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gocryo</name>
					<script>expandAlias("fhunt franz")
killTarget="claw"</script>
					<command></command>
					<packageName></packageName>
					<regex>gocryo</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>leavecryo</name>
					<script>expandAlias("fhunt ilkin")
killTarget="claw"</script>
					<command></command>
					<packageName></packageName>
					<regex>leavecryo</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Boss</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Rescue Whole Party</name>
					<script>for k,v in pairs(xaos.party.members) do
  if not v.charmie then
    if v.name ~= xaos.charactername then
      send("rescue " .. v.name)
    end
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^rescueall</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Fly Whole Party</name>
					<script>send("c fly")
for k,v in pairs(xaos.party.members) do
  if not v.charmie then
    if v.name ~= xaos.charactername then
      send("c fly " .. v.name)
    end
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^flyall</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>DamageScenario</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>^FinishScenario (.*)</name>
					<script>table.insert(DamageScenarios,{name=matches[2],data=table.deepcopy (TotalCalc)})
--expandAlias("ClearScenario")</script>
					<command></command>
					<packageName></packageName>
					<regex>^FinishScenario (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^ClearScenario</name>
					<script>RoundCalc.Clear()
TotalCalc.Clear()</script>
					<command></command>
					<packageName></packageName>
					<regex>^ClearScenario</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^SetScenario (.*)</name>
					<script>scenario_round_count = tonumber(matches[2])
scenario_name = string.trim(matches[3])

expandAlias("ShowScenario")</script>
					<command></command>
					<packageName></packageName>
					<regex>^SetScenario ([0-9]*) (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ShowScenario</name>
					<script>combatwindow = Geyser.UserWindow:new({
    name = "combatwindow",
    x="80%",y="0%",height="500",width="300",
  })
  
combatdisplay = Geyser.MiniConsole:new({
  name="combat",
  x="2%", y="2%",
  autowrap=true,
  fgColor = "white",
  color = "black",
  width="96%", height="96%",
  fontSize=14,
  scrollBar = true,
},combatwindow)

combatdisplay:resetAutoWrap()

enableScrollBar("combat")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ShowScenario</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Score</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Set Score Variables</name>
					<script>scoregag=true
scoregrab=true
send("score")
</script>
					<command></command>
					<packageName></packageName>
					<regex>scoreeat</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Beta</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="no" isFolder="no">
					<name>^checkbuffs</name>
					<script>echo(checkbuffs().missing)</script>
					<command></command>
					<packageName></packageName>
					<regex>^checkbuffs</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Empowers</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>FullEmpower</name>
					<script>fullautoempower=true
startempower()</script>
					<command></command>
					<packageName></packageName>
					<regex>^[f|F]ull[e|E]mpower(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>StartEmpower</name>
					<script>local command = matches[2]

if command == nil or command == "" then
  command=""
else
  command=string.trim(command)
end
expandAlias("multi 5 hero empower resist blunt")
expandAlias("multi 5 hero empower resist pierce")
expandAlias("multi 5 hero empower resist slash")

if command=="all" then
  temptime = 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist acid") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist cold") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist disease") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist fire") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist holy") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist light") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist lightning") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist magic") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist mental") end)
  temptime = temptime + 1
  tempTimer(temptime,function () expandAlias("multi 5 hero empower resist negative") end)
  temptime = temptime + 1
  tempTimer(temptime,function ()expandAlias("multi 5 hero empower resist poison")  end)
  temptime = temptime + 1
  tempTimer(temptime,function ()expandAlias("multi 5 hero empower resist sound")  end)
  temptime = temptime + 1
  tempTimer(temptime,function ()expandAlias("multi 5 hero empower resist unholy")  end)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^[s|S]tart[e|E]mpower(?: )?(.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>^autoempower</name>
					<script>local command = string.trim(matches[2])
local empoweritem = matches[3]
local amount = matches[4]

if empoweritem ~= nil then
  empoweritem = string.trim(empoweritem)
end

debugecho(empoweritem)
if command == "view" then
    helpheadecho("Auto Empower Configuration")
    local spacer = "                         "
    for k,v in pairs(xaos.config.empower) do
      helpbodyecho(string.sub(v.target .. spacer,1,25) .. ": " .. v.multiplier*100 .. "%")
    end
    helpbodyecho("")
    helpbodyecho("Buffer: " .. xaos.config.empowerbuffer)
    helpbodyecho("")
elseif command == "buffer" then
  xaos.config.empowerbuffer = tonumber(amount)
  helpbodyecho("")
  helpbodyecho("Buffer: " .. xaos.config.empowerbuffer)
  helpbodyecho("")
else
  --make sure it matches an actual empower
  if table.size(table.n_collect(xaos.heroempowers, function(elem) return elem.name == empoweritem end)) == 0 then
    echo("\n " .. empoweritem .. " is not a valid empower \n")
  else
  
    if command == "add" then
      table.insert(xaos.config.empower,{target=empoweritem,multiplier=amount/100})
    elseif command == "remove" then
      for i=1,table.size(xaos.config.empower) do
        if xaos.config.empower[i].target == empoweritem then
          table.remove(xaos.config.empower,i)
          break
        end
      end
    elseif command == "set" then
      local setempower = table.n_collect(xaos.config.empower, function(elem) return elem.target == empoweritem end)[1]
      if setempower == nil then
      table.insert(xaos.config.empower,{target=empoweritem,multiplier=amount/100})
      else
      setempower.multiplier=amount/100
      end
    end
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^autoempower (\w+)(?: )?([^0-9]+)?(?: )?([0-9]+)?</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>XUI</name>
				<script>if mysettings.UIType ~= "XUI" then return end</script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>party</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>partyguard</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>partyguard arg</name>
						<script>local arg = tostring(string.lower(matches[12]))
if arg == "on" then
  uicom("You will now attempt to guard when asked.")
  feedManager("You will now attempt to guard when asked.")
  xaos.config.autoguard = true
elseif arg == "off" then
  uicom("You will no longer attempt to guard when asked.")
  feedManager("You will no longer attempt to guard when asked.")
  xaos.config.autoguard = false
else
  uicom(
    "Syntax: &lt;white&gt;PartyGuard &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;Toggles whether or not you will attemtpt to guard."
  )
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(G|g)(U|u)(A|a)(R|r)(D|d)\s{0,1}(\w+)?$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>partyheal</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>partyheal arg</name>
						<script>local arg = tostring(string.lower(matches[11]))
if arg == "on" then
  enableTrigger("partyheal")
  rcom("You will now attempt to heal when asked.")
  feedManager("You will now attempt to heal when asked.")
  qolWithReldi.partyheal = "On"
elseif arg == "off" then
  disableTrigger("partyheal")
  rcom("You will no longer attempt to heal when asked.")
  feedManager("You will no longer attempt to heal when asked.")
  qolWithReldi.partyheal = "Off"
else
  rcom(
    "Syntax: &lt;white&gt;PartyHeal &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;Toggles whether or not you will attemtpt to heal.\n            &lt;DarkSlateGrey&gt;Use &lt;white&gt;PartyHealWord Arg&lt;DarkSlateGrey&gt; to modify the spell attempted."
  )
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(H|h)(E|e)(A|a)(L|l)\s{0,1}(\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>partyhealword arg</name>
						<script>local arg = tostring(string.lower(matches[15]))
local Change = true
if arg == "reset" or arg == "heal"then
  arg = "heal"
  rcom("You new heal word is " ..arg..".")
  feedManager("You new heal word is " ..arg..".")
  qolWithReldi.healword = arg
elseif arg == "revitalize" then
  arg = "revitalize"
  rcom("You new heal word is " ..arg..".")
  feedManager("You new heal word is " ..arg..".")
  qolWithReldi.healword = arg
elseif arg == "mend" then
  arg = "mend"
  rcom("You new heal word is " ..arg..".")
  feedManager("You new heal word is " ..arg..".")
  qolWithReldi.healword = arg
else
  Change = false
  rcom(
    "Syntax: &lt;white&gt;PartyHealWord &lt;Heal|Mend|Revitalize|Reset&gt;."
  )
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(H|h)(E|e)(A|a)(L|l)(W|w)(O|o)(R|r)(D|d)\s{0,1}(\w+)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>partyrescue</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>partyrescue arg</name>
						<script>local arg = tostring(string.lower(matches[13]))
if arg == "on" then
  enableTrigger("partyrescue")
  rcom("You will now attempt to rescue when asked.")
  feedManager("You will now attempt to rescue when asked.")
  qolWithReldi.partyrescue = "On"
elseif arg == "off" then
  disableTrigger("partyrescue")
  rcom("You will no longer attempt to rescue when asked.")
  feedManager("You will no longer attempt to rescue when asked.")
  qolWithReldi.partypescue = "Off"
else
  rcom(
    "Syntax: &lt;white&gt;PartyRescue &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;Toggles whether or not you will attemtpt to rescue.\n            &lt;DarkSlateGrey&gt;Use &lt;white&gt;PartyHealWord Arg&lt;DarkSlateGrey&gt; to modify the spell attempted."
  )
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(R|r)(E|e)(S|s)(C|c)(U|u)(E|e)\s{0,1}(\w+)$</regex>
					</Alias>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="no" isFolder="yes">
				<name>XaosUI</name>
				<script>if mysettings.UIType ~= "XaosUI" then return end</script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>UI</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>UIHelp</name>
						<script>local message =
  [[UI commands: &lt;white&gt;UIForce&lt;DarkSlateGrey&gt;, &lt;white&gt;UIAck&lt;DarkSlateGrey&gt;, &lt;white&gt;UITheme, &lt;white&gt;UIPrompt&lt;DarkSlateGrey&gt;, &lt;white&gt;UIColors&lt;DarkSlateGrey&gt;, &lt;white&gt;UILoad&lt;DarkSlateGrey&gt;,
           &lt;white&gt;UISave&lt;DarkSlateGrey&gt;, &lt;white&gt;UIModules&lt;DarkSlateGrey&gt;, &lt;white&gt;UISession&lt;DarkSlateGrey&gt;, and &lt;white&gt;UIHelp]]
ncom(message)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(h|H)(e|E)(l|L)(p|P)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>UIModules</name>
						<script>ncom("Available Modules")
cecho(
  "\n&lt;DarkSlateGrey&gt;           scripter\: scripting and automation tools &lt;white&gt;scripterHelp&lt;DarkSlateGrey&gt; for more info"
)
cecho(
  "\n&lt;DarkSlateGrey&gt;           questingWithNoax\: questmater interaction automation &lt;white&gt;questingHelp&lt;DarkSlateGrey&gt; for more info"
)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(m|M)(o|O)(d|D)(u|U)(l|L)(e|E)(s|S)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>UIAck</name>
						<script>ncom("This UI is a Geyser based MudletUI for XaosMud created by Noax and Reldi.")
cecho(
  "\n&lt;DarkSlateGrey&gt;           with thanks to our fellow players Beregost, Marchosias, Altair, Gobs, and Solious."
)
cecho(
  "\n&lt;DarkSlateGrey&gt;           And, A huge Thanks to Ragnar for capturing our imaginations for over a decade.\n"
)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(a|A)(c|C)(k|K)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>UISave</name>
						<script>UI.ConfigSave()
ncom("I broke this when I made the autoupdate, so it does nothing, sorry.")</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(s|S)(a|A)(v|V)(e|E)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>UILoad</name>
						<script>UI.ConfigLoad()
ncom("UI data and configuration has been loaded")</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(l|L)(o|O)(a|A)(d|D)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>UIForce</name>
						<script>local boolVar =  qolWithReldi.ShowAll
gagmode = true
tempTimer(
  .5,
  [[
	send("Score",]].. tostring(boolVar)..[[)
	send("Effects",]].. tostring(boolVar)..[[)
	send("Affects",]].. tostring(boolVar)..[[)
	send("Equip", ]].. tostring(boolVar)..[[)
	send("Inven", ]].. tostring(boolVar)..[[)
	send("hero empower",]].. tostring(boolVar)..[[)
	send("Party",]].. tostring(boolVar)..[[)
]]
)
tempTimer(5, [[gagmode = false]])
tempTimer(
5,
  function()
    UI.UINameDisplay()
    UI.CharClick(UI.CurrentChar)
    UI.Char2Click(UI.CurrentChar2)
    UI.Char3Click(UI.CurrentChar3)
    UI.ExtrasClick(UI.CurrentExtras)
  end
)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(u|U)(i|I)(F|f)(O|o)(R|r)(C|c)(E|e)$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Theme</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>UITheme custom</name>
							<script>local color1 = matches[15]
local color2 = matches[16]
local color3 = matches[17]
local matched1 = false
local matched2 = false
local matched3 = false
local message = "Error: "
for k, v in pairs(UI.colors) do
  if string.lower(color1) == string.lower(v) then
    matched1 = true
    color1 = tostring(v)
  end
  if string.lower(color2) == string.lower(v) then
    matched2 = true
    color2 = tostring(v)
  end
  if string.lower(color3) == string.lower(v) then
    matched3 = true
    color3 = tostring(v)
  end
end
if matched1 == false or matched2 == false or matched3 == false then
  if matched1 == false then
    message = tostring(message) .. tostring(color1) .. ", "
  end
  if matched2 == false then
    message = tostring(message) .. tostring(color2) .. ", "
  end
  if matched3 == false then
    message = tostring(message) .. tostring(color3) .. ", "
  end
  message = tostring(message) .. "-is invalid, Check your selections and try again."
  ncom(message)
else
  UI.ThemeCustom(color1, color2, color3)
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(t|T)(h|H)(e|E)(m|M)(e|E)\s(c|C)(u|U)(s|S)(t|T)(o|O)(m|M)\s(\w+)\s(\w+)\s(\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UITheme</name>
							<script>ncom("Available themes: Xaos, Reldi, Noax, Gobs, Solious, Blue, Green, Purple,")
cecho("\n&lt;DarkSlateGrey&gt;           Turquoise, White, Black, Grey, Random and Custom.")
echo("\n")
cecho("\n&lt;DarkSlateGrey&gt;           Syntax: &lt;white&gt;UITheme \&lt;ThemeName\&gt;")
echo("\n")
cecho(
  "\n&lt;DarkSlateGrey&gt;           Current: &lt;" ..
  UI.theme.Color1 ..
  "&gt;" ..
  UI.theme.Color1 ..
  " &lt;" ..
  UI.theme.Color5 ..
  "&gt;" ..
  UI.theme.Color5 ..
  " &lt;" ..
  UI.theme.Color6 ..
  "&gt;" ..
  UI.theme.Color6
)</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(t|T)(h|H)(e|E)(m|M)(e|E)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UITheme theme</name>
							<script>local theme = string.lower(matches[9])
if tostring(theme) == "custom" then
  ncom("Syntax: &lt;white&gt;UITheme Custom \&lt;color1\&gt; \&lt;color2\&gt; \&lt;color3\&gt;")
  echo("\n")
  cecho("\n&lt;DarkSlateGrey&gt;           for available colors enter &lt;white&gt;UIColors")
  cecho("\n&lt;DarkSlateGrey&gt;           There are three rules to test if a color will work.")
  cecho(
    "\n&lt;DarkSlateGrey&gt;           Rule 1\: If it is a two word color camel case it. E.G. DarkBlue"
  )
  cecho(
    "\n&lt;DarkSlateGrey&gt;           Rule 2\: If it is a one word color leave it all lowercase. E.G. blue"
  )
  cecho("\n&lt;DarkSlateGrey&gt;           Rule 3\: If it has an underscore remove it and follow rule 1.")
else
  UI.Theme(theme)
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(t|T)(h|H)(e|E)(m|M)(e|E)\s(\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UIColors</name>
							<script>local message = "&lt;DarkSlateGrey&gt;Available Colors: "
for k, v in pairs(UI.colors) do
  if tonumber(k) % 6 == 0 then
    if tostring(v) == "black" then
      message = tostring(message) .. "\n           &lt;grey&gt;" .. v .. "&lt;FloralWhite&gt;, "
    else
      message = tostring(message) .. "\n           &lt;" .. v .. "&gt;" .. v .. "&lt;FloralWhite&gt;, "
    end
  else
    if tostring(v) == "black" then
      message = tostring(message) .. "&lt;grey&gt;" .. v .. "&lt;FloralWhite&gt;, "
    else
      message = tostring(message) .. "&lt;" .. v .. "&gt;" .. v .. "&lt;FloralWhite&gt;, "
    end
  end
end
ncom(message)</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(c|C)(o|O)(l|L)(o|O)(r|R)(s|S)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UIFontSize</name>
							<script>local fontSize = matches[12]
UI.theme.FontSize = fontSize
expandAlias(UIForce)</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(f|F)(o|O)(n|N)(t|T)(s|S)(i|i)(z|Z)(e|E)\s(\d+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Prompt</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>UIPrompt prompt</name>
							<script>local prompt = string.lower(matches[10])
if tostring(prompt) == "noax" then
  send(
    "prompt %c^rHP %h ^bMana %m ^gMove %v ^yExp %X^o, ^wStyle:^o %C^w Room:^o %r ^wExits:^o %e%c^^"
  )
elseif tostring(prompt) == "marcho" then
  send(
    "prompt %c^rHEALTH %h ^bMANA %m ^gMVM %v ^wSTIL ^o%C ^yXP %X ^wDirections  ^o%e  ^wHungry  ^o%B %c^^"
  )
elseif tostring(prompt) == "obsc" then
  send("prompt %c^w&lt;^r%hhp ^b%mmn ^g%vmv^w&gt; &lt;^o%t^w&gt; &lt;^o%C^w&gt; &lt;^y%X^w&gt;%c^^")
elseif tostring(prompt) == "newbie" then
  send("prompt %c^w&lt;^r%h^r/ hp ^b%m/ m ^g%v/ mv^w&gt; [^y%X^w]%c^^")
elseif tostring(prompt) == "all" then
  send("prompt %c^w&lt;^r%hhp ^b%mm ^g%vmv^w&gt;%c^^")
elseif tostring(prompt) == "creation" then
  send("prompt %c^r%h Life ^b%m Mana ^g%v Moves^o,^y%X XP/lvl^o&gt;%c^^")
else
  ncom(tostring(prompt) .. " -is invalid, Check your selections and try again.")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(p|P)(r|R)(o|O)(m|M)(p|P)(t|T)\s(\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UIPrompt</name>
							<script>ncom("Available prompts: Noax, Marcho, Obsc, Newbie, All, and Creation")
echo("\n")
cecho("\n&lt;DarkSlateGrey&gt;           Syntax: &lt;white&gt;UIPrompt \&lt;PromptName\&gt;")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(p|P)(r|R)(o|O)(m|M)(p|P)(t|T)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Session</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>UISession</name>
							<script>ncom("Syntax: &lt;white&gt;UISession\&lt;reset\&gt;")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(S|s)(E|e)(S|s)(S|s)(I|i)(O|o)(N|n)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>UISession reset</name>
							<script>local reset = matches[11]
if string.lower(reset) == "reset" then
  UI.Session = getTime()
	ncom("Session timer reset")
	feedManager("Session timer reset")
  if tostring(UI.CurrentExtras) == "Feed" then
    UI.UpdateLabelFeed()
  end
else
  ncom("Syntax: &lt;white&gt;UISession\&lt;reset\&gt;")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(u|U)(i|I)(S|s)(E|e)(S|s)(S|s)(I|i)(O|o)(N|n)\s(\w+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Exp</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Report</name>
							<script>ncom("Syntax: &lt;white&gt;Report \&lt;Min\|Hour\|Session\|time in seconds\&gt;")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(R|r)(E|e)(P|p)(O|o)(R|r)(T|t)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Report argWord</name>
							<script>local term = matches[8]
local total = 0
local dings = 0
if string.lower(term) == "min" then
  term = 60
  total = expPerTerm(term)
  dings = math.floor(tonumber(total) / 100000)
  ncom("Minute exp report: " .. total .. "exp \(" .. dings .. " dings\).")
  feedManager("Minute exp report: " .. total .. "exp \(" .. dings .. " dings\).")
elseif string.lower(term) == "hour" then
  term = 3600
  total = expPerTerm(term)
  dings = math.floor(tonumber(total) / 100000)
  ncom("Hourly exp report: " .. total .. "exp \(" .. dings .. " dings\).")
  feedManager("Hourly exp report: " .. total .. "exp \(" .. dings .. " dings\).")
elseif string.lower(term) == "session" then
  local now = math.floor(getEpoch())
  local session = tonumber(now) - tonumber(UI.SessionEpoch)
  if tonumber(session) &gt;= 86400 then
    session = 86400
  end
  term = session
  total = expPerTerm(term)
  dings = math.floor(tonumber(total) / 100000)
  ncom("Session exp report: " .. total .. "exp \(" .. dings .. " dings\).")
  feedManager("Session exp report: " .. total .. "exp \(" .. dings .. " dings\).")
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(R|r)(E|e)(P|p)(O|o)(R|r)(T|t)\s(\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Report argNumber</name>
							<script>local term = matches[8]
local total = expPerTerm(term)
local dings = math.floor(tonumber(total)/100000)
ncom("Over " .. tostring(term) .. " seconds: " .. total .. "exp \(" .. dings .. " dings\).")
feedManager("Over " .. tostring(term) .. " seconds: " .. total .. "exp \(" .. dings .. " dings\).")</script>
							<command></command>
							<packageName></packageName>
							<regex>^(R|r)(E|e)(P|p)(O|o)(R|r)(T|t)\s(\d+)$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
			<AliasGroup isActive="no" isFolder="yes">
				<name>qolWithReldi</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="no" isFolder="yes">
					<name>classes</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>barbarian</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>qolResolve</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>resolving</name>
								<script>local party = scripter.Party
local boolVar =  qolWithReldi.ShowAll
if party == "follow" then
  if combat then
    send("resolve",boolVar)
  else
    resolveTimer = tempTimer(1, [[expandAlias("resolving",false)]])
  end
else
  send("resolve",boolVar)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(R|r)(E|e)(S|s)(O|o)(L|l)(V|v)(I|i)(N|n)(G|g)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>resolving arg</name>
								<script>local arg = string.lower(tostring(matches[11]))
if arg == "on" then
  enableAlias("resolving")
  enableTimer("qolFailsafe")
  enableTrigger("resolving")
  rcom("Auto resolve is now &lt;white&gt;On")
  feedManager("Auto resolve is now &lt;white&gt;On")
  qolWithReldi.Resolving = true
elseif arg == "off" then
  disableAlias("resolving")
  rcom("Auto resolve is now &lt;white&gt;Off")
  feedManager("Auto resolve is now &lt;white&gt;Off")
  qolWithReldi.Resolving = false
else
  rcom(
    "Syntax: &lt;white&gt;Resolve &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;use '&lt;white&gt;help resolve&lt;DarkSlateGrey&gt;' to learn what it does."
  )
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(R|r)(E|e)(S|s)(O|o)(L|l)(V|v)(I|i)(N|n)(G|g)\s(\w+)$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>thief</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>qolTrance</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="no" isFolder="no">
								<name>trancing</name>
								<script>local party = scripter.Party
local boolVar =  qolWithReldi.ShowAll
if party == "follow" then
  if combat then
    send("trance",boolVar)
  else
    tranceTimer = tempTimer(1, [[expandAlias("trancing",false]])
  end
else
  send("trance",boolVar)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(T|t)(R|r)(A|a)(N|n)(C|c)(I|i)(N|n)(G|g)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>trancing arg</name>
								<script>local arg = tostring(string.lower(matches[10]))
if arg == "on" then
  enableAlias("trancing")
  enableTimer("qolFailsafe")
  enableTrigger("trancing")
  rcom("Auto trance is now &lt;white&gt;On")
  feedManager("Auto trance is now &lt;white&gt;On")
  qolWithReldi.Trancing = true
elseif arg == "off" then
  disableAlias("trancing")
  disableTrigger("trancing")
  rcom("Auto trance is now &lt;white&gt;Off")
  feedManager("Auto trance is now &lt;white&gt;Off")
  qolWithReldi.Trancing = false
else
  rcom(
    "Syntax: &lt;white&gt;trance &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;use '&lt;white&gt;help trance&lt;DarkSlateGrey&gt;' to learn what it does."
  )
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(T|t)(R|r)(A|a)(N|n)(C|c)(I|i)(N|n)(G|g)\s(\w+)$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>warrior</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>qolBerserk</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>berserking</name>
								<script>local party = scripter.Party
local boolVar =  qolWithReldi.ShowAll
if party == "follow" then
  if combat then
    send("berserk",boolVar)
  else
    berserkTimer = tempTimer(1, [[expandAlias("berserking",false]])
  end
else
  send("berserk",boolVar)
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(B|b)(E|e)(R|r)(S|s)(E|e)(R|r)(K|k)(I|i)(N|n)(G|g)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>berserking arg</name>
								<script>local arg = tostring(string.lower(matches[12]))
local Berserker = false
local class = tostring(string.lower(UI.name.Class))
if string.match(class, "berserker") then
  Berserker = true
end
if arg == "on" then
  enableAlias("berserking")
  enableTimer("qolFailsafe")
  enableTrigger("berserking")
  if Berserker then
    enableTrigger("berserker")
  end
  rcom("Auto berserk is now &lt;white&gt;On")
  feedManager("Auto berserk is now &lt;white&gt;On")
  qolWithReldi.Berserking = true
elseif arg == "off" then
  disableAlias("berserking")
  disableTrigger("berserking")
  disableTrigger("berserker")
  rcom("Auto berserk is now &lt;white&gt;Off")
  feedManager("Auto berserk is now &lt;white&gt;Off")
  qolWithReldi.Berserking = false
else
  rcom(
    "Syntax: &lt;white&gt;Berserk &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;use '&lt;white&gt;help berserk&lt;DarkSlateGrey&gt;' to learn what it does."
  )
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(B|b)(E|e)(R|r)(S|s)(E|e)(R|r)(K|k)(I|i)(N|n)(G|g)\s(\w+)$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>qolCenter</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>centering</name>
								<script>local boolVar =  qolWithReldi.ShowAll
if not combat then
  send("center", boolVar)
else
  centerTimer = tempTimer(1, [[expandAlias("centering",false]])
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(C|c)(E|e)(N|n)(T|t)(E|e)(R|r)(I|i)(N|n)(G|g)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>centering arg</name>
								<script>local arg = tostring(string.lower(matches[11]))
if arg == "on" then
  enableAlias("centering")
  enableTimer("qolFailsafe")
  enableTrigger("centering")
  rcom("Auto center is now &lt;white&gt;On")
  feedManager("Auto center is now &lt;white&gt;On")
  qolWithReldi.Centering = true
elseif arg == "off" then
  disableAlias("centering")
  disableTrigger("centering")
  rcom("Auto center is now &lt;white&gt;Off")
  feedManager("Auto center is now &lt;white&gt;Off")
  qolWithReldi.Centering = false
else
  rcom(
    "Syntax: &lt;white&gt;Center &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;use '&lt;white&gt;help center&lt;DarkSlateGrey&gt;' to learn what it does."
  )
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(C|c)(E|e)(N|n)(T|t)(E|e)(R|r)(I|i)(N|n)(G|g)\s(\w+)$</regex>
							</Alias>
						</AliasGroup>
						<AliasGroup isActive="yes" isFolder="yes">
							<name>qolWarcry</name>
							<script></script>
							<command></command>
							<packageName></packageName>
							<regex></regex>
							<Alias isActive="yes" isFolder="no">
								<name>warcrying</name>
								<script>local boolVar =  qolWithReldi.ShowAll
local party = scripter.Party
if party == "follow" then
  if combat then
    local arg = qolWithReldi.Warcry
    if string.lower(arg) ~= "none" then
      send("warcry "..arg,boolVar)
    else
      send("warcry",boolVar)
    end
  else
    warcryTimer = tempTimer(1, [[expandAlias("warcrying",false]])
  end
end</script>
								<command></command>
								<packageName></packageName>
								<regex>^(W|w)(A|a)(R|r)(C|c)(R|r)(Y|y)(I|i)(N|n)(G|g)$</regex>
							</Alias>
							<Alias isActive="yes" isFolder="no">
								<name>warcrying arg</name>
								<script>local arg = tostring(matches[11])
if string.lower(arg) == "off" then
  disableAlias("warcrying")
  disableTrigger("warcrying")
  rcom("Auto warcry is now &lt;white&gt;Off")
  feedManager("Auto warcry is now &lt;white&gt;Off")
  qolWithReldi.Warcrying = false
elseif string.lower(arg) == "on" then
  enableAlias("warcrying")
  enableTimer("qolFailsafe")
  enableTrigger("warcrying")
  rcom("Auto warcry is now &lt;white&gt;On")
  feedManager("Auto warcry is now &lt;white&gt;On")
  qolWithReldi.Warcrying = true
elseif string.lower(arg) == "none" then
  rcom(
  	    "Warcry will stop yelling.\n"
  	  )
      qolWithReldi.Warcry = arg
else
  qolWithReldi.Warcry = arg
  rcom(
  	    "Warcry will now yell \"&lt;white&gt;" .. arg .. "&lt;DarkSlateGrey&gt;\"\n"
  	  )
end


</script>
								<command></command>
								<packageName></packageName>
								<regex>^(W|w)(A|a)(R|r)(C|c)(R|r)(Y|y)(I|i)(N|n)(G|g)\s(\w+)$</regex>
							</Alias>
						</AliasGroup>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>misc</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="no" isFolder="no">
						<name>QuestComplete</name>
						<script>--This trigger will try to complete all quests it can.
--Syntax: "QuestComplete"
local boolVar =  qolWithReldi.ShowAll
for i=1, #questing.QuestsCompleted do
	send("Quest complete " ..questing.QuestsCompleted[i], boolVar)

end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(Q|q)(U|u)(E|e)(S|s)(T|t)(C|c)(O|o)(M|m)(P|p)(L|l)(E|e)(T|t)(E|)$</regex>
					</Alias>
					<AliasGroup isActive="no" isFolder="yes">
						<name>HeroEmpowerment</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>HeroEmpowerment arg</name>
							<script>--This trigger will try to empower the argument five (5) times.
--Syntax: "HeroEmpowerment arg"
local empower = matches[17]
local boolVar =  qolWithReldi.ShowAll
for i = 1,5 do
	send("hero empower "..empower, boolVar)
end

send("hero empower", boolVar)</script>
							<command></command>
							<packageName></packageName>
							<regex>^(H|h)(E|e)(R|r)(O|o)(E|e)(M|m)(P|p)(O|o)(W|w)(E|e)(R|r)(M|m)(E|e)(N|n)(T|t)\s(.*)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>HeroEmpowerment</name>
							<script>--This trigger will try to empower the argument five (5) times.
--Syntax: "HeroEmpowerment arg"
rcom(
    "Syntax: &lt;white&gt;HerEmpowerment &lt;Hero Empower&gt;\n            &lt;DarkSlateGrey&gt;This command will try to empower that hero empower five (5) times.\n            Use '&lt;white&gt;hero empower&lt;DarkSlateGrey&gt;' to see what the command accepts."
  )</script>
							<command></command>
							<packageName></packageName>
							<regex>^(H|h)(E|e)(R|r)(O|o)(E|e)(M|m)(P|p)(O|o)(W|w)(E|e)(R|r)(M|m)(E|e)(N|n)(T|t)$</regex>
						</Alias>
					</AliasGroup>
					<Alias isActive="yes" isFolder="no">
						<name>showall arg</name>
						<script>local arg = string.lower(tostring(matches[9]))
if arg == "on" then
  rcom("Showing all commands sent by the UI")
  feedManager("Showing all commands sent by the UI")
  qolWithReldi.ShowAll = true
elseif arg == "off" then
  rcom("Hiding all commands sent by the UI")
  feedManager("Hiding all commands sent by the UI")
  qolWithReldi.ShowAll = false
else
  rcom(
    "Syntax: &lt;white&gt;Showall &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;This will show or hide all commands automatically sent to the mud by the UI."
  )
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^(S|s)(H|h)(O|o)(W|w)(A|a)(L|l)(L|l)\s{0,1}(\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>qolHelp</name>
						<script>local message =
  [[QOL commands: &lt;white&gt;Resolving&lt;DarkSlateGrey&gt;, &lt;white&gt;Trancing&lt;DarkSlateGrey&gt;, &lt;white&gt;Berserking&lt;DarkSlateGrey&gt;, &lt;white&gt;Centering&lt;DarkSlateGrey&gt;, &lt;white&gt;Warcrying&lt;DarkSlateGrey&gt;,
            &lt;white&gt;PartyHeal&lt;DarkSlateGrey&gt;, &lt;white&gt;PartyHealWord&lt;DarkSlateGrey&gt;, &lt;white&gt;PartyGuard&lt;DarkSlateGrey&gt;, &lt;white&gt;PartyRescue&lt;DarkSlateGrey&gt;, &lt;white&gt;QuestComplete
            &lt;white&gt;HeroEmpowerment&lt;DarkSlateGrey&gt;, &lt;white&gt;ShowAll&lt;DarkSlateGrey&gt;, and &lt;white&gt;QOLHelp]]
rcom(message)</script>
						<command></command>
						<packageName></packageName>
						<regex>^(q|Q)(o|O)(l|L)\s{0,1}(h|H)(e|E)(l|L)(p|P)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>party</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>partyguard</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>partyguard arg</name>
							<script>local arg = tostring(string.lower(matches[12]))
if arg == "on" then
  enableTrigger("partyguard")
  rcom("You will now attempt to guard when asked.")
  feedManager("You will now attempt to guard when asked.")
  qolWithReldi.partyguard = "On"
elseif arg == "off" then
  disableTrigger("partyguard")
  rcom("You will no longer attempt to guard when asked.")
  feedManager("You will no longer attempt to guard when asked.")
  qolWithReldi.partyguard = "Off"
else
  rcom(
    "Syntax: &lt;white&gt;PartyGuard &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;Toggles whether or not you will attemtpt to guard."
  )
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(G|g)(U|u)(A|a)(R|r)(D|d)\s{0,1}(\w+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>partyheal</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>partyheal arg</name>
							<script>local arg = tostring(string.lower(matches[11]))
if arg == "on" then
  enableTrigger("partyheal")
  rcom("You will now attempt to heal when asked.")
  feedManager("You will now attempt to heal when asked.")
  qolWithReldi.partyheal = "On"
elseif arg == "off" then
  disableTrigger("partyheal")
  rcom("You will no longer attempt to heal when asked.")
  feedManager("You will no longer attempt to heal when asked.")
  qolWithReldi.partyheal = "Off"
else
  rcom(
    "Syntax: &lt;white&gt;PartyHeal &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;Toggles whether or not you will attemtpt to heal.\n            &lt;DarkSlateGrey&gt;Use &lt;white&gt;PartyHealWord Arg&lt;DarkSlateGrey&gt; to modify the spell attempted."
  )
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(H|h)(E|e)(A|a)(L|l)\s{0,1}(\w+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>partyhealword arg</name>
							<script>local arg = tostring(string.lower(matches[15]))
local Change = true
if arg == "reset" or arg == "heal"then
  arg = "heal"
  rcom("You new heal word is " ..arg..".")
  feedManager("You new heal word is " ..arg..".")
  qolWithReldi.healword = arg
elseif arg == "revitalize" then
  arg = "revitalize"
  rcom("You new heal word is " ..arg..".")
  feedManager("You new heal word is " ..arg..".")
  qolWithReldi.healword = arg
elseif arg == "mend" then
  arg = "mend"
  rcom("You new heal word is " ..arg..".")
  feedManager("You new heal word is " ..arg..".")
  qolWithReldi.healword = arg
else
  Change = false
  rcom(
    "Syntax: &lt;white&gt;PartyHealWord &lt;Heal|Mend|Revitalize|Reset&gt;."
  )
end
</script>
							<command></command>
							<packageName></packageName>
							<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(H|h)(E|e)(A|a)(L|l)(W|w)(O|o)(R|r)(D|d)\s{0,1}(\w+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>partyrescue</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>partyrescue arg</name>
							<script>local arg = tostring(string.lower(matches[13]))
if arg == "on" then
  enableTrigger("partyrescue")
  rcom("You will now attempt to rescue when asked.")
  feedManager("You will now attempt to rescue when asked.")
  qolWithReldi.partyrescue = "On"
elseif arg == "off" then
  disableTrigger("partyrescue")
  rcom("You will no longer attempt to rescue when asked.")
  feedManager("You will no longer attempt to rescue when asked.")
  qolWithReldi.partypescue = "Off"
else
  rcom(
    "Syntax: &lt;white&gt;PartyRescue &lt;on|off&gt;\n            &lt;DarkSlateGrey&gt;Toggles whether or not you will attemtpt to rescue.\n            &lt;DarkSlateGrey&gt;Use &lt;white&gt;PartyHealWord Arg&lt;DarkSlateGrey&gt; to modify the spell attempted."
  )
end</script>
							<command></command>
							<packageName></packageName>
							<regex>^(P|p)(A|a)(R|r)(T|t)(Y|y)(R|r)(E|e)(S|s)(C|c)(U|u)(E|e)\s{0,1}(\w+)$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage>
		<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
			<name>Left</name>
			<packageName></packageName>
			<script></script>
			<css></css>
			<commandButtonUp></commandButtonUp>
			<commandButtonDown></commandButtonDown>
			<icon></icon>
			<orientation>0</orientation>
			<location>0</location>
			<posX>0</posX>
			<posY>0</posY>
			<mButtonState>1</mButtonState>
			<sizeX>0</sizeX>
			<sizeY>0</sizeY>
			<buttonColumn>1</buttonColumn>
			<buttonRotation>0</buttonRotation>
			<buttonColor>#ffffff</buttonColor>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Help</name>
				<packageName></packageName>
				<script>expandAlias("xhelp all")</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Settings</name>
				<packageName></packageName>
				<script>setupWin:show()</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Stop Scripting</name>
				<packageName></packageName>
				<script>if auto_hunt then
  auto_hunt = false
  xuicom("You will no longer attempt to automatically hunt targets")
  
  combat = false
  hunting = false
else
  auto_hunt = true
  
end
</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
		</ActionGroup>
		<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
			<name>Middle</name>
			<packageName></packageName>
			<script></script>
			<css></css>
			<commandButtonUp></commandButtonUp>
			<commandButtonDown></commandButtonDown>
			<icon></icon>
			<orientation>1</orientation>
			<location>0</location>
			<posX>0</posX>
			<posY>0</posY>
			<mButtonState>1</mButtonState>
			<sizeX>0</sizeX>
			<sizeY>0</sizeY>
			<buttonColumn>1</buttonColumn>
			<buttonRotation>0</buttonRotation>
			<buttonColor>#ffffff</buttonColor>
		</ActionGroup>
		<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
			<name>Right</name>
			<packageName></packageName>
			<script></script>
			<css></css>
			<commandButtonUp></commandButtonUp>
			<commandButtonDown></commandButtonDown>
			<icon></icon>
			<orientation>0</orientation>
			<location>0</location>
			<posX>0</posX>
			<posY>70</posY>
			<mButtonState>1</mButtonState>
			<sizeX>0</sizeX>
			<sizeY>0</sizeY>
			<buttonColumn>1</buttonColumn>
			<buttonRotation>0</buttonRotation>
			<buttonColor>#ffffff</buttonColor>
			<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>General</name>
				<packageName></packageName>
				<script></script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>0</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>51</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>XUI Help</name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Change log</name>
						<packageName></packageName>
						<script>xuicom("Click a version number to see what was added.\n")
cechoLink(
  "0.1.3\n",
  [[xuicom("Made the bar interface more readable.\nAdded warriors to autogain\nAdded thieves to autogain\nFixed a bug when hunting with no target\nAdded a settings check function in the toolbar. This should help you see what settings you have toggled until I figure out a better UI solution.\nSelecting a script option will give the user more information\nFixed a bug that made auto renovi not auto renovi at all\nFollow mode exists now. See the help menu for information on how to use\nClass toggles refactored\nSearch mode has toggles now for fragments and money while auto hunting\nBroadened the scope of chaos hunt script\nGave cleric auto healing a much needed refactoring\nGave thief trance a much needed refactoring\n")]],
  "What was added in 0.1.3",
  true
)
cechoLink(
  "0.1.6\n",
  [[cecho("Added in a damage per round function. Should work out of the box.")]],
  "What was added in 0.1.6",
  true
)
cechoLink(
  "0.1.7\n",
  [[xuicom("Fixed it so auto should only be an alias when used at the start of a aline.\nAdded a quick and dirty resolve hack for barbarian.\nAdded fire widows and vicious driders to the hunting lists.")]],
  "What was added in 0.1.7",
  true
)
cechoLink(
  "0.1.8\n",
  [[xuicom("Cleaned up autofollow features. Should work more consistently.\nExtended the sustained DPR range to about 11 rounds. Should better reflect damage over time in terms of rounds.\nRounded numbers in the DPR meter.\nAdded an experience rate measurement.\nFixed a bug with customHunt that made it never work.XP Bar no longer shoots to the moon when you're over 100%. Now displays current non&gt;100 value and all the saved up dings.")]],
  "What was added in 0.1.8",
  true
)
cechoLink(
  "0.1.11\n",
  [[xuicom("Changed the incoming damager meter for the damage inertia function. This function will give you an at a glance way to tell if you're taking damage, or healing, and how much damage or healing you're receiving.\nAdded a scroll skillup utility. Activate it and buy and recite a scroll at the Viridian Spider.\nFixed some OOC patterns.\nAdded an enchantment refactoring utility. Activate it to retrieve the appropriate syntax.")]],
  "What was added in 0.1.11",
  true
)
cechoLink(
  "0.1.12\n",
  [[xuicom("Made the scaling in the XUI condition flow meter smoother. I accidentally tied it's rate of change to prompt instead of time.")]],
  "What was added in 0.1.12",
  true
)
cechoLink(
  "0.1.13\n",
  [[xuicom("Fixed some things with the condition flow bar, broke some other things. Fuck.")]],
  "What was added in 0.1.13",
  true
)
cechoLink(
  "0.1.14\n",
  [[xuicom("Added yeti undead to swamps rotation\nAuto heal now actual works\nAuto renovi should work without having to cast it first now.\nAuto trance will now recognize that it's fallen if someone knocks it off of you.\nA chat size customization has been added.\nChat timestamp toggle added.\nYou can now customize the delay on hunt in the autohunt script.\nRefactored chat features (Mostly just for me)")]],
  "What was added in 0.1.14",
  true
)
cechoLink(
  "0.1.15\n",
  [[xuicom("This changelog is now actually accessible.\nFixed an issue where gtell was logged twice.\nExtended full chat features to some that missed it.\nFixed the auto rearming function.\nShould no longer attempt to auto heal when that feature isn't selected.")]],
  "What was added in 0.1.15",
  true
)
cechoLink(
  "0.1.16\n",
  [[xuicom("Auto dividing will for mentalists.\nCooldown on auto reply to tells.\nAuto drink added. Four different options.\nAuto trance refactored. Should spam trance less, but spam auto trance more.")]],
  "What was added in 0.1.16",
  true
)
cechoLink(
  "0.1.17\n",
  [[xuicom("New &lt;white&gt;XP wave&lt;light_blue&gt; should help you visualize your XP flow. Each column is 10 minutes worth of data.")]],
  "What was added in 0.1.17",
  true
)

cechoLink(
  "0.1.19\n",
  [[xuicom("Bclear should now only trigger if you're in the auto script.\nAdded a warcry management function for knights/berserkers.\nCleaned up after myself in some backend stuff.\nAutomated proceed is now under QOL Auto.\nCleaned up gnolls scripting targets.\nCleaned up upper swamps scripting targets.\nCleaned up lower swamps scripting targets.\nHooded jerks now captured in gtell.\nThe OOC window will now update it's position in a lot more instances than before, meaning you can resize your window and OOC and it will update a new relative position.\nNew condition bar added. Should make combat more readable. Can be deactivated in XUI menu.\nGeneralized auto healing so you can now use heal, mass healing, mend, whatever.\nDetermThreshold is a thing now.\nGuerilla mode added for Guarng. Experimental, tempermental.\nWhen in auto scripting mode, the script will now stop and try to rest if your mana falls below a certain threshold.")]],
  "What was added in 0.1.19",
  true
)
</script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
					</Action>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>How to use</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Aggressive follow</name>
							<packageName></packageName>
							<script>xuicom("Just follow someone with the command &lt;white&gt;follow&lt;light_blue&gt; (make sure it's fully typed out) and then select autohunt.")</script>
							<css>		</css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>disarm protection</name>
							<packageName></packageName>
							<script>xuicom("XUI comes with built in disarm protection. It will first attempt to rewield immediately after being disarmed, if you don't immediately rewield it, it will continue to attempt to wield a weapon every round until successful.")
xuicom("To initialize this feature use &lt;white&gt;wield (arg)&lt;light_blue&gt;, being more specific using apostraphes is recommended so you will rewield precisely what you intend when disarmed.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>What is...</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Group of purple columns.</name>
							<packageName></packageName>
							<script>xuicom("This is the experience wave utility, intended to allow you to track your XP rate in an intuitive and visual way. Starting from the right, the XP wave function will begin to fill out as you kill, relative to the highest rate you've achieved. Each column is a 10 minute period of data, and overall all 6 columns track an hours worth of data.")

xuicom("In short, each column is 10 minutes and represents the % of xp per level you got.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Output box</name>
							<packageName></packageName>
							<script>xuicom("Under output: Last round tracks your last 3 seconds worth of damage information. Over time tracks the last 33 seconds worth of data on average. It attempts to only track what's happening in combat, but the data in this area may be dialed down by the amount of time you spend moving towards your target not doing any damage")
xuicom("Incoming: This is the condition flow utility. It tracks the last few rounds worth of data and reports back the relative change in your character's condition. Small and red means you, overall, took a small bit of damage. Small and green means that regardless of what happened in the last few rounds, overall you healed by a little. Black is neutral. Consider hero recalling if this bar is big and red.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
				</ActionGroup>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>XUI </name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Chat settings</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Spacing</name>
							<packageName></packageName>
							<script>if spacing then
	spacing = false
	cecho("&lt;light_blue&gt;[ XUI Settings ] Spacing in the miniconsole for chat will now be single.")
else
	spacing = true
	cecho("&lt;light_blue&gt;[ XUI Settings ] Spacing in the miniconsole for chat will now be double.")
end

createChatConsole()</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Gag chat input</name>
							<packageName></packageName>
							<script>if gagging then
	gagging = false
	cecho("&lt;light_blue&gt;You will now see chat input directly to the MUD.")
else
	gagging = true
	cecho("&lt;light_blue&gt;Chat input will only be shown in the miniconsole.")
end

createChatConsole()</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Font Size</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Larger</name>
								<packageName></packageName>
								<script>if chatFontSize == nil then chatFontSize = 8 end
chatFontSize = (chatFontSize + 1)
cecho("OOC","[ XUI ] &lt;light_blue&gt;Font size set to "..chatFontSize.."\n")

createChatConsole()</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Smaller</name>
								<packageName></packageName>
								<script>if chatFontSize == nil then chatFontSize = 8 end

if chatFontSize &gt; 6 then
chatFontSize = (chatFontSize - 1)
cecho("OOC","[ XUI ] &lt;light_blue&gt;Font size set to "..chatFontSize.."\n")
end


createChatConsole()</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Timestamps</name>
							<packageName></packageName>
							<script>useTimeStamps = variableToggle (useTimeStamps, "Nothing", "Time stamps will no longer appear in the chat window.", "Time stamps for the chat window activated." )

createChatConsole()</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Window size</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Wider</name>
								<packageName></packageName>
								<script>chatWidth = chatWidth + 100

createChatConsole()</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Thinner</name>
								<packageName></packageName>
								<script>chatWidth = chatWidth - 100

createChatConsole()</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
					</ActionGroup>
					<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Lower UI Settings</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Health Bar</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="no" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>ElementSize</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<Action isActive="no" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Element Colors</name>
							<packageName></packageName>
							<script>xuicom("To alter your UI colors, find the hex color code you'd like then use the following commands to alter them.")
xuicom("Health Bar: &lt;white&gt;healthCol (R, G, B)")
xuicom("Mana Bar: &lt;white&gt;manaCol (R, G, B)")
xuicom("Movement bar: &lt;white&gt;mvmCol (R, G, B)")
xuicom("Experience bar: &lt;white&gt;xpCol (R, G, B)")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>UI Settings</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Chat</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="yes" isFlatButton="no" useCustomLayout="no">
								<name>Hide</name>
								<packageName></packageName>
								<script>oocHidden = oocHidden or false

if not oocHidden then
	OOC:hide(auto)
	oocHidden = true
else
	OOC:show(auto)
	oocHidden = false
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Data</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Hide</name>
								<packageName></packageName>
								<script>dataHidden = dataHidden or false

if not dataHidden then
	dataCon:hide(auto)
	dataHidden = true
else
	dataCon:show(auto)
	dataHidden = false
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Toggle constant condition bar</name>
							<packageName></packageName>
							<script>conditionXUI = variableToggle(conditionXUI, "", "You will no longer see the Condition of enemies in the UI.", "You will now see the condition of enemies in the UI.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Reduced reduced spam</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Toggle</name>
							<packageName></packageName>
							<script>rrSpam = variableToggle (rrSpam, "", "You will now experience Xaos in it's normal mode.", "Summarizing damage events." )</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
				</ActionGroup>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Autohunt</name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Toggle</name>
						<packageName></packageName>
						<script>huntTarget = huntTarget or "Helpful Bob"
if auto_hunt then
  auto_hunt = false
  xuicom("You will no longer attempt to automatically hunt targets")
else
  send("auto ")
  auto_hunt = true
  xuicom(
    "You will attempt to automatically hunt something. Current settings indicate you're going to hunt " ..
    huntTarget
  )
	xuicom("Currently, tracking "..wielded.." as your wielded weapon.")
  if statusFollowing then
    --This bit handles the "What do I do if I'm following someone?" question
    obsessionMode = true
    huntTarget = followTarget
    location = nil
    xuicom("You are following " .. followTarget .. " and this script will attempt to hunt them.")
    xuicom("Obsession mode is on by default. Use &lt;white&gt;obsessionoff&lt;light_blue&gt; to turn it off.\n")
    cechoLink(
      "[ XUI ] &lt;light_blue&gt;Click here for more info on obsession mode.\n",
      [[xuicom("Obsession mode inputs hunt aggressively in an attempt to keep up with the party leader.\n")]],
      "obsession mode info",
      true
    )
    if huntTarget then
    else
      variableCheck(huntTarget, "hunt location")
      auto_hunt = false
    end
  end
end
combat = false
hunting = false</script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
					</Action>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Hunt Location</name>
						<packageName></packageName>
						<script>echo("Is this global?")</script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Chaos</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Lower Chaos (H1)</name>
								<packageName></packageName>
								<script>huntTarget = "chaos orc"
killTarget = "chaos"
location = "lower chaos"
cecho("&lt;orange&gt;Hunting location set to Lower Chaos (H1), happy hunting\n")
cecho("Danger: The Chaosling shard.\nSome swarm risk.\n")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Upper Swamps (H25)</name>
								<packageName></packageName>
								<script>huntTarget = "gnomish zombie"
killTarget = "zombie"
location = "upper swamps"
cecho("&lt;orange&gt;Hunting location set to Upper Swamps (H25), happy hunting\n")
cecho("Bosses: Kalshet. \nThe enemies here are primarily undead.\nSome swarm risk.\nThis area has masterful quality rings.\n")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Caves (H50)</name>
								<packageName></packageName>
								<script>huntTarget = "chaos mycanoid"
killTarget = "chaos"
location = "chaos caves"


cechoLink("&lt;orange&gt;Hunting location set to Chaos Caves (H50), happy hunting\n[[Click this text for additional info on this area.]]\n",
	[[cecho("Boss: Chaos Ogre Foreseer. Queen Anasasi.\nThis area is a high swarm risk.\nGreat selection of masterful quality weapons.\nGreat floater from the ogre foreseer.\nSome great stock items drop here.\n")]],
	"additional area info",
	true)
</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Lower Swamps (H50)</name>
								<packageName></packageName>
								<script>huntTarget = "ogre invoker"
killTarget = "zombie"
location = "lower swamps"
cecho("&lt;orange&gt;Hunting location set to Lower Swamps (H50), happy hunting\n")
cecho("Bosses: Grexs, Tlakvaast, Thersheln\n")
cecho("This area is primarily a swarm area. \nThe enemies are primarily undead. \nThis area has good supreme quality rings.\n")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Inferno</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Vicious Driders</name>
								<packageName></packageName>
								<script>huntTarget = "vicious drider"
killTarget = "drider"
location = "vicious drider"
cecho("&lt;orange&gt;Hunting location set to Vicious Driders, happy hunting\n")
</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Fire Widows</name>
								<packageName></packageName>
								<script>huntTarget = "fire widow"
killTarget = "widow"
location = "fire widows"
cecho("&lt;orange&gt;Hunting location set to Fire Widows, happy hunting\n")
</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Gnolls (H1-H10)</name>
							<packageName></packageName>
							<script>huntTarget = "gnolls halb"
killTarget = "gnolls"
location = "gnoll fortress"
cecho("&lt;orange&gt;Hunting location set to Gnoll Fortress (H1-H10), happy hunting\n")
cecho("Bosses: Gnoll Chieftain\n")
cecho("No swarm risk.\nMostly humanoid enemies here.\nLots of good and high quality items here.\nBeware the bandits, they will attempt to sap you.\n")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Black Mountain (H10)</name>
							<packageName></packageName>
							<script>huntTarget = "goblin warrior"
killTarget = "goblin"
location = "black mountain"
cecho("&lt;orange&gt;Hunting location set to Black Mountain (H10), happy hunting\n")
cecho("Bosses: The Balrog. Debundee.")
cecho("No swarm risk.\nMostly humanoid enemies here.\nWatch for being disarmed and dirt kicked.\n")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Duergar (H10)</name>
							<packageName></packageName>
							<script>huntTarget = "duergar soldier"
killTarget = "duergar"
location = "duergar"
cecho("&lt;orange&gt;Hunting location set to Duergar (H10, happy hunting\n")
cecho("Some swarm risk.\nMostly humanoid enemies here.\nWatch for being disarmed and dirt kicked.\n")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>The Maze (H75)</name>
							<packageName></packageName>
							<script>huntTarget = "auto tri"
killTarget = "soldier"
location = "the maze"
cecho("&lt;orange&gt;Hunting location set to the Maze (H75), happy hunting\n")
</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Guarng (H90)</name>
							<packageName></packageName>
							<script>huntTarget = "elven guard"
killTarget = "elven"
location = "guarng fortress"
cecho("&lt;orange&gt;Hunting location set to Guarng Fortress (H90), happy hunting\n")
cecho("Bosses: Guarng\n")
cecho("Minor swarm risk.\nMostly humanoid enemies here.\nElementals here.\nLots of magic damage.\nExcellent supreme quality wands to be found here.\n&lt;orange&gt;Artifacts can drop here.\n")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Help</name>
							<packageName></packageName>
							<script>xuicom("In short, clicking on an item in this list will give you a little informationa bout the area, such as swarm potential, decent drops you may find, boss enemies, and the level. It will also prime some variables for use in the autohunt feature.")
xuicom("To use it in an area, or for a purpose not covered in the hunt location list, the following commands may be helpful.")
xuicom("&lt;white&gt;customHunt:&lt;gray&gt; This will allow you to configure the hunt target for autohunt manually.")
xuicom("&lt;white&gt;customKill:&lt;gray&gt; Using this will change the output on the (kill target) commands that come up. This keyword should be more general.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Options</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Delay</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Add one second</name>
								<packageName></packageName>
								<script>huntWait = (huntWait + 1)

xuicom("You will wait "..huntWait.." seconds before acting on a successful hunt.")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Remove one second</name>
								<packageName></packageName>
								<script>if huntWait &gt; 0 then
huntWait = (huntWait - 1)

xuicom("You will wait "..huntWait.." seconds before acting on a successful hunt.")
else
	xuicom("You are already hunting instantaneously.")
end

</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Experimental</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Guerrilla mode</name>
								<packageName></packageName>
								<script>guerrillaMode = variableToggle(guerrillaMode, "", "You will no longer attempt to attack foes from a distance if they're bunched up.","You will now attempt to attack foes at a distance if they're bunched up.")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
					</ActionGroup>
				</ActionGroup>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Combat</name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Class actions</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>General</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Custom heal when low (Priority)</name>
								<packageName></packageName>
								<script>

autoHeal = variableToggle(autoHeal, "Auto Heal","Deactivating auto healing utility.", "Activating auto healing utility.")

if autoHeal then
	xuicom("Current healing threshold at "..autoHealThreshold..". To change this, use the command &lt;white&gt;autoHeal (arg). Current command is "..autoHealCommand..". To change this, use the command &lt;white&gt;autoHC (arg)&lt;light_blue&gt;. You can use this to trigger any ability below a % hp threshold.")
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Mentalist</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Mentalist Auto Debuff</name>
								<packageName></packageName>
								<script>--
--
-- if mentalistAutoDebuff then
-- mentalistAutoDebuff = false
-- xuicom("Smart mentalist casting deactivated.")
--
-- send("auto")
-- else
-- mentalistAutoDebuff = true
-- xuicom("Smart mentalist casting activated. Make sure class mentalist is activated in the menu.")
-- end
mentalistAutoDebuff =
  variableToggle(
    mentalistAutoDebuff,
    "",
    "You will no longer attempt to divide the will of your foes before wracking.",
    "You will attempt to weaken your foes resistances to mentalist attacks."
  )
if mentalistAutoDebuff then
  enableTimer("mentalistAutoTimer")
elseif not mentalistAutoDebuff then
  disableTimer("mentalistAutoTimer")
end</script>
								<css>	</css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Thief</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Thief auto trance</name>
								<packageName></packageName>
								<script>if thiefAutoTrance then
  xuicom("Auto trance disengaged.")
  thiefAutoTrance = false
  statusTrance = false
else
  xuicom("You will automatically attempt to stay in a trance in combat.")
  thiefAutoTrance = true
  statusTrance = false
send("auto")
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Rake</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>Spell slip</name>
									<packageName></packageName>
									<script>autoSpellSlip = variableToggle(autoSpellSlip, "Nothing", "You will no longer attempt to enter spell slip automatically.", "You will automatically maintain the edge.")</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
							</ActionGroup>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Warrior</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Center hack</name>
								<packageName></packageName>
								<script>if centerHack then
	centerHack = false
	xuicom("You will no longer attempt to spam center.")
else
	xuicom("You will now attempt to center after every kill. Ugh.")
	centerHack = true
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Determ mgmt</name>
								<packageName></packageName>
								<script>determMgmt = variableToggle(determMgmt,"Determation management", "Will no longer handle determination values automatically.","Attempting to manage determination values automatically. Current threshold set at "..determThresh..". To manage this, use &lt;white&gt;autoDet (arg)&lt;light_blue&gt;.")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Barbarian</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Resolve hack</name>
								<packageName></packageName>
								<script>if resolveHack then
	resolveHack = false
	xuicom("You will no longer attempt to spam resolve.")
else
	xuicom("You will now attempt to resolve after every kill. Ugh.")
	resolveHack = true
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Knight/Berserker</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Warcry Hack</name>
								<packageName></packageName>
								<script>warcryHack = variableToggle(warcryHack, "", "You will no longer attempt to automatically warcry.", "You will now attempt to automatically warcry.")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Pledges</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Auto Renovi</name>
							<packageName></packageName>
							<script>renoviThreshold = renoviThreshold or 0
if autoRenovi then
	autoRenovi = false
	xuicom("You will no longer attempt to renovi automatically")
else
	autoRenovi = true
	xuicom("You will attempt to use the pledge renovi below a certain threshold. Use the command &lt;white&gt;renoviThreshold (arg)&lt;light_blue&gt; to change the threshold.")
	cecho("[ XUI ] &lt;light_blue&gt;Current threshold at "..renoviThreshold)
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
				</ActionGroup>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Utilities</name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Class Management</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Current Classes</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Cleric</name>
								<packageName></packageName>
								<script>cleric = classToggle(cleric, "cleric")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Mage</name>
								<packageName></packageName>
								<script>mage = classToggle(mage, "mage")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Mentalist</name>
								<packageName></packageName>
								<script>mentalist = classToggle(mentalist, "mentalist")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Thief</name>
								<packageName></packageName>
								<script>thief = classToggle(thief, "thief")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>warrior</name>
								<packageName></packageName>
								<script>warrior = classToggle(warrior, "warrior")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Quick Gain</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>mage</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>base</name>
									<packageName></packageName>
									<script>for i = 1,table.size(mage_buff) do
	send("gain "..tostring(mage_buff[i]))
end


for i = 1, table.size(mage_utility) do
	send("gain "..tostring(mage_utility[i]))
end

for i = 1, table.size(mage_combat) do
	send("gain "..tostring(mage_combat[i]))
end

for i = 1, table.size(mage_skills) do
	send("gain "..tostring(mage_skills[i]))
end</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>Mentalist</name>
									<packageName></packageName>
									<script>terminus = table.size(mentalist_buffs) 
for i = 1,terminus do
	send("gain "..tostring(mentalist_buffs[i]))
end


for i = 1, table.size(mentalist_utility) do
	send("gain "..tostring(mentalist_utility[i]))
end

for i = 1, table.size(mentalist_combat) do
	send("gain "..tostring(mentalist_combat[i]))
end

send("gain arcane mastery")</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
							</ActionGroup>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>cleric</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>base</name>
									<packageName></packageName>
									<script>
for i = 1,terminus do
	send("gain "..tostring(cleric_buffs[i]))
end


for i = 1, table.size(cleric_utility) do
	send("gain "..tostring(cleric_utility[i]))
end

for i = 1, table.size(cleric_combat) do
	send("gain "..tostring(cleric_combat[i]))
end

for i = 1, table.size(cleric_skills) do
	send("gain "..tostring(cleric_skills[i]))
end

for i = 1, table.size(cleric_healing) do
	send("gain "..tostring(cleric_healing[i]))
end</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
							</ActionGroup>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>warrior</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>base</name>
									<packageName></packageName>
									<script>for i = 1, table.size(warrior_skills) do
	send("gain "..tostring(warrior_skills[i]))
end</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>Geomancer</name>
									<packageName></packageName>
									<script>for i = 1,table.size(geomancer_buffs) do
	send("gain "..tostring(geomancer_buffs[i]))
end


for i = 1, table.size(geomancer_utility) do
	send("gain "..tostring(geomancer_utility[i]))
end

for i = 1, table.size(geomancer_combat) do
	send("gain "..tostring(geomancer_combat[i]))
end

for i = 1, table.size(geomancer_skills) do
	send("gain "..tostring(geomancer_skills[i]))
end</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
							</ActionGroup>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>barbarian</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</ActionGroup>
							<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>thief</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
								<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
									<name>base</name>
									<packageName></packageName>
									<script>for i = 1, table.size(thief_skills) do
	send("gain "..tostring(thief_skills[i]))
end</script>
									<css></css>
									<commandButtonUp></commandButtonUp>
									<commandButtonDown></commandButtonDown>
									<icon></icon>
									<orientation>1</orientation>
									<location>0</location>
									<posX>0</posX>
									<posY>0</posY>
									<mButtonState>1</mButtonState>
									<sizeX>0</sizeX>
									<sizeY>0</sizeY>
									<buttonColumn>1</buttonColumn>
									<buttonRotation>0</buttonRotation>
									<buttonColor>#ffffff</buttonColor>
								</Action>
							</ActionGroup>
						</ActionGroup>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Quick Buffs</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Mentalist</name>
								<packageName></packageName>
								<script>terminus = table.size(mentalist_buffs) 

for i = 1,terminus do
	send("cast '"..mentalist_buffs[i].."'")
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Cleric</name>
								<packageName></packageName>
								<script>terminus = table.size(cleric_buffs) 
for i = 1,terminus do
	send("cast '"..cleric_buffs[i].."'")
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Mage</name>
								<packageName></packageName>
								<script>terminus = table.size(mage_buffs) 
for i = 1,terminus do
	send("cast '"..mage_buffs[i].."'")
end</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown>mageBuff</commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
							<Action isActive="no" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Geomancer</name>
								<packageName></packageName>
								<script></script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>RP tools</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>RP Helper</name>
							<packageName></packageName>
							<script></script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
							<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
								<name>Customized Say</name>
								<packageName></packageName>
								<script>cecho("[ XUI ] &lt;light_blue&gt;To use this feature, type &lt;white&gt;customSay (arg)&lt;light_blue&gt;. Everything in the (arg) spot will appear right before your say text when you type say.\n")
cecho("[ XUI ] &lt;light_blue&gt;This modification will also be applied before IC's when using the ic command.\n")</script>
								<css></css>
								<commandButtonUp></commandButtonUp>
								<commandButtonDown></commandButtonDown>
								<icon></icon>
								<orientation>1</orientation>
								<location>0</location>
								<posX>0</posX>
								<posY>0</posY>
								<mButtonState>1</mButtonState>
								<sizeX>0</sizeX>
								<sizeY>0</sizeY>
								<buttonColumn>1</buttonColumn>
								<buttonRotation>0</buttonRotation>
								<buttonColor>#ffffff</buttonColor>
							</Action>
						</ActionGroup>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>QOL</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>5xHero empowerment</name>
							<packageName></packageName>
							<script>xuicom("To use this feature, type &lt;white&gt;mhemp (desired empowerment)")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>faceless: fragment to shard</name>
							<packageName></packageName>
							<script>send("quest request fragments of the fallen god")
send("give 'fragment fallen' faceless")
send("give 'fragment fallen' faceless")
send("quest complete fragments of the fallen god")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Hunger Management</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Soup</name>
							<packageName></packageName>
							<script>autoDrink = variableToggle(autoDrink,"autoDrink", "You've chosen to disable drinking soup automatically.", "You will automatically attempt to drink soup every minute.")

-- xuicom("The autoDrink variable is set to "..tostring(autoDrink))
xaos.config.drinkMode = "soup"



 
if autoDrink then
-- xuicom("Logic thinks autoDrink is true, should be enabling the timer")
enableTimer("drinkTimer")
elseif not autoDrink then
disableTimer("drinkTimer")
end</script>
							<css>		</css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Creation</name>
							<packageName></packageName>
							<script>autoDrink = variableToggle(autoDrink,"autoDrink", "You've chosen to disable drinking soup automatically.", "You will automatically attempt to drink soup every minute.")

-- xuicom("The autoDrink variable is set to "..tostring(autoDrink))
xaos.config.drinkMode = "creation"



 
if autoDrink then
-- xuicom("Logic thinks autoDrink is true, should be enabling the timer")
enableTimer("drinkTimer")
elseif not autoDrink then
disableTimer("drinkTimer")
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Corpse</name>
							<packageName></packageName>
							<script>autoDrink = variableToggle(autoDrink,"autoDrink", "You've chosen to disable corpse eating automatically.", "You will automatically attempt to eat a corpse every minute.")

-- xuicom("The autoDrink variable is set to "..tostring(autoDrink))
xaos.config.drinkMode = "corpse"



 
if autoDrink then
-- xuicom("Logic thinks autoDrink is true, should be enabling the timer")
enableTimer("drinkTimer")
xuicom("For this setting, you will attempt to drink from your inventory, use &lt;white&gt;customDrink (arg)&lt;light_blue&gt; to set what you attempt to drink from. Current setting is "..customDrink)
elseif not autoDrink then
disableTimer("drinkTimer")
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Butchery</name>
							<packageName></packageName>
							<script>autoDrink = variableToggle(autoDrink,"autoDrink", "You've chosen to disable butchery eating automatically.", "You will automatically attempt to butcher every minute.")

-- xuicom("The autoDrink variable is set to "..tostring(autoDrink))
xaos.config.drinkMode = "butchery"



 
if autoDrink then
-- xuicom("Logic thinks autoDrink is true, should be enabling the timer")
enableTimer("drinkTimer")
xuicom("For this setting, you will attempt to drink from your inventory, use &lt;white&gt;customDrink (arg)&lt;light_blue&gt; to set what you attempt to drink from. Current setting is "..customDrink)
elseif not autoDrink then
disableTimer("drinkTimer")
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Collection</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Butcher</name>
							<packageName></packageName>
							<script>auto_butcher = auto_butcher or nil

if auto_butcher then
	auto_butcher = false
else
	auto_butcher = true
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Skin</name>
							<packageName></packageName>
							<script>auto_skin = auto_skin or nil

if auto_skin then
	auto_skin = false
else
	auto_skin = true
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Enchanting</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Enchanting consolidation</name>
							<packageName></packageName>
							<script>xuicom("To use this feature, use the command &lt;white&gt;encCons (arg)&lt;light_blue&gt;. You will attempt to, using reagents in your inventory, refactor your enchanting mats into higher level components. Useful for consolidating your collection into a smaller package. Accepted arguments are ember, focus, source, and orb.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Automated proceed</name>
							<packageName></packageName>
							<script>xuicom("To use this feature, use the command &lt;white&gt;proc (arg)&lt;light_blue&gt;. You will attempt to proceed with the currently selected enchantment equal to the argument inputted, only stopping at signs that your item would be destroyed.")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Skill up</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>Scroll mastery</name>
							<packageName></packageName>
							<script>scrollSpam = variableToggle(scrollSpam, "Name", "You will no longer automatically recite scrolls from the Viridian Spider", "To use this, buy a scroll of &lt;white&gt;giant strength&lt;light_blue&gt; and then recite it successfully. Ensure you're at the shop you can buy it from. The Viridian Spider in Visari is where this script was tested.")
if scrollSpam then
  enableTrigger("Scrollspam")
else
  disableTrigger("Scrollspam")
end</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Auto-login</name>
						<packageName></packageName>
						<script></script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
						<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
							<name>How to</name>
							<packageName></packageName>
							<script>xuicom("To set up what login you'd like to use upon disconnect and reconnect, use the command &lt;white&gt;autoLog &lt;arg&gt;&lt;light_blue&gt;. If you wanted to reconnect as Wrain, with the password 'password123', you'd type\n&lt;white&gt;autoLog Wrain password123")</script>
							<css></css>
							<commandButtonUp></commandButtonUp>
							<commandButtonDown></commandButtonDown>
							<icon></icon>
							<orientation>1</orientation>
							<location>0</location>
							<posX>0</posX>
							<posY>0</posY>
							<mButtonState>1</mButtonState>
							<sizeX>0</sizeX>
							<sizeY>0</sizeY>
							<buttonColumn>1</buttonColumn>
							<buttonRotation>0</buttonRotation>
							<buttonColor>#ffffff</buttonColor>
						</Action>
					</ActionGroup>
					<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>Enchanting GUI</name>
						<packageName></packageName>
						<script>
if labelshowing then
baseEnchContainer:hide()
else
baseEnchContainer:show()
end

labelshowing = not labelshowing</script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
					</Action>
				</ActionGroup>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Getting Started</name>
					<packageName></packageName>
					<script>xuicom("Welcome to XUI. To sync your prompt to the XUI prompt, type &lt;white&gt;marchPrompt.")
xuicom("It's suggested you save your prompt somewhere before you do, but XUI will also save it so you can retrieve it at a later date.")
xuicom("To get an idea of what you can track and manage using the XUI right now, click on the script report button.")
xuicom("The minimum you should need to start scripting is the correct prompt, a location chosen from beneath the autohunt menu, and the location toggled.")</script>
					<css>					</css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Script report</name>
					<packageName></packageName>
					<script>
cecho("[ XUI ] &lt;light_blue&gt;Vital statistics: \n")
cecho("&lt;light_blue&gt;"..string.format("%10s  %d","HP",current_health).."\n")
cecho("&lt;light_blue&gt;"..string.format("%10s  %d","Mana",current_mana).."\n")
cecho("&lt;light_blue&gt;"..string.format("%10s  %d","XP",current_xp).."\n")


if autoDrink then
	xuicom("Current autodrink mode: "..drinkMode)
else

end


if statusFollowing then
	xuicom("Currently following "..followTarget)
else
	xuicom("Not currently following anyone.")
end

xuicom("Auto butcher: "..tostring(auto_butcher)..". Auto skinning: "..tostring(auto_skin))

xuicom("Currently wielding: "..wielded)
xuicom("Currently following: "..following)

--General script stuff
xuicom("Script variables:")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Location:",location).."\n")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Hunting:",tostring(auto_hunt)).."\n")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Delay:",huntWait).."\n")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Autorest:",tostring(autoRest)).."\n")

--Individual options
xuicom("Individualized functionality:")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Auto Healing:",tostring(autoHeal)).."\n")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Threshold:",tostring(autoHealThreshold)).."\n")
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Command:",autoHealCommand).."\n")

--Mentalist stuff

cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Mentalist Debuff:",tostring(mentalistAutoDebuff)).."\n")

-- Thief stuff
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Auto Trance:",tostring(thiefAutoTrance)).."\n")
--rake
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Spell Slip:",tostring(autoSpellSlip)).."\n")
--warrior
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Center hack:",tostring(centerHack)).."\n")

cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Determ:",tostring(determMgmt)).."\n")

if determMode then
	cecho("&lt;light_blue&gt;"..string.format("%20ss  %d","Threshold:",determThresh).."\n")
end
--barb
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Resolve hack:",tostring(resolveHack)).."\n")
--pledges
cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Renovi:",tostring(autoRenovi)).."\n")

cecho("&lt;light_blue&gt;"..string.format("%20s  %s","Threshold: ",renoviThreshold).."\n")</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>Testing menu</name>
					<packageName></packageName>
					<script></script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
					<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
						<name>master test</name>
						<packageName></packageName>
						<script>-- Testing disarm


-- trigger Disarm
xuicom("Testing disarm")
expandAlias("`echo An ogre DISARMS you and sends a etc. flying.")

tempTimer(1,[[testing(true,statusDisarm, "Not recognizing you as disarmed.")]])

tempTimer(1.1,[[statusDisarm = false]])</script>
						<css></css>
						<commandButtonUp></commandButtonUp>
						<commandButtonDown></commandButtonDown>
						<icon></icon>
						<orientation>1</orientation>
						<location>0</location>
						<posX>0</posX>
						<posY>0</posY>
						<mButtonState>1</mButtonState>
						<sizeX>0</sizeX>
						<sizeY>0</sizeY>
						<buttonColumn>1</buttonColumn>
						<buttonRotation>0</buttonRotation>
						<buttonColor>#ffffff</buttonColor>
					</Action>
				</ActionGroup>
			</ActionGroup>
			<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Graph</name>
				<packageName></packageName>
				<script></script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>1 min</name>
					<packageName></packageName>
					<script>displaytimespan=1
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>5 min</name>
					<packageName></packageName>
					<script>displaytimespan=5
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>10 min</name>
					<packageName></packageName>
					<script>displaytimespan=10
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>15 min</name>
					<packageName></packageName>
					<script>displaytimespan=15
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>30 min</name>
					<packageName></packageName>
					<script>displaytimespan=30
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>1 hr</name>
					<packageName></packageName>
					<script>displaytimespan=60
updateDisplayTime()</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
			</ActionGroup>
		</ActionGroup>
		<ActionGroup isActive="no" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
			<name>RightWindows</name>
			<packageName></packageName>
			<script></script>
			<css></css>
			<commandButtonUp></commandButtonUp>
			<commandButtonDown></commandButtonDown>
			<icon></icon>
			<orientation>0</orientation>
			<location>0</location>
			<posX>1441</posX>
			<posY>235</posY>
			<mButtonState>1</mButtonState>
			<sizeX>0</sizeX>
			<sizeY>0</sizeY>
			<buttonColumn>0</buttonColumn>
			<buttonRotation>0</buttonRotation>
			<buttonColor>#ffffff</buttonColor>
			<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Fixes</name>
				<packageName></packageName>
				<script></script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
				<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
					<name>FixWindows</name>
					<packageName></packageName>
					<script>chatFontSize = 14
chatWrap = 55
chatWidth = 650
createChatConsole()

--Move Main Window
setBorderLeft(50)
setBorderRight(2)
setWindowWrap("main",100)

--Move Chat
--dataCon:setFontSize(14)
--dataCon:resize(650,"48%")
--dataCon:move(-650,"52%")


--Move Left Container
xprDisplay:move("2%","0%")
goldDisplay:move("2%","45%")
dprDisplay:move("2%","60%")

xp_container:move("5%",0)

enableScrollBar("queststatus")
enableScrollBar("data")
enableScrollBar("OOC")</script>
					<css></css>
					<commandButtonUp></commandButtonUp>
					<commandButtonDown></commandButtonDown>
					<icon></icon>
					<orientation>1</orientation>
					<location>0</location>
					<posX>0</posX>
					<posY>0</posY>
					<mButtonState>1</mButtonState>
					<sizeX>0</sizeX>
					<sizeY>0</sizeY>
					<buttonColumn>1</buttonColumn>
					<buttonRotation>0</buttonRotation>
					<buttonColor>#ffffff</buttonColor>
				</Action>
			</ActionGroup>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Quests</name>
				<packageName></packageName>
				<script>
if labelquestshowing then
  --clearWindow("queststatus")
  tempTimer(1,function () 
    questStatusCon:hide()
  end)
else
questStatusCon:show()
end

labelquestshowing = not labelquestshowing
</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown>Hide Quests</commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Funfurmanual</name>
				<packageName></packageName>
				<script>funfurmanual = not funfurmanual

echo("\n " .. display(funfurmanual) .. "\n")</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
		</ActionGroup>
	</ActionPackage>
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Xaos</name>
			<packageName></packageName>
			<script>if xaos == nil then xaos = {} end
if mysettings == nil then mysettings = {} end

local firstload = true

mysettings.version = "0.2.1.0"

if io.exists(getMudletHomeDir() .. "/mysettings.dat") then
  table.load(getMudletHomeDir() .. "/mysettings.dat",mysettings)
end

if mysettings.oocchatsize == nil then mysettings.oocchatsize = 12 end
if mysettings.questfontsize == nil then mysettings.questfontsize = 10 end
if mysettings.variablefontsize == nil then mysettings.variablefontsize =  10 end
if mysettings.scorefontsize== nil then mysettings.scorefontsize =  10 end
if mysettings.datafontsize== nil then mysettings.datafontsize = 12 end
if mysettings.feedconsole== nil then mysettings.feedconsole =  "data" end
if mysettings.UIType== nil then mysettings.UIType =  "XUI" end
if mysettings.showprompt == nil then mysettings.showprompt = false end

if mysettings.features == nil then mysettings.features = {} end
if mysettings.features.msdp == nil then mysettings.features.msdp = false end

if mysettings.uicomponents == nil then mysettings.uicomponents = {} end
if mysettings.uicomponents.partybar == nil then mysettings.uicomponents.partybar = "off" end
if mysettings.uicomponents.partybox == nil then mysettings.uicomponents.partybox = "on" end
if mysettings.uicomponents.opponentbar == nil then mysettings.uicomponents.opponentbar = "off" end
if mysettings.uicomponents.debuffbar == nil then mysettings.uicomponents.debuffbar = "off" end

function savemysettings()
  table.save(getMudletHomeDir() .. "/mysettings.dat",mysettings)
end

savemysettings()

function setFeature(name,enable)
  mysettings.features[name] = enable
  cecho("\n&lt;yellow&gt;Setting Feature " .. name .. ": " .. (enable and "On" or "Off"))
  if name == "msdp" then
    if enable then 
      enableScript("MSDP")
      registerMSDPEvents()
      msdpConnect()
      loadMSDPUI()
        
    else
      unregisterMSDPEvents()
      disableScript("MSDP")
      if not firstload then
        cecho("\n&lt;yellow&gt;It is recommended to restart Mudlet for full effect")
      end
    end
  end
  savemysettings()
end

for k,v in pairs(mysettings.features) do
  tempTimer(1,
    function() 
      setFeature(k,v)
    end
  )
end

firstload = false</script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Variables</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Helpers</name>
					<packageName></packageName>
					<script>function findTableEntry(tbl,func)

  for k,v in pairs(tbl) do
    if func(v) then
      return {key=k,value=v}
    end
  end
  return nil
end

function containsTableEntry(tbl,name,value)

  return findTableEntry(tbl,  
    function (item) 
      return item[name] == value 
    end) ~= nil

end

function indexTableEntry(tbl,name,value)

   table.index_of(tbl,findTableEntry(tbl,  
    function (item) 
      return item[name] == value 
    end))

end


function getDimensions(name,adjusted)
  if name == "main" then
    local windowwidth,windowheight = getMainWindowSize()
    local windowx = 0
    local windowy = 0
    if adjusted then
      windowwidth = windowwidth-getBorderLeft()-getBorderRight()
      windowheight = windowheight-getBorderTop()-getBorderBottom()
      windowx = getBorderLeft()
      windowy = getBorderTop()
    end
    return {width=windowwidth,height=windowheight,x=windowx,y=windowy}
  elseif name.name ~= nil then
    --Geyser
    
    local windowwidth = name.get_width()
    local windowheight = name.get_height()
    local windowx = name.get_x()
    local windowy = name.get_y()
    
    return {width=windowwidth,height=windowheight,x=windowx,y=windowy}

  else
    local windowwidth,windowheight = getUserWindowSize(name)
    local windowx = 0
    local windowy = 0
    if adjusted then
      windowwidth = windowwidth-getBorderLeft()-getBorderRight()
      windowheight = windowheight-getBorderTop()-getBorderBottom()
      windowx = getBorderLeft()
      windowy = getBorderTop()
    end
    return {width=windowwidth,height=windowheight,x=windowx,y=windowy}
  end
  
  
end

function getRelativeDimensions(name,adjusted)
  if name == "main" then
    local windowwidth,windowheight = getMainWindowSize()
    local windowx = 0
    local windowy = 0
    if adjusted then
      windowwidth = windowwidth-getBorderLeft()-getBorderRight()
      windowheight = windowheight-getBorderTop()-getBorderBottom()
      windowx = getBorderLeft()
      windowy = getBorderTop()
    end
    return {width=windowwidth,height=windowheight,x=windowx,y=windowy}
  elseif name.name ~= nil then
    --Geyser
    
    local windowwidth = name.width
    local windowheight = name.height
    local windowx = name.x
    local windowy = name.y
    
    return {width=windowwidth,height=windowheight,x=windowx,y=windowy}

  else
    local windowwidth,windowheight = getUserWindowSize(name)
    local windowx = 0
    local windowy = 0
    if adjusted then
      windowwidth = windowwidth-getBorderLeft()-getBorderRight()
      windowheight = windowheight-getBorderTop()-getBorderBottom()
      windowx = getBorderLeft()
      windowy = getBorderTop()
    end
    return {width=windowwidth,height=windowheight,x=windowx,y=windowy}
  end
  
  
end</script>
					<eventHandlerList />
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Lists</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Areas</name>
						<packageName></packageName>
						<script>-- H001 - H100 --- Chessboard(chess), Gnolls(gnolls), Maeklum Asteroid(maeklums), Black Mountain(blackmounta), Chaos Caves(chaoscaves)
-- H100 - H150 --- Chaos Caves(chaoscaves), Lightning Claws(claws)
-- H150 - H200 --- Lightning Claws(claws), Maze(maze)
-- H200 - H250 --- Maze(maze), Undead Gnolls(undeadgnoll), Necromancer Tower(necrotower)
-- H250 - H300 --- Necromancer Tower(necrotower)
-- H300 - H350 --- Fire Widows(widows)
-- H350 - H400 --- Titan Valley(titanvalley), Servants of Misery(misery)
-- H400 - H450 --- Chaos Swamps(swamps), Gremlins(gremlinwoods), Spark Imps(sparkchasm)
-- H450 - H500 --- Cryo Imps(cryocorridor) Blood Imps(bloodcave), Flames Imps(flamecave)
-- H500 - H550 --- Twisted Fae Forest(twistedfae)
-- H550 - H600 --- Twisted Fae Forest(twistedfae), Savage Lands(dinoland)
-- H600 - H650 --- Blaze Ghouls(blaze), Cave Imps(cave imp)
-- H650 - H700 --- Blaze Ghouls(blaze), Cave Imps(cave imp)
-- H700 - H750 --- Champions of Koruk(champsofkoruk)
-- H750 - H800 --- Slayers of Koruk(korukslayer)
-- H800 - H850 --- (Coming Soon)
-- H850 - H900 --- Guarng(celestial)
-- H900 - H950 --- Guarng(celestial)

xaos.areas= {
	{
		name = "asteroid",
		keyword = "maeklums",
		killlist = "maeklums",
		keywordoverride = true,
		scanmode = true,
		killarray = {"Maeklum elite warrior","Maeklum page","Maeklum elementalist","Maeklum soldier"},
	},

  {
		name = "gnolls",
		keyword = "gnolls",
		killlist = "gnolls",
		keywordoverride = true,
		scanmode = true,
		killarray = {"tall gnoll halberdier","Gnoll Armsman","Gnoll Bandit","gnoll shaman","Gnoll Swordsman"},
	},
	{
		name = "blackmount",
		keyword = "blackmounta",
		killlist = "elite goblin,giant orc,blackmount",
		keywordoverride = false,
		scanmode = true,
		killarray = {"elite goblin guard","diseased giant orc","goblin warrior","goblin healer","large goblin"},
	},
	{
		name = "claws",
		keyword = "claws",
		killlist = "claws",
		keywordoverride = true,
		scanmode = true,
		killarray = {"lightning claw","greater lightning claw"},
	},
    {
		name = "necrotower",
		keyword = "necrotower",
		killlist = "necrotower",
		keywordoverride = true,
		scanmode = true,
		killarray = {"necromancer apprentice","skeletal guard","zombie guard","hooded human"},
  },
  {
		name = "maze",
		keyword = "maze",
		killlist = "maze",
		keywordoverride = false,
		scanmode = true,
		huntWait=3,
		endcombatWait=3,
		killarray = {"lost soldier","stone gargoyle","crossed grey python","wild Tarani beast","giant maze walker","alpha Javal","flame-haired Javal",},
  },
  {
		name = "firewidow",
		keyword = "fire widow",
		killlist = "fire widow,vicious drider",
		keywordoverride = false,
		scanmode = true,
		killarray = {"fire widow","vicious drider"},
  },
  {
		name = "swamps",
		keyword = "swamps",
		killlist = "swamps",
		keywordoverride = true,
		scanmode = true,
    --"gnomish zombie",
		killarray = {"vondoni zombie","centaur zombie","fleshless zombie troll","zombie bishop","defender of Kalshet"},
	}, 
  {
		name = "titanvalley",
		keyword = "titanvalley",
		killlist = "titanvalley",
		keywordoverride = true,
		scanmode = true,
		killarray = {"large boar","titan hunter","titan champion","titan shaman",},
	},
	{
		name = "misery",
		keyword = "misery",
		killlist = "misery",
		keywordoverride = true,
		scanmode = true,
		killarray = {"servant of misery","blackstone mauler","prime umberhulk","deadly umberhulk"},
	},
    {
		name = "gremlins",
		keyword = "gremlinwoods",
		killlist = "gremlinwoods",
		keywordoverride = true,
		scanmode = true,
		killarray = {"gremlin tracker","disgusting gremlin","dirty gremlin",
    --"gremlin prophet","Meimei"
    },
	}, 
	{
		name = "sparkimp",
		keyword = "sparkchasm",
		killlist = "sparkchasm",
		keywordoverride = true,
		scanmode = true,
		killarray = {"baby spark imp","fully charged spark imp","spark imp bruiser","imp slasher"},
	}, 
	{
		name = "cryoimp",
		keyword = "cryocorridor",
		killlist = "cryocorridor",
		keywordoverride = true,
		scanmode = true,
		killarray = {"cryo-soldier","imp enforcer","cryo imp spawnling"},
	}, 
	{
		name = "bloodimp",
		keyword = "bloodcave",
		killlist = "bloodcave",
		keywordoverride = true,
		scanmode = true,
		killarray = {"ferocious blood imp","disgusting blood imp","savage blood imp"},
	},
	{
		name = "flameimp",
		keyword = "flame imp",
		killlist = "flame imp",
		keywordoverride = true,
		scanmode = true,
		killarray = {"young flame imp","primitive flame imp","flame imp destroyer","vicious flame imp","fully formed flame imp","primal flame imp","untamed flame imp"},
	},
	{
		name = "dinoland",
		keyword = "dinoland",
		killlist = "dinoland",
		keywordoverride = true,
		scanmode = true,
		killarray = {"large velociraptor","deadly snapping turtle","savage velociraptor","angry turtle","angry earth elemental","Tyrannosaur:","barbarous man","furious mother pterodactyl","young pterodactyl","ankylosaur:","friendly looking Shaman",},
	},
	{
		name = "caveimp",
		keyword = "cave imp",
		killlist = "cave imp",
		keywordoverride = true,
		scanmode = true,
		killarray = {"cave ripper","den tracer","stone crusher","young rumbler","cave phantom","hooded cave imp"},
	},
	{
		name = "twistedforest",
		keyword = "twistedfae",
		killlist = "twistedfae",
		keywordoverride = true,
		scanmode = true,
		killarray = {"Angry Pixie","quickling ranger","abandoned lesh","gnarled brownie","wicked sprite","wandering wailing lesh","Twisted Treant","twisted faun"},
	},  
	{
		name = "blaze",
		keyword = "blaze",
		killlist = "blaze",
		keywordoverride = true,
		scanmode = true,
		killarray = {"blaze ghoul","paladin of koruk"},
	},
	{
		name = "champsofkoruk",
		keyword = "champsofkoruk",
		killlist = "champsofkoruk",
		keywordoverride = true,
		scanmode = true,
		killarray = {"shambling drow wizard","Champion of Koruk","seared devil"},
	},
  	{
		name = "slayersofkoruk",
		keyword = "korukslayer",
		killlist = "korukslayer",
		keywordoverride = true,
		scanmode = true,
		killarray = {"Nalfeshnee","Archon of Koruk","guardian of the cathedral","slayer of koruk","spiritweaver","daughter of Koruk"},
	},
	{
		name = "guarng",
		keyword = "celestial",
		killlist = "celestial",
		keywordoverride = true,
		scanmode = true,
		killarray = {"celestial guard","celestial paladin","elite guardian magus","celestial mage hound","celestial illusionist","celestial mentalist","celestial druid","silent celestial janitor"},
	},
}</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>QuestMasters</name>
						<packageName></packageName>
						<script>xaos.questmasters={
{lookup="The old dwarf Brazkrig stands here"
,name="the old dwarf Brazkrig"},
{lookup="Crassulacean the sane stands here looking"
,name="Crassulacean"},
{lookup="A cute wood nymph is here"
,name="Sycelurania"},
{lookup="A bigger than normal half"
,name="Ivq"},
{lookup="A faceless priest of Sunder stands here"
 ,name="a faceless priest"
},
{lookup="The host of this display, Gank"
 ,name="Gank"
},
{lookup="Dahlina stands here as a last guard"
 ,name="Dahlina the half elf"
},
{lookup="A hooded drow magi is here",
 name="a hooded drow magi"
},
{lookup="Verioma the pixie floats",
 name="Verioma the pixie"
},
{
lookup="Marnock Rockflayer is here",
 name="Marnock Rockflayer"
},
{
lookup="An old dwarf with a long grey beard"
,name= "The Dwarven Loremaster Isliaka"
},
{
lookup="A Xaosian knight dressed"
  ,name= "A Xaosian Knight"
},
{
lookup="A gnome wearing a dark hood"
  ,name= "a shady gnome"
},
{
lookup="A very old deep gnome"
  ,name= "Piklar"
},
{
lookup="A bishop of Xaos teaches"
  ,name= "a bishop of Xaos"
},
{
lookup="The town Crier stands here,"
  ,name= "the town crier"
},
{
lookup="A gnome dressed in dusty robes"
  ,name= "Faazelrob the far-sighted"
},
{
lookup="A Kydelian nobleman is here,"
,name= "a broken nobleman"
},
{
lookup="A Surveyor is here trying to solve a problem"
,name= "A Surveyor"
}
,
{
lookup="An Elven ranger makes herself known to those she considers friendly"
,name= "A Kydelian ranger"
}
}</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>Temporary Status</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------

if fullautoempower == nil then fullautoempower = false end

if autoleaderswitch == nil then autoleaderswitch = false end
if lastcombattime == nil then lastcombattime = getEpoch() end
if lastkilltime == nil then lastkilltime = 0 end

if initialcommandrun == nil then initialcommandrun=0 end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>GenerateVariables</name>
					<packageName></packageName>
					<script>
if xpcollector == nil then xpcollector = {} end
if killcollector == nil then killcollector = {} end

if topKillCollection == nil then topKillCollection = 0 end


if xaos.backpack == nil then xaos.backpack = "" end

if xaos.class == nil then xaos.class = {} end
if xaos.currency == nil then xaos.currency = {} end
if xaos.currentequip == nil then xaos.currentequip = {} end

if xaos.Level == nil then xaos.Level = "" end
if xaos.LevelPercent == nil then xaos.LevelPercent = "" end


if lootcollector == nil then lootcollector = {} end

if xaos.party == nil then xaos.party = {
  leader = "",
  members = {}
} end

if overnight == nil then overnight = {} end



if killcapture == nil then killcapture = {} end

if xaos.alertlist == nil then xaos.alertlist = {} end
if xaos.bufflist == nil then xaos.bufflist = {} end
if xaos.debufflist == nil then xaos.debufflist = {} end

xaos.class = {
   primary = primary
  ,reborn = reborn
  ,cleric = false
  ,mage = false
  ,warrior = false
  ,thief = false
  ,barbarian=false
}

function xaos.class.isclass(classname) 
  return xaos.class.primary == classname or xaos.class.reborn == classname
end
function xaos.class.canberserk()
  return table.contains(xaos.skills,"berserk")
end
function xaos.class.cancenter()
  return table.contains(xaos.skills,"discipline")
end
function xaos.class.cantrance()
  return table.contains(xaos.skills,"trance")
end
function xaos.class.canresolve()
  return table.contains(xaos.skills,"resolve")
end
function xaos.class.canwarcry()
  return table.contains(xaos.skills,"warcry")
end
function xaos.class.canbless()
  return table.contains(xaos.spells,"bless")
end</script>
					<eventHandlerList>
						<string>sysLoadEvent</string>
						<string>sysInstall</string>
						<string>sysConnectionEvent</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Config</name>
					<packageName></packageName>
					<script>function checkConfigDefaults()
  if xaos.config == nil then xaos.config = {} end
  if xaos.config.afkmode == nil then xaos.config.afkmode = false end
  if xaos.config.berserkovercenter == nil then xaos.config.berserkovercenter = true end
  if xaos.config.debugmode == nil then xaos.config.debugmode = false end
  if xaos.config.show_killed == nil then xaos.config.show_killed = false end
  if xaos.config.betamode == nil then xaos.config.betamode = false end
  if xaos.config.autologin == nil then xaos.config.autologin = false end
  if xaos.config.autologinaction == nil then xaos.config.autologinaction = "" end
  if xaos.config.reconnectaction == nil then xaos.config.reconnectaction = "" end
  if xaos.config.beeptell == nil then xaos.config.beeptell = false end
  if xaos.config.buffmode == nil then xaos.config.buffmode = true end
  if xaos.config.autojoin == nil then xaos.config.autojoin = true end
  if xaos.config.autoguard == nil then xaos.config.autoguard = false end
  if xaos.config.customDrink == nil then xaos.config.customDrink = "" end
  if xaos.config.drinkMode == nil then xaos.config.drinkMode = "soup" end
  if xaos.config.berserkmode == nil then xaos.config.berserkmode = true end
  if xaos.config.scripting == nil then xaos.config.scripting = {} end
  if xaos.config.scripting.findmode == nil then xaos.config.scripting.findmode = false end
  if xaos.config.scripting.scan_mode == nil then xaos.config.scripting.scan_mode = false end
  if xaos.config.scripting.huntwait == nil then xaos.config.scripting.huntwait = 1 end
  if xaos.config.scripting.endcombatwait == nil then xaos.config.scripting.endcombatwait = 2 end
  if xaos.config.scripting.maxmobs == nil then xaos.config.scripting.maxmobs = 10 end
  if xaos.config.scripting.autoLoot == nil then xaos.config.scripting.autoLoot = "" end
  if xaos.config.scripting.autoPickup == nil then xaos.config.scripting.autoPickup = "" end
  if xaos.config.scripting.autoDeathAction == nil then xaos.config.scripting.autoDeathAction = "" end
  if xaos.config.scripting.initialcommand == nil then xaos.config.scripting.initialcommand = "" end
  
  if xaos.config.equipmentsets == nil then xaos.config.equipmentsets = {} end
  
  if xaos.config.show_race == nil then xaos.config.show_race = false end
end
checkConfigDefaults()</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Quest Variables</name>
					<packageName></packageName>
					<script>if auto_questTurnIn == nil then auto_questTurnIn = "" end
if questmaster == nil then questmaster = "unknown" end
if questTurnIn == nil then questTurnIn = "" end

if questfiltertype == nil then questfiltertype = "" end
if questfiltername == nil then questfiltername = "" end

if autoquesting == nil then autoquesting = "" end
if xaos.autoquest == nil then xaos.autoquest = {} end
if xaos.autoquest.auto == nil then xaos.autoquest.auto = "" end
if xaos.autoquest.autoquest_currentquest == nil then xaos.autoquest.autoquest_currentquest = "" end
if xaos.autoquest.queue == nil then xaos.autoquest.queue = {} end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Scripting</name>
					<packageName></packageName>
					<script>if xaos.fightingstyle == nil then xaos.fightingstyle = "" end
if xaos.tactics == nil then xaos.tactics = "" end

if xaos.scripting == nil then xaos.scripting = {} end
if xaos.scripting.area == nil then xaos.scripting.area = {} end
if xaos.scripting.area.maxmobs == nil then xaos.scripting.area.maxmobs = 10 end

if xaos.config.scripting.minmana == nil then xaos.config.scripting.minmana = 0 end
if xaos.config.scripting.minhp == nil then xaos.config.scripting.minhp = 0 end

if statusLeader == nil then statusLeader = false end
if overrideleader == nil then overrideleader = false end

if scancount == nil then 
  scancount = {
    none = {0},
    north = {0,0,0},
    south = {0,0,0},
    east  = {0,0,0},
    west  = {0,0,0},
    up    = {0,0,0},
    down  = {0,0,0},
  }
end

if status == nil then status = {} end
if status.resting == nil then status.resting = false end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Enchanting</name>
					<packageName></packageName>
					<script>if enchanting == nil then enchanting = {} end
if enchanting.manual == nil then enchanting.manual = true end
if enchanting.multi == nil then enchanting.multi = false end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<Script isActive="yes" isFolder="no">
				<name>Profiles</name>
				<packageName></packageName>
				<script>

if xaos_profile == nil then xaos_profile = {} end

remember(xaos_profile)

function retrieveprofiles() 
	table.load(getMudletHomeDir() .. "/characterprofiles.dat",xaos_profile)
end

function loadprofile()
  copyfromprofile() 
  checkConfigDefaults()
  if xaos.config.drinkmode ~= "" then
    enableTimer("drinkTimer")
  end
end

function copyfromprofile(onlogin) 

	local profilematch = table.n_collect(xaos_profile, function (elem) return elem.charactername == xaos.charactername end)
	if table.size(profilematch) &gt; 0 then
		local curprofile = profilematch[1]
		xaos.config = table.deepcopy(curprofile.config)
	else
		echo("No Profile for " .. xaos.charactername)
    if onlogin then
      --Generate Blank Profile
      newprofile()
    end
	end
end

function copytoprofile()

	local profilematch = table.n_collect(xaos_profile, function (elem) return elem.charactername == xaos.charactername end)
	if table.size(profilematch) &gt; 0 then
		local curprofile = profilematch[1]
		curprofile.config = table.deepcopy(xaos.config)
	else
		local newprofile = {charactername=xaos.charactername}
		newprofile.config = table.deepcopy(xaos.config)
		table.insert(xaos_profile,newprofile)
		echo("Profile Created For " .. xaos.charactername)
	end

	table.save(getMudletHomeDir() .. "/characterprofiles.dat",xaos_profile)
end

function newprofile()
  
  xaos.config.autologinaction = ""
  xaos.config.reconnectaction = ""
  xaos.config.debugmode = false
  xaos.config.empowerbuffer = 2000
  xaos.config.empower = {
  	{
  	  target = "saves",
  	  multiplier = 0.5
  	},
  	{
  	  target = "regen mana",
  	  multiplier = 0.5
  	},
  	{
  	  target = "hit roll",
  	  multiplier = 1
  	},
  	{
  	  target = "speed",
  	  multiplier = 1
  	},
  	{
  	  target = "damage roll",
  	  multiplier = 1
  	},
  	{
  	  target = "hitpoints",
  	  multiplier = 1
  	},
  	{
  	  target = "regen hp",
  	  multiplier = 1
  	},
  	{
  	  target = "armor class",
  	  multiplier = 1
  	},
  	{
  	  target = "warding",
  	  multiplier = 1
  	},
  }
  xaos.config.empowercost = 680
  xaos.config.autologin = false
  xaos.config.scripting = {
  	autoPickup = "",
  	maxmobs = 10,
  	huntwait = 0,
  	autoLoot = "",
  	initialcommand = "",
  	autoDeathAction = "",
  	findmode = true,
  	endcombatwait = 3,
  	scan_mode = true
  }
  xaos.config.autoguard = true
  xaos.config.afkmode = false
  xaos.config.autojoin = true
  xaos.config.show_killed = false
  xaos.config.drinkMode = "soup"
  xaos.config.berserkovercenter = true
  xaos.config.buffmode = true
  xaos.config.beeptell = false
  xaos.config.customDrink = ""
  xaos.config.autoempower = false
  xaos.config.betamode = false

  checkConfigDefaults()

end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Quest Functions</name>
				<packageName></packageName>
				<script>
function fixstring(text)

  text = string.gsub(text,"'","")
  text = string.gsub(text,"\"","")
  text = string.gsub(text,"-"," ")
  
  return text
end

function removearticles(text)

  text = string.gsub(text," of "," ")
  text = rex.gsub(text,[[^[tT]he ]],"")
  --Gnoll fix
  text = rex.gsub(text,[[^tall ]],"")
  return text
end



function quest_getqmquests(qmname)
  qmname = string.trim(qmname)
  local qtable = table.n_filter(xaos.quests,
    function(item)
       return item.qm == qmname
    end
  )
  return qtable
end

function quest_getcompletedqm(qmname)
  qmname = string.trim(qmname)
  local qtable = table.n_filter(xaos.quests,
    function(item)
      if item.qm ~= qmname then
       return false
      end
      local otable = table.n_filter(item.objectives, 
        function (oitem)
          return not oitem.complete
        end
      )
      return table.size(otable) == 0
    end
  )
  debugecho("getcomp" .. table.size(qtable))
  return qtable
end

function quest_getstatus(compstatus)
local qtable = table.n_filter(xaos.quests,
    function(item)
      
      local otable = table.n_filter(item.objectives, 
        function (oitem)
          return not oitem.complete 
        end
      )
      if compstatus then
        return table.size(otable) == 0
      else
        return table.size(otable) &gt; 0
      end
    end
  )
  debugwrite("getcomp" .. table.size(qtable))
  return qtable

end

function quest_getnotcomplete()
  local qtable = table.n_filter(xaos.quests,
    function(item)
      
      local otable = table.n_filter(item.objectives, 
        function (oitem)
          return not oitem.complete 
        end
      )
        return table.size(otable) &gt; 0
    end
  )
  --debugecho("getcomp" .. table.size(qtable))
  return qtable
end

function quest_getcomplete()
 return quest_getstatus(true)
end

function quest_iscomplete(questname)
  local filteredquests = quest_getcomplete()
  local qtable = table.n_filter(filteredquests, 
    function(item)
      return fixstring(item.name) == fixstring(questname)
    end
  )
  --debugecho("getiscomp" .. table.size(qtable))
  return table.size(qtable) ~= 0
end

function autoquest_clear()
  xaos.autoquest.autoquest_currentquest=""
end
function autoquest_setquest(questname)
    echo("Auto Quest Set " .. questname)
    if xaos.autoquest == nil then
      xaos.autoquest = {}
    end
    xaos.autoquest.autoquest_currentquest=string.trim(questname)
    killTarget = quest_getkilllist(string.trim(questname))
    
    xaos.scripting.area = {
        name = "autoquest",
        keyword = "autoquest",
        killlist = killTarget,
        keywordoverride = false,
        scanmode = true,
        maxmobs = 10,
        killarray = string.split(killTarget,","),
      }
    
end
function autoquest_nextinqueue()
  if table.size(xaos.autoquest.queue) &gt; 0 then
  	if xaos.autoquest.queue[1] == xaos.autoquest.autoquest_currentquest then
  		table.remove(xaos.autoquest.queue,1)
      debugwrite("removing table entry")
  	end
    --debugwrite(display(xaos.autoquest.queue))
  	if table.size(xaos.autoquest.queue) &gt; 0 then
  		expandAlias("autoquest " .. xaos.autoquest.queue[1])
  	end
  end

end
function autoquest_switchtargets()
  local questname = xaos.autoquest.autoquest_currentquest
  killTarget = quest_getkilllist(string.trim(questname))
  xaos.scripting.area.killarray = string.split(killTarget,",")
  
  local whotohunt = quest_gettarget(questname)
  if whotohunt ~= nil then
    expandAlias("ahunt " .. whotohunt)
  else
    cecho("data","[ Quest ] " .. questname .. ": Objectives Met\n")
    auto_hunt=false
    autoquesting=false
    autoquest_nextinqueue()
    xaos.autoquest.autoquest_currentquest=""
	
  end
  return false
end
function autoquest_go()
  local questname = xaos.autoquest.autoquest_currentquest
  
  killTarget = quest_getkilllist(questname)
  xaos.scripting.area.killarray = string.split(killTarget,",")
  
  local whotohunt = quest_gettarget(questname)
  --echo(2)
  --echo("go")
  --echo(whotohunt)
  
  if whotohunt ~= nil then
    enableTimer("hunt listener")
    expandAlias("ahunt " .. whotohunt)
  else
    cecho("data","[ Quest ] " .. questname .. ": Objectives Met\n")
    auto_hunt=false
    autoquesting=false
    autoquest_nextinqueue()
    xaos.autoquest.autoquest_currentquest=""
	
  end
end
function quest_gettarget(questname)
  --local questname = xaos.autoquest.autoquest_currentquest
  --autoquesting=true
  --killTarget = quest_getkilllist(string.trim(questname))
  --local foundnexttarget=false
  for key,value in pairs(xaos.quests) do 
      if value.name==questname then
        --echo("Found quest")
        local objlist = {}
        for okey,ovalue in pairs(value.objectives) do
          if not ovalue.complete and ovalue.kill then
            table.insert(objlist,string.trim(ovalue.name))
          end
        end
        if table.size(objlist) &gt; 0 then
        
          local which = math.random(#objlist)
          debugwrite(table.size(objlist))
          return removearticles(fixstring(objlist[which]))
          
        else
        
          return nil
          
        end
        break
        --table.insert(xaos.quests[key].objectives,{name=matches[3],complete=(matches[2]=="X")})
  
      end
  end
end

function quest_updateobjective(objective,amount)
  local objectiveset = false
  local obj = tostring(rex.match(string.trim(objective), [[(?:[aA]n|[aA]|[tT]he)?(?:\s)?([^\(].*)]]))
  for key,value in pairs(xaos.quests) do 
    --if value.name==questname then
    for okey,ovalue in pairs(value.objectives) do
      --echo(tostring(rex.match(ovalue.name, [[(?:[0-9]+x)?(?:\s)?(?:[aA]|[tT]he)?([^\(].*)\(]])))
      --if not ovalue.complete then
      
      local target = tostring(rex.match(string.trim(ovalue.name), [[(?:[aA]n|[aA]|[tT]he)?(?:\s)?([^\(].*)]]))

      if string.trim(obj) == string.trim(target) then
        xaos.quests[key].objectives[okey].current = tonumber(xaos.quests[key].objectives[okey].current)+tonumber(amount)
        objectiveset = true
        break
      end
    end
    --end
    if objectiveset then
      break
    end
  end
end

function quest_getkilllist(questtofind)
  local retlist = ""
  for key,value in pairs(xaos.quests) do 
    if value.name==questtofind then
      --echo("Found quest")
      for okey,ovalue in pairs(value.objectives) do
        if not ovalue.complete and ovalue.kill then
          if string.len(retlist)&gt;0 then
            retlist = retlist .. ","
          end
          local curtar = string.trim(removearticles(fixstring(string.trim(ovalue.name))))
          retlist = retlist .. curtar
        end
      end
      break
    end
  end
  return retlist
end

function quest_completeobjective(objective)
  local objectiveset = false
  local obj = tostring(rex.match(string.trim(objective), [[(?:[aA]n|[aA]|[tT]he)?(?:\s)?([^\(].*)]]))
  for key,value in pairs(xaos.quests) do 
    --if value.name==questname then
    for okey,ovalue in pairs(value.objectives) do
      --echo(tostring(rex.match(ovalue.name, [[(?:[0-9]+x)?(?:\s)?(?:[aA]|[tT]he)?([^\(].*)\(]])))
      --if not ovalue.complete then
      
      local target = tostring(rex.match(string.trim(ovalue.name), [[(?:[aA]n|[aA]|[tT]he)?(?:\s)?([^\(].*)]]))

      if string.trim(obj) == string.trim(target) then
        xaos.quests[key].objectives[okey].complete=true
        objectiveset = true
        break
      end
    end
    --end
    if objectiveset then
      break
    end
  end
end

function QMContains(qm)
  local function checkQMName(item) 
    return (string.find(qm,item.lookup) ~= nil)
  end
  local entrieList = table.n_filter(xaos.questmasters, checkQMName)
  return table.size(entrieList)~=0
end

function QMGetName(qm)
  local function checkQMName(item) 
    return (string.find(qm,item.lookup) ~= nil)
  end
  local entrieList = table.n_filter(xaos.questmasters, checkQMName)
  return entrieList[1].name
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Buffs</name>
				<packageName></packageName>
				<script>if xaos.buffs == nil then xaos.buffs = {} end
if xaos.buffs.statusBerserk == nil then xaos.buffs.statusBerserk=false end
if xaos.buffs.statusBless == nil then xaos.buffs.statusBless=false end
if xaos.buffs.statusWarcry == nil then xaos.buffs.statusWarcry=false end
if xaos.buffs.statusResolve == nil then xaos.buffs.statusResolve=false end
if xaos.buffs.statusCenter == nil then xaos.buffs.statusCenter=false end
if xaos.buffs.statusTrance == nil then xaos.buffs.statusTrance=false end

function customunion(table1,table2)
  local newtable = table.deepcopy(table1)
  --display(newtable)
  for k,v in pairs(table2) do
    if table.size(table.n_filter(newtable,function (val) return v.id==val.id end)) ==0 then
      table.insert(newtable,table.deepcopy(v))
    end
  end
  
  return newtable
end

function checkbuffs() 
  local returnlist = {missing="",spelllist={}}
  local mastermind = table.contains(string.split(xaos.traits," "),"mastermind")
  
  local checklist={}
  
  if (xaos.buffs.statusBerserk==false and xaos.class.warrior==true and (xaos.config.berserkovercenter or mastermind)) then
    checklist = customunion(checklist,{{id="berserk"}})
  end
  if (xaos.buffs.statusBless==false and xaos.class.cleric==true) then
    checklist = customunion(checklist,{{id="bless"}})
  end
  if (xaos.buffs.statusWarcry==false and xaos.class.warcry==true) then
    checklist = customunion(checklist,{{id="warcry"}})
  end
  if (xaos.buffs.statusResolve==false and xaos.class.barbarian==true and (not xaos.config.berserkovercenter or mastermind)) then
    checklist = customunion(checklist,{{id="resolve"}})
  end
  if (xaos.buffs.statusCenter==false and xaos.class.warrior==true and (not xaos.config.berserkovercenter or mastermind)) then
    checklist = customunion(checklist,{{id="center"}})
  end  
  if (xaos.class.barbarian) then
    checklist = customunion(checklist, {{id="affinity"},{id="bark skin"},})
  end
  
    if (xaos.class.cleric) then
    checklist = customunion(checklist, {
      {id="accelerate healing"},
      {id="bless"},
      {id="frenzy"},
      {id="godspeed"},
      {id="sanctuary"},
      {id="magic shield"},
    })
  end
  if xaos.class.mage then
    checklist = customunion(checklist, {{id="prismatic shell",action="c prismatic shell"},{id="giant strength",action="c giant strength"},{id="haste",action="c haste"},{id="stone skin",action="c stone skin"},{id="phase",action="c phase"},{id="magic shield",action="c magic shield"},{id="glove of force",action="c glove of force"},})
  end
    
  if xaos.class.isclass("geomancer") then
    checklist = customunion(checklist, {{id="permanency",action="c permanency"},{id="haste",action="c haste"},{id="titan might",action="c titan might"},{id="phase",action="haste"},{id="parallax form"},{id="globe of force",action="c globe"},{id="stone skin",action="c stone"},{id="battle mind"},{id="magic shield"},})
  end
  if xaos.class.isclass("paladin") then
    checklist = customunion(checklist, {{id="permanency",action="c permanency"},{id="holy aura",action="c holy aura"},{id="blind faith",action="c 'blind faith"},})
  end
  if xaos.class.isclass("disciple") then
    checklist = customunion(checklist, {{id="permanency",action="c permanency"},{id="blind faith",action="c blind faith"},{id="bless",action="c bless"},{id="inner faith",action="c 'inner faith"},{id="purging blades",action="c 'purging blades"},{id="imbue wisdom",action="c 'imbue wisdom"},{id="accelerate healing",action="c 'accelerate"},{id="consecrated aura",action="c 'consecrated"},})
  end
  if xaos.class.isclass("bishop") then
    checklist = customunion(checklist, {{id="permanency",action="c permanency"},{id="holy aura",action="c holy aura"},{id="blind faith",action="c 'blind faith"},{id="divine wisdom",action="c 'divine wisdom"},{id="imbue wisdom",action="c 'imbue wisdom"},})
  end
  --display(checklist)
  for i=1,table.size(checklist),1 do
    if not table.contains(xaos.bufflist,checklist[i].id) then
      returnlist.missing = returnlist.missing .. "Missing: " .. checklist[i].id .. "\n"
      table.insert(returnlist.spelllist,table.deepcopy(checklist[i]))
    end
  end
  if returnlist.missing == "" then
    returnlist.missing = "All buffs active"
  end
  returnlist.missing = returnlist.missing .. "\n\n"
  return returnlist
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Empowers</name>
				<packageName></packageName>
				<script>--This module is to handle auto empowers.


if empoweriterate == nil then empoweriterate = 0 end
if xaos.config.autoempower == nil then xaos.config.autoempower = true end

if xaos.config.empower == nil then 
  xaos.config.empower = {
    {target="saves",multiplier=.5},
    {target="regen mana",multiplier=.5},
    {target="hit roll",multiplier=1},
    {target="speed",multiplier=1},
    {target="damage roll",multiplier=1},
    {target="hitpoints",multiplier=1},
    {target="regen hp",multiplier=1},
    {target="armor class",multiplier=1},
    {target="warding",multiplier=1},
  }
end

--Reset and startempowering
function startempower()

  xaos.config.empowerbuffer=2000
  empoweriterate=1
  

  local maxcost=0
  --Get Max
  for k,v in pairs(xaos.heroempowers) do
    if table.size(table.n_collect(xaos.config.empower, function(elem) return elem.target == v.name end))&gt;0 then
      if maxcost &lt; tonumber(v.cost) then
        maxcost = tonumber(v.cost)
      end
    end
  end
  
  xaos.config.empowercost = maxcost
  
  
  table.sort(xaos.heroempowers,function (e1,e2) return tonumber(e1.cost) &lt; tonumber(e2.cost) end)
  
  if fullautoempower then
    continueempower()
  end

end

--Continues the empower in progress
function continueempower()
  local maxcost = xaos.config.empowercost
  
  if table.size(xaos.heroempowers) &lt; empoweriterate or empoweriterate == 0 then
    echo("\nEmpowers Complete\n")
    if not mysettings.features.msdp then
    send("hero empower")
    end 
    empoweriterate=0
    tempTimer(2,function() startempower() end)
    
    return 
  end
  
  local curempower = xaos.heroempowers[empoweriterate]
  local empowerconfig = table.n_collect(xaos.config.empower, function(elem) return elem.target == curempower.name end)[1]

  if empowerconfig == nil then 
    --echo("skipping: " .. curempower.name .. "\n")
    empoweriterate = empoweriterate + 1
    continueempower()
  elseif (tonumber(curempower.cost)) &lt;= (maxcost*tonumber(empowerconfig.multiplier)) then
    if xaos.config.empowerbuffer &gt; (xaos.heropoints - curempower.cost) then
      fullautoempower=false
      echo("\n" .. empoweriterate .. "\n")
      echo("  Over Empower Buffer  ")
      echo(curempower.name .. ": " .. tonumber(curempower.cost) .." - " .. (maxcost*tonumber(empowerconfig.multiplier)) .. "\n")
      empoweriterate=1
    else
    
      echo(curempower.name .. ": " .. tonumber(curempower.cost) .." - " .. (maxcost*tonumber(empowerconfig.multiplier)) .. "\n")
      
      send("hero empower " .. curempower.name)
      
    end
  else
    --echo("complete: " .. curempower.name .. "\n")
    empoweriterate = empoweriterate + 1
    continueempower()
  end
 
end

--Individual increase, called when trigger received the successful increase.
function empowerincrease()

  local curempower = xaos.heroempowers[empoweriterate]
  --local empowerconfig = table.n_collect(xaos.config.empower, function(elem) return elem.target == curempower.name end)[1]
  curempower.cost = curempower.cost + 40
  curempower.current = curempower.current+1
  empoweriterate=1
  table.sort(xaos.heroempowers,function (e1,e2) return tonumber(e1.cost) &lt; tonumber(e2.cost) end)
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>LoadDamageCalcs</name>
				<packageName></packageName>
				<script>
if RoundCalc == nil then
  RoundCalc = {
    mine = {hit=0,damage=0,block=0,dodge=0,parry=0,miss=0,reflect=0,phase=0,},
    opp = {hit=0,damage=0,block=0,dodge=0,parry=0,miss=0,reflect=0,phase=0,},
  }
end
if TotalCalc == nil then
  TotalCalc = {count=0,
    mine = {hit=0,damage=0,block=0,dodge=0,parry=0,miss=0,reflect=0,phase=0,},
    opp = {hit=0,damage=0,block=0,dodge=0,parry=0,miss=0,reflect=0,phase=0,},
    history = {}
  }
end
if scenario_round_count == nil then
  scenario_round_count = 0
end
if DamageScenarios == nil then
  DamageScenarios = {}
end

function prettyPrintDamageCounts()

  local str = ""
  local sumcount = 0
  for k,v in pairs(damcounts) do
    sumcount = sumcount + v
  end
  
  for k,v in pairs(damcounts) do
    str = str .. k .. ": " .. string.format("%4.2f",(v/sumcount)*100) .. "\n"
  end
  return str
end
function scenarioDisplay(index)
  return DamageScenarios[index].name .. "\n" .. damageDisplay(DamageScenarios[index].data)
end

function totalhit(mine,opp)
  return mine.hit+opp.block+opp.dodge+opp.parry+opp.miss+opp.reflect+opp.phase
end



function getDef(sub,opp)
	local subreturn = "&lt;grey&gt;"
	local hitcnt = totalhit(opp,sub)
	subreturn = subreturn .. " Dodge  : " .. string.format("%5.2f",100*(sub.dodge / hitcnt)) .. "%  - " .. sub.dodge .. "\n"
	subreturn = subreturn .. " Parry  : " .. string.format("%5.2f",100*(sub.parry / hitcnt)) .. "%  - " .. sub.parry .. "\n"
	subreturn = subreturn .. " Block  : " .. string.format("%5.2f",100*(sub.block / hitcnt)) .. "%  - " .. sub.block .. "\n"
	subreturn = subreturn .. " Phase  : " .. string.format("%5.2f",100*(sub.phase / hitcnt)) .. "%  - " .. sub.phase .. "\n"
	subreturn = subreturn .. " Reflect: " .. string.format("%5.2f",100*(sub.reflect / hitcnt)) .. "%  - " .. sub.reflect .. "\n"
	subreturn = subreturn .. " Miss   : " .. string.format("%5.2f",100*(sub.miss / hitcnt)) .. "%  - " .. sub.miss .. "\n"
	subreturn = subreturn .. " Hit    : " .. string.format("%5.2f",100*(opp.hit / hitcnt)) .. "%  - " .. opp.hit .. "\n"
	  --subreturn = subreturn .. totalhit(opp,sub) .. "\n"
	return subreturn
end

function damageDisplay(data)
  local toreturn = ""


  toreturn = toreturn .."\n&lt;white&gt;Defense Per Round - " .. totalhit(data.opp,data.mine) .. "\n"
  toreturn = toreturn ..getDef(data.mine,data.opp)
  toreturn = toreturn .."&lt;white&gt;Offense Per Round - " .. totalhit(data.mine,data.opp) .. "\n"
  toreturn = toreturn ..getDef(data.opp,data.mine)
  toreturn = toreturn .. "Dam In  /Rd : " ..string.format("%5.3f",(data.opp.damage / data.count)) .. "\n"
  toreturn = toreturn .. "Dam Out /Rd : " ..string.format("%5.3f",(data.mine.damage / data.count)) .. "\n"
  toreturn = toreturn .."&lt;white&gt;Rounds - " .. data.count .. "\n"

  return toreturn
end

function getScenario(name)

end

function TotalCalc.Remove(rnd)
  --TotalCalc.SubRemove(self.mine,rnd.mine)
  --TotalCalc.SubRemove(self.opp,rnd.opp)
  
  TotalCalc.mine.hit=TotalCalc.mine.hit-rnd.mine.hit
  TotalCalc.mine.damage=TotalCalc.mine.damage-rnd.mine.damage
  TotalCalc.mine.block=TotalCalc.mine.block-rnd.mine.block
  TotalCalc.mine.dodge=TotalCalc.mine.dodge-rnd.mine.dodge
  TotalCalc.mine.parry=TotalCalc.mine.parry-rnd.mine.parry
  TotalCalc.mine.miss=TotalCalc.mine.miss-rnd.mine.miss
  TotalCalc.mine.reflect=TotalCalc.mine.reflect-rnd.mine.reflect
  TotalCalc.mine.phase=TotalCalc.mine.phase-rnd.mine.phase
  
  TotalCalc.opp.hit=TotalCalc.opp.hit-rnd.opp.hit
  TotalCalc.opp.damage=TotalCalc.opp.damage-rnd.opp.damage
  TotalCalc.opp.block=TotalCalc.opp.block-rnd.opp.block
  TotalCalc.opp.dodge=TotalCalc.opp.dodge-rnd.opp.dodge
  TotalCalc.opp.parry=TotalCalc.opp.parry-rnd.opp.parry
  TotalCalc.opp.miss=TotalCalc.opp.miss-rnd.opp.miss
  TotalCalc.opp.reflect=TotalCalc.opp.reflect-rnd.opp.reflect
  TotalCalc.opp.phase=TotalCalc.opp.phase-rnd.opp.phase
end

function TotalCalc.SubRemove(self,rnd)
  self.hit=self.hit-rnd.hit
  self.damage=self.damage-rnd.damage
  self.block=self.block-rnd.block
  self.dodge=self.dodge-rnd.dodge
  self.parry=self.parry-rnd.parry
  self.miss=self.miss-rnd.miss
  self.reflect=self.reflect-rnd.reflect
  self.phase=self.phase-rnd.phase
end

function TotalCalc.SubCombine(self,rnd)
  self.hit=self.hit+rnd.hit
  self.damage=self.damage+rnd.damage
  self.block=self.block+rnd.block
  self.dodge=self.dodge+rnd.dodge
  self.parry=self.parry+rnd.parry
  self.miss=self.miss+rnd.miss
  self.reflect=self.reflect+rnd.reflect
  self.phase=self.phase+rnd.phase
end

function TotalCalc.Combine(rnd)
  --TotalCalc.SubCombine(TotalCalc.mine,TotalCalc.mine)
  --TotalCalc.SubCombine(TotalCalc.opp,TotalCalc.opp)
  
  TotalCalc.mine.hit=TotalCalc.mine.hit+rnd.mine.hit
  TotalCalc.mine.damage=TotalCalc.mine.damage+rnd.mine.damage
  TotalCalc.mine.block=TotalCalc.mine.block+rnd.mine.block
  TotalCalc.mine.dodge=TotalCalc.mine.dodge+rnd.mine.dodge
  TotalCalc.mine.parry=TotalCalc.mine.parry+rnd.mine.parry
  TotalCalc.mine.miss=TotalCalc.mine.miss+rnd.mine.miss
  TotalCalc.mine.reflect=TotalCalc.mine.reflect+rnd.mine.reflect
  TotalCalc.mine.phase=TotalCalc.mine.phase+rnd.mine.phase
  
  TotalCalc.opp.hit=TotalCalc.opp.hit+rnd.opp.hit
  TotalCalc.opp.damage=TotalCalc.opp.damage+rnd.opp.damage
  TotalCalc.opp.block=TotalCalc.opp.block+rnd.opp.block
  TotalCalc.opp.dodge=TotalCalc.opp.dodge+rnd.opp.dodge
  TotalCalc.opp.parry=TotalCalc.opp.parry+rnd.opp.parry
  TotalCalc.opp.miss=TotalCalc.opp.miss+rnd.opp.miss
  TotalCalc.opp.reflect=TotalCalc.opp.reflect+rnd.opp.reflect
  TotalCalc.opp.phase=TotalCalc.opp.phase+rnd.opp.phase
  
  TotalCalc.count=TotalCalc.count+1
  
  table.insert(TotalCalc.history,table.deepcopy(rnd))
  
  if scenario_round_count &gt; 0 and scenario_round_count == TotalCalc.count then
    expandAlias("FinishScenario " .. scenario_name)
    scenario_round_count = -1
  end
  --Limit to 1000 rows or scenario length
  if TotalCalc.count &gt; 1000 then
    if TotalCalc.count &gt; scenario_round_count then
        local tabsize = 1 --table.size(TotalCalc.history)
        --echo("Tablesize" .. tabsize)
        local remrnd = TotalCalc.history[tabsize]
        --display(TotalCalc.history[2])
        --display(TotalCalc.history[tabsize])
      
        TotalCalc.Remove(remrnd)
        TotalCalc.count = TotalCalc.count-1

        table.remove(TotalCalc.history,tabsize)
      
    end
  end
end

function TotalCalc.Clear()
  TotalCalc.mine.hit=0
  TotalCalc.mine.damage=0
  TotalCalc.mine.block=0
  TotalCalc.mine.dodge=0
  TotalCalc.mine.parry=0
  TotalCalc.mine.miss=0
  TotalCalc.mine.reflect=0
  TotalCalc.mine.phase=0
  
  TotalCalc.opp.hit=0
  TotalCalc.opp.damage=0
  TotalCalc.opp.block=0
  TotalCalc.opp.dodge=0
  TotalCalc.opp.parry=0
  TotalCalc.opp.miss=0
  TotalCalc.opp.reflect=0
  TotalCalc.opp.phase=0
  
  TotalCalc.history = {}
  
  TotalCalc.count=0
 end

function RoundCalc.Clear()
  RoundCalc.mine.hit=0
  RoundCalc.mine.damage=0
  RoundCalc.mine.block=0
  RoundCalc.mine.dodge=0
  RoundCalc.mine.parry=0
  RoundCalc.mine.miss=0
  RoundCalc.mine.reflect=0
  RoundCalc.mine.phase=0
  
  RoundCalc.opp.hit=0
  RoundCalc.opp.damage=0
  RoundCalc.opp.block=0
  RoundCalc.opp.dodge=0
  RoundCalc.opp.parry=0
  RoundCalc.opp.miss=0
  RoundCalc.opp.reflect=0
  RoundCalc.opp.phase=0
 end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Party</name>
				<packageName></packageName>
				<script>function isInParty(membername)

  membername = string.lower(membername)
  return table.size(table.n_collect(xaos.party.members,function (elem) return string.lower(elem.name) == membername end)) &gt; 0

end

function isLeader(membername)

  return xaos.party.leader == membername

end

function yourParty()

  return xaos.party.leader == "Your"

end

function leaderhunt(foltarget)
  followTarget=tostring(foltarget)
  huntTarget = tostring(foltarget)
  killTarget = ""
  auto_hunt = true
  
  statusFollowing=true
  statusLeader=true
  
  enableTimer("leader listener")
  disableTimer("scan listener")
  disableTimer("hunt listener")
  xaos.config.scripting.scan_mode = false
  
  --send("auto ")
  auto_hunt = true
  xuicom(
    "You will now try and hunt your leader. " 
  )
  if not (overrideleader) then
     xuicom("This will auto switch if the leader changes.")
  end
  xuicom(" Leader: " .. huntTarget)
  --xuicom("Currently, tracking "..wielded.." as your wielded weapon.")
  
  obsessionMode = true
  location = nil
  --xuicom("You are following " .. followTarget .. " and this script will attempt to hunt them.")
  
  
  combat = false
  hunting = false
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Feed</name>
				<packageName></packageName>
				<script>function feedManager(message,ignoretime)
  if lastMessage == nil then
    lastMessage = "None"
  end
  if lastTimestamp == nil then
    timestamp = getTime(true, "hh:mm:ssap")
  end
  local timestamp = getTime(true, "hh:mm:ssap")
  --local console = "UI.FeedList"
  if (ignoretime and message ~= lastMessage) or ((ignoretime == nil or not ignoretime) and (message ~= lastMessage or timestamp ~= lastTimestamp)) then
  --if message ~= lastMessage and (ignoretime or timestamp ~= lastTimestamp then
    cecho(mysettings.feedconsole, message .. "&lt;DimGrey&gt; @" .. timestamp .. "\n")
    lastMessage = message
    lastTimestamp = timestamp
  end
end

function dataecho(header,text) 
    feedManager("[" .. header .. "] " ..text)
end

function debugecho(text) 
  if xaos.config.debugmode then
    cecho("data","[DE " .. getTime(true,"HH.mm.ss") .. "] " ..text .. "\n")
  end
end
function debugwrite(text) 
  if xaos.config.debugmode then
    cecho("main","[DE " .. getTime(true,"HH.mm.ss") .. "] " ..text .. "\n")
  end
end
function helpheadecho(text) 
  hecho("main","#c0FFFF\n" .. text .. "\n")
end
function helpheaddescecho(text) 
  hecho("main","  " .. text .. "\n")
end
function helpbodyecho(text) 
  hecho("main","#c0FFFF  " .. text .. "\n")
end

function helpdescecho(text) 
  hecho("main","    " .. text .. "\n")
end

function uicom(message)
  cecho("\n[ UI ] &lt;light_blue&gt;"..message.."\n")
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Scripting</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
			</Script>
			<ScriptGroup isActive="no" isFolder="yes">
				<name>gostEnchanting</name>
				<packageName>gostEnchanting</packageName>
				<script></script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>gostEnchanting</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>guiLayer</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function guiLayer(eventName)
  echo("\LOADING LAYER1 OF GUI!\n")
end
</script>
						<eventHandlerList>
							<string>layer1</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>createGostGui</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
-------------------------------------------------------Variables
function createGostGui()

enchantgui={}

tableEnchant={}
tableEnchant["Hitroll"] = {name="Hitroll", enchant="add hitroll", count=0}
tableEnchant["Damroll"] = {name="Damroll", enchant="add damr", count=0}
tableEnchant["Speed"] = {name="Speed", enchant="add speed", count=0}
tableEnchant["AC"] = {name="AC", enchant="armor phy", count=0}
tableEnchant["Warding"] = {name="Warding", enchant="armor el", count=0}
tableEnchant["HP"] = {name="HP", enchant="add hitpo", count=0}
tableEnchant["HP Regen"] = {name="HP Regen", enchant="regen hp", count=0}
tableEnchant["Mana"] = {name="Mana", enchant="add mana", count=0}
tableEnchant["Mana Regen"] = {name="Mana Regen", enchant="regen mana", count=0}
tableEnchant["Saves"] = {name="Saves", enchant="add saves", count=0}
tableEnchant["Abjur Casting"] = {name="Abjur Casting", enchant="casting ab", count=0}
tableEnchant["Alter Casting"] = {name="Alter Casting", enchant="casting al", count=0}
tableEnchant["Begui Casting"] = {name="Begui Casting", enchant="casting be", count=0}
tableEnchant["Conju Casting"] = {name="Conju Casting", enchant="casting co", count=0}
tableEnchant["Divin Casting"] = {name="Divin Casting", enchant="casting di", count=0}
tableEnchant["Encha Casting"] = {name="Encha Casting", enchant="casting en", count=0}
tableEnchant["Illus Casting"] = {name="Illus Casting", enchant="casting il", count=0}
tableEnchant["Invoc Casting"] = {name="Invoc Casting", enchant="casting in", count=0}
tableEnchant["Malad Casting"] = {name="Malad Casting", enchant="casting ma", count=0}
tableEnchant["Necro Casting"] = {name="Necro Casting", enchant="casting ne", count=0}
tableEnchant["Relig Casting"] = {name="Relig Casting", enchant="casting re", count=0}
tableEnchant["Impart Str"] = {name="Impart Str", enchant="impart str", count=0}
tableEnchant["Impart Dex"] = {name="Impart Dex", enchant="impart dex", count=0}
tableEnchant["Impart Con"] = {name="Impart Con", enchant="impart con", count=0}
tableEnchant["Impart Wis"] = {name="Impart Wis", enchant="impart wis", count=0}
tableEnchant["Impart Int"] = {name="Impart Int", enchant="impart int", count=0}
----------------------------------------Functions

----------------------------------------Reset Labels Function
function resetLabels(resetNumbers)
if(resetNumbers==1)then
tableEnchant["Hitroll"].count=0
tableEnchant["Damroll"].count=0
tableEnchant["Speed"].count=0
tableEnchant["AC"].count=0
tableEnchant["Warding"].count=0
tableEnchant["HP"].count=0
tableEnchant["HP Regen"].count=0
tableEnchant["Mana"].count=0
tableEnchant["Mana Regen"].count=0
tableEnchant["Saves"].count=0
tableEnchant["Abjur Casting"].count=0
tableEnchant["Alter Casting"].count=0
tableEnchant["Begui Casting"].count=0
tableEnchant["Conju Casting"].count=0
tableEnchant["Divin Casting"].count=0
tableEnchant["Encha Casting"].count=0
tableEnchant["Illus Casting"].count=0
tableEnchant["Invoc Casting"].count=0
tableEnchant["Malad Casting"].count=0
tableEnchant["Necro Casting"].count=0
tableEnchant["Relig Casting"].count=0
tableEnchant["Impart Str"].count=0
tableEnchant["Impart Dex"].count=0
tableEnchant["Impart Con"].count=0
tableEnchant["Impart Wis"].count=0
tableEnchant["Impart Int"].count=0

hitEnchLabel:echo("Hitroll&lt;br&gt;"..enchantGUI["Hitroll"],"black","c16")

maxLabel()
end
end
------------------------------------------End Reset Labels

------------------------------------------Function Max Label
function maxLabel()
hitEnchLabel:show()


resetEnchLabel:show()
startEnchLabel:show()
baseEnchLabel:echo("Click to Close ","black","c16")
baseEnchLabel:setClickCallback("minLabel")

end

--------------------------------------------------------------End Function Max Label



--------------------------------------------------------------Function Min Label
function minLabel()
baseEnchLabel:echo("Click For Enchanting ","black","c16")
baseEnchLabel:setClickCallback("maxLabel")

hitEnchLabel:hide()



resetEnchLabel:hide()
startEnchLabel:hide()
end

-------------------------------------------------------------End Min Labels





-----------------------------------------Main Program

 baseEnchContainer = Geyser.Container:new({
  name = "baseEnchContainer",
  x="50%", y="0%",                    -- makes the container start 20% of the screen away from the right side
  width = "50%", height="100%",      -- filling it up until the end
})

enchantgui.buttons = {}

for k,v in pairs(tableEnchant) do

  enchantgui.buttons[k] = Geyser.Label:new({
    name = v.name .. "Label",
    x = "0%", y ="0%",
    width = "20%", height ="10%",
    fgColor = "black",
  },baseEnchContainer)
  enchantgui.buttons[k]:setColor("green")
  enchantgui.buttons[k]:setStyleSheet([[
    background-color: grey;
    border-width: 5px;
    border-style: solid;
    border-color: green;
    border-radius: 3px;
  ]])
  enchantgui.buttons[k]:echo("Hitroll&lt;br&gt;"..v.count,"black","c16")
  enchantgui.buttons[k]:setClickCallback("enchIncrease",v.name,v.name .. "Label",k)
  enchantgui.buttons[k]:show()

end

startEnchLabel = Geyser.Label:new({
  name = "startEnchLabel",
  x = "0%", y ="-10%",
  width = "60%", height ="10%",
  fgColor = "black",
},baseEnchContainer)
startEnchLabel:setColor("green")
startEnchLabel:setStyleSheet([[
  background-color: grey;
  border-width: 5px;
  border-style: solid;
  border-color: green;
  border-radius: 3px;
]])
startEnchLabel:echo("Click to Start&lt;br&gt;Make sure to have mats and stabilizers needeed!!!","black","c16")
startEnchLabel:setClickCallback("startEnchant")

resetEnchLabel = Geyser.Label:new({
  name = "resetEnchLabel",
  x = "-40%", y ="-10%",
  width = "20%", height ="10%",
  fgColor = "black",
},baseEnchContainer)
resetEnchLabel:setColor("green")
resetEnchLabel:setStyleSheet([[
  background-color: grey;
  border-width: 5px;
  border-style: solid;
  border-color: green;
  border-radius: 3px;
]])
resetEnchLabel:echo("Click to Reset Numbers ","black","c16")
resetEnchLabel:setClickCallback("resetLabels",1)

baseEnchLabel = Geyser.Label:new({
  name = "baseEnchLabel",
  x = "80%", y ="90%",
  width = "20%", height ="10%",
  fgColor = "black",
},baseEnchContainer)
baseEnchLabel:setColor("green")
baseEnchLabel:setStyleSheet([[
  background-color: grey;
  border-width: 5px;
  border-style: solid;
  border-color: green;
  border-radius: 3px;
]])

resetLabels(1)
minLabel()


--TODO: FIX
function enchIncrease(tableTag,labelName,enchIndex)
  enchIndex=tostring(enchIndex)
  if(enchantGUI[tableTag]&lt;=14)then
	  enchantGUI[tableTag]=enchantGUI[tableTag]+1
  	tableEnchantNum[enchIndex]=tableEnchantNum[enchIndex]+1
	else
	  enchantGUI[tableTag]=0
		tableEnchantNum[enchIndex]=0
  end	
	labelName2=Geyser.Label:getWindow(labelName)
	labelName2:echo(tableTag.."&lt;br&gt;"..enchantGUI[tableTag],"black","c16")
end

function startEnchant()
  enableTrigger("gostEnchanting")
  enchCount=0
  switchCount=1
  if(enchCount&lt;tableEnchant[tostring(switchCount)].count)then
    send("enchant "..tableEnchant[tostring(switchCount)].enchant)
	  send("pro")
 	  enchCount=enchCount+1
  else
		while(tableEnchant[tostring(switchCount)].count==0)do
	    switchCount=switchCount+1
		end
	  if(tableEnchant[tostring(switchCount)])then
			send("enchant "..tableEnchant[tostring(switchCount)].enchant)
	    send("pro")
		  enchCount=1
	  end
	end	
	minLabel()
end

baseEnchContainer:hide()
end</script>
						<eventHandlerList>
							<string>layer1</string>
						</eventHandlerList>
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>loadEnchantmentPackage</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
tempTimer(4,[[useGostEnchant=0]])
tempTimer(5,[[raiseEvent("layer1")]])</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>XUI</name>
				<packageName></packageName>
				<script>
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>UI</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Parent</name>
						<packageName></packageName>
						<script>if focusonlywindows == nil then focusonlywindows = {} end</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Sidebar and Top Buttons</name>
							<packageName></packageName>
							<script>

function menu_addtab(v)
    if table.contains(menu.tabs,v) then
      cecho("\n\n&lt;yellow&gt;Tab already exists\n\n")
      return
    end
    table.insert(menu.tabs,v)
    menu[v.."tab"] = Geyser.Label:new({
        name = "menu."..v.."tab",
      },menu.header)
    
    menu[v.."tab"]:setStyleSheet([[
      background-color: ]]..menu.color1..[[;
      margin-right: 1px;
      margin-left: 1px;
      border-top: 1px solid white;
      border-right: 1px solid white;
    ]])
    local tempname = ""
    local i
    for i=1,string.len(v) do
      tempname = tempname .. string.sub(v,i,i) .. "&lt;br&gt;"
    end
    tempname=v
    menu[v.."tab"]:echo("&lt;center&gt;"..tempname)
    menu[v.."tab"]:setClickCallback("menu.click",v)
    menu[v.."tab"]:setDoubleClickCallback("menu.doubleclick",v)
    menu[v] = Geyser.Container:new({
      name = "menu."..v,
      x = 0, y = 0,
      width = "100%",
      height = "100%",
    },menu.footer)
    
    menu[v .. "back"] = Geyser.Label:new({
      name = "menu."..v .. "back",
      x = 0, y = 0,
      width = "100%",
      height = "100%",
    },menu[v])
  
    menu[v .. "back"]:setStyleSheet([[
      background-color: black;
      border-bottom-left-radius: 10px;
      border-bottom-right-radius: 10px;
      border-top: 1px solid white;
    ]])
    
    menu[v]:hide()
    menu.current = menu.current or menu.tabs[1]
  end


if menu == nil then
  local windowWidth, windowHeight = getMainWindowSize()
  if contWidth == nil then contWidth = 650 end

  menu = menu or {
    tabs = {},
    color1 = "rgb(0,0,70)",
    color2 = "rgb(0,0,50)",
    width = "20%",
    height = "40%",
  }

  
if mysettings.XUI.UIMode == "userwindow" then  
  menu.window = Geyser.UserWindow:new({
    name = "menu.back",
    docked=true,
    dockPosition = "right",
    width="600px"
  })
else
  menu.window = Geyser.Container:new({
    name = "menu.back",
    x="-600px",y="30px",
    width="600px",height=getDimensions("main").height-130 .. "px",
  })
end
  
  local buttonoffset = 0
  
 
  menu.displaybutton = Geyser.Label:new({
    name="menu.displaybutton",
    x = "-" .. buttonoffset + 100 .. "px", y = "0px",
    width = "100px",
    height = "30px",
  })
  menu.displaybutton:setStyleSheet([[
      background-color: ]]..menu.color1..[[;
      border: 1px solid white;
    ]])
  menu.displaybutton:echo("&lt;&lt;")
  
  menu.displaybutton:setClickCallback("menu_displaybutton_click",v)
  
  function menu_displaybutton_click()
    if menu.window.visible then
      hideMenu()
    else
      showMenu()
    end
  end
  buttonoffset = buttonoffset + 110

  menu.settingsbutton = Geyser.Label:new({
    name="menu.settingsbutton",
    x = "-" .. buttonoffset + 100 .. "px", y = "0px",
    width = "100px",
    height = "30px",
  })
  menu.settingsbutton:setStyleSheet([[
      background-color: ]]..menu.color1..[[;
      border: 1px solid white;
    ]])
  menu.settingsbutton:echo("&lt;center&gt;Settings&lt;/center&gt;")
  
  menu.settingsbutton:setClickCallback("menu_settingsbutton_click",v)
  
  function menu_settingsbutton_click()
    setupWin:show()
  end
  buttonoffset = buttonoffset + 110

  menu.helpbutton = Geyser.Label:new({
    name="menu.helpbutton",
    x = "-" .. buttonoffset + 100 .. "px", y = "0px",
    width = "100px",
    height = "30px",
  })
  menu.helpbutton:setStyleSheet([[
      background-color: ]]..menu.color1..[[;
      border: 1px solid white;
    ]])
  menu.helpbutton:echo("&lt;center&gt;Help&lt;/center&gt;")
  
  menu.helpbutton:setClickCallback("menu_helpbutton_click",v)
  
  function menu_helpbutton_click()
    expandAlias("xhelp all")
  end
  buttonoffset = buttonoffset + 110
  
  menu.scriptbutton = Geyser.Label:new({
    name="menu.scriptbutton",
    x = "-" .. buttonoffset + 100 .. "px", y = "0px",
    width = "100px",
    height = "30px",
  })
  menu.scriptbutton:setStyleSheet([[
      background-color: ]]..menu.color1..[[;
      border: 1px solid white;
    ]])
  menu.scriptbutton:echo("&lt;center&gt;Start Script&lt;/center&gt;")
  
  menu.scriptbutton:setClickCallback("menu_scriptbutton_click",v)
  
  function menu_scriptbutton_click()
    if auto_hunt then
      auto_hunt = false
      xuicom("You will no longer attempt to automatically hunt targets")
      
      combat = false
      hunting = false
      menu.scriptbutton:echo("&lt;center&gt;Stop Script&lt;/center&gt;")
    else
      expandAlias("startscripting")
      menu.scriptbutton:echo("&lt;center&gt;Start Script&lt;/center&gt;")
    end
  end
  buttonoffset = buttonoffset + 110
  
  menu.container = Geyser.Container:new({
    name = "menu.backcontainer",
    x = "0%", y = "0%",
    width = "100%",
    height = "100%",
  },menu.window)
  
  menu.header = Geyser.VBox:new({
    name = "menu.header",
    x = "0%", y = "0%",
    width = "15%",
    height = "100%",
  },menu.container)
  menu.footer = Geyser.Label:new({
    name = "menu.footer",
    x = "15%", y = "0%",
    width = "85%",
    height = "100%",
  },menu.container)
  
  menu.footer:setStyleSheet([[
    background-color: black;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
  ]])
  
  menu.center = Geyser.Label:new({
    name = "menu.center",
    x = 0, y = 0,
    width = "100%",
    height = "100%",
  },menu.footer)
  menu.center:setStyleSheet([[
    border-radius: 10px;
    margin: 1px;
  ]])


end

function hideMenu()
  menu.window.visible = false
  menu.container:hide()
  resizeParent()
  mMenuHDrag:hide()
  menu.displaybutton:echo("&lt;center&gt;Sidebar&lt;/center&gt;")
end

function showMenu()
  menu.window.visible = true
  menu.container:show()
  resizeParent()
  mMenuHDrag:show()
  menu.displaybutton:echo("&lt;center&gt;Sidebar&lt;/center&gt;")
end

</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Alert  Bar</name>
							<packageName></packageName>
							<script>menu.alertbar = menu.alertbar or 
  Geyser.HBox:new({
    name = "menu.alertbar",
    x="0px",y="0px",
    width=menu.scriptbutton.get_x() .. "px", height="30px",
  })
  

AlertLabels = AlertLabels or {}

menu.alertbarExtras = menu.alertbarExtras or 
  Geyser.HBox:new({
    name = "menu.alertbarExtras",
    x="0px",y="0px",
    width=menu.scriptbutton.get_x() .. "px", height="30px",
  })
  
menu.alertbarExtras:hide()

function handleAlertClick(alert)
  if alert ~= nil then
    alert()
  end
end

function grabAlertLabel(index,color,func)

  AlertLabels[index] = AlertLabels[index] or
      Geyser.Label:new({name = "AlertLabels_"..index, width = "100px", height ="30px", h_policy=Geyser.Fixed,}, menu.alertbar)
  AlertLabels[index]:setStyleSheet([[
    background-color: ]]..color..[[;
    border: 1px solid white;
  ]])
  
  if func ~= nil then
    AlertLabels[index]:setClickCallback("handleAlertClick",func)
  else
    AlertLabels[index]:setClickCallback("handleAlertClick",nil)
  end
  
  AlertLabels[index]:changeContainer(menu.alertbar)
  menu.alertbar:show()
  return {label=AlertLabels[index]}
end
function hideAlertLabels(index)
  local i
  for i=index,table.size(AlertLabels) do
    AlertLabels[i]:changeContainer(menu.alertbarExtras)
  end
end

xaos.alertlist = {}


function showAlertLabels()
  local index = 1
  for k,v in pairs(xaos.alertlist) do
      grabAlertLabel(index,"rgb(0,0,255)",v.func).label:echo("&lt;center&gt;" .. v.text .. "&lt;/center&gt;")
      index = index + 1
  end
  if mysettings.uicomponents.debuffbar == "on" then
      for k,v in pairs(xaos.debufflist) do
          grabAlertLabel(index,"rgb(255,0,0)").label:echo("&lt;center&gt;" .. v .. "&lt;/center&gt;")
          index = index + 1
      end
  end
  hideAlertLabels(index)
end

 debuffspelllist = {
    --Cleric
    "blindness",
    "poison",
    "plague",
    "soften defense",
    "silence",
    "curse",
    "grey rot",
    
    --Mage
    "sleep",
    "slow",
    "weaken",
    "acid blast",
    "ice sphere",
    "cold hands",
    "faerie fire",

    --Mentalist
    "ego whip",
    "divided will",
    "malison",
    
    --Necro
    "bone blight",
    "essence harvest",
    "wither",
    "blackmantle",
    
    --WD
    "blood curdle" ,
    "Contagion",
    "energy drain",
    "fog of gnats",
    "sulfuric wave",
    "orange blight",
    "putrefy",
    
    --Thief
    "nerve strike" ,
    
    --Warrior
    "dirt kicking",
    "taunt",
    
    --Other
    "fire breath",
    "cryoblast",
    
  }
  function isDebuff(spellname)
    return table.contains(debuffspelllist,spellname)
  end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Click Callbacks</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

function menu.click(tab,evt)

  for k,v in pairs(focusonlywindows) do 
    v()
  end
  
  menu[menu.current]:hide()
  menu.current = tab
  menu[menu.current]:show()
  

end

function menu.doubleclick(tab,evt)

  if menu[tab .. "_doubleclick"] ~= nil then
    menu[tab .. "_doubleclick"]()
  end 

end

function menu.setdoubleclick(tab,func)

  menu[tab .. "_doubleclick"] = func

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Bottom Main UI</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

setBorderBottom(100)
-- give it a unique name here
 bottom_container = bottom_container or
  Geyser.Container:new({name = "bottom_container", x = 0, y = -100, width = "100%", height = 100})


bottom_container_back = bottom_container_back or
  Geyser.Label:new({name = "bottom_container_back", x=0,y=0,width="100%",height="100%"},bottom_container)
bottom_container_back:lower()

gauge_container = gauge_container or
  Geyser.Container:new({name = "gauge_container", x = "11%", y = 0, width = "50%", height = "100%"},bottom_container)

--HP Gauge
hpbar = hpbar or
  Geyser.Gauge:new({name = "hpbar", x = "0%", y = "15%", width = "29.5%", height = "40%"}, gauge_container)
hpbar.front:setStyleSheet(
	   [[background-color: rgba(0, 149, 0,100%);
          border-width: 1px;
          border-color: black;
          border-style: solid;
          border-radius: 7;
          padding: 3px;
      ]]
)
hpbar.back:setStyleSheet(
[[background-color: rgba(255, 0, 0,50%);
          border-width: 1px;
          border-color: black;
          border-style: solid;
          border-radius: 7;
          padding: 3px;
      ]]
)
hpbar.text:setToolTip("Percentage of current hp", "10")

--Mana Gauge
manabar = manabar or
  Geyser.Gauge:new({name = "manabar", x = "30%", y = "15%", width = "29.5%", height = "40%"}, gauge_container)
manabar.front:setStyleSheet(

  [[background-color: rgba(31, 31, 176, 100%);
          border-width: 1px;
          border-color: black;
          border-style: solid;
          border-radius: 7;
          padding: 3px;
          color: white;
      ]]
)
manabar.back:setStyleSheet(
  [[background-color: rgba(31, 31, 176, 60%);
          border-width: 1px;
          border-color: black;
          border-style: solid;
          border-radius: 7;
          padding: 3px;
          color: white;
      ]]
)
manabar.text:setToolTip("Percentage of current mana", "10")
--Ascend Gauge
--250, 123, 30,
ascbar = ascbar or
  Geyser.Gauge:new({name = "ascbar", x = "0%", y = "65%", width = "89.5%", height = "20%"}, gauge_container)
ascbar.front:setStyleSheet(
  [[background-color: rgba(121,2,204,100%);
    border-width: 1px;
    border-style: solid;
    border-radius: 7;
    padding: 3px;]]
)
ascbar.back:setStyleSheet(
  [[background-color: rgba(121,2,204,40%);
    border-width: 1px;
    border-style: solid;
    border-radius: 7;
    padding: 3px;]]
)
ascbar.text:setToolTip("Percentage of current ascend", "10")
--mvm Gauge
--background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #efba4f, stop: 0.1 #ba8a2a, stop: 0.49 #966e1e, stop: 0.5 #a3700b, stop: 1 #B89902);
mvmbar = mvmbar or
  Geyser.Gauge:new({name = "mvmbar", x = "60%", y = "15%", width = "29.5%", height = "40%"}, gauge_container)

mvmbar.front:setStyleSheet(
  [[background-color: rgba(	204,97,40, 100%);
          border-width: 1px;
          border-color: black;
          border-style: solid;
          border-radius: 7;
          padding: 3px;
      ]]
)
mvmbar.back:setStyleSheet(
  [[background-color: rgba(	204,97,40, 50%);
          border-width: 1px;
          border-color: black;
          border-style: solid;
          border-radius: 7;
          padding: 3px;
      ]]
)
--181,175,32
mvmbar.text:setToolTip("Percentage of current movement", "10")

partyDisplay = partyDisplay or Geyser.Label:new({
  name = "partyLabel",
  x = "57%", y = "0",
  width = "7%", height = "100%",
}, bottom_container)

partyDisplay:setFontSize(10)
partyDisplay:setStyleSheet([[
	background-color: #202020;
	color: #AACCFF;
  font-family: Courier;
]])

partyDisplay2 = partyDisplay2 or Geyser.Label:new({
  name = "partyLabel2",
  x = "64%", y = "0",
  width = "7%", height = "100%",
}, bottom_container)

partyDisplay2:setFontSize(10)
partyDisplay2:setStyleSheet([[
	background-color: #202020;
	color: #AACCFF;
  font-family: Courier;
]])



userDisplay = userDisplay or Geyser.Label:new({
  name = "userLabel",
  x = "0%", y = "0",
  width = "10%", height = "100%",
}, bottom_container)

userDisplay:setFontSize(10)
userDisplay:setStyleSheet([[
	background-color: #202020;
	color: #AACCFF;
  font-family: Courier;
]])
userDisplay:raise()
--#222233;


function repositionBottomContainer()
  local userdisplaysize = {
    height = 100,
    x = 0,
    y = 0,
    width = 10
  }
  local gaugecontainersize =  {
    height = 100,
    x = 11,
    y = 0,
    width = 50
  }
  local partydisplaysize = {
    height = 100,
    x = 57,
    y = 0,
    width = 7
  }
  local partydisplay2size = {
    height = 100,
    x = 64,
    y =  0,
    width = 7
  }
  if mysettings.uicomponents.partybox == "on" then
    partyDisplay:show()
    partyDisplay2:show()
    gauge_container:resize(gaugecontainersize.width .. "%",gaugecontainersize.height .. "%")
  else
    partyDisplay:hide()
    partyDisplay2:hide()
    gauge_container:resize(gaugecontainersize.width + partydisplaysize.width + partydisplay2size.width .. "%",gaugecontainersize.height .. "%")
    
  end
  
end

repositionBottomContainer()</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Data Fd Window Click</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

--sysWindowMousePressEvent
function onMainWindowClickHandler( event, button, x, y )
  --dataBackCon:move("0%","80%")
  --dataBackCon:resize("100%","20%")
  --dataConOverlay:show()
  for k,v in pairs(focusonlywindows) do 
    v()
  end
end

registerAnonymousEventHandler("sysWindowMousePressEvent", "onMainWindowClickHandler")
</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Right and Left Main UI</name>
							<packageName></packageName>
							<script>right_container = right_container or Geyser.Container:new({
  name = "right_container",
  x = "-150px", y = "30px",
  width = "0px", height=getDimensions("main").height-130 .. "px"
})
right_container_back = right_container_back or
  Geyser.Label:new({name = "right_container_back", x=0,y=0,width="100%",height="100%"},right_container)
right_container_back:lower()

left_container = left_container or Geyser.Container:new({
  name = "left_container",
  x = "0px", y = "30px",
  width = "0px", height=getDimensions("main").height-130 .. "px"
})
left_container_back = left_container_back or
  Geyser.Label:new({name = "left_container_back", x=0,y=0,width="100%",height="100%"},left_container)
left_container_back:lower()

if mysettings.uicomponents.partybar == "left" then
  left_container:resize("150px","100%")
end
if mysettings.uicomponents.partybar == "right" then
  right_container:resize("150px","100%")
end
  

</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Resizors Left</name>
							<packageName></packageName>
							<script>MIN_WIDTH = 100
BORDER_WIDTH = 5
local SCROLL_WIDTH = 10

mMenuHDrag = mMenuHDrag or Geyser.Label:new({
  name = "mMenuHDrag",
  x = "0px", y = "0%",
  width = BORDER_WIDTH .. "px", height = "100%",
  fgColor = "black",
  color = "white",
}, menu.window)
mMenuHDrag:setStyleSheet([[
  background-color: white;
]])
 
setLabelCursor("mMenuHDrag",6)
--
-- Callback functions.
--
function onMenuHDragTimer()
  -- Get mouse position
  local x, y = getMousePosition()
  local windowWidth, windowHeight 
  
  local parentWidth,parentHeight = getMainWindowSize()
  
  if mysettings.XUI.UIMode == "container" then
    windowWidth = menu.window.get_width()
    windowHeight = menu.window.get_height()
   
  else
    windowWidth,windowHeight = getUserWindowSize("menu.back")
  end

  local width

  -- Substract the top of the label  to get the new height.
  width = parentWidth-x
  if width &lt; MIN_WIDTH then
    -- Height is too small.
    width = MIN_WIDTH
  end
  
  --OOCCon:resize(windowWidth-BORDER_WIDTH.."px", OOCCon.height)
  --OOCCon:reposition()
  
  -- Set the new size and restart timer.
  --menu.window:move("-" .. width .. "px","0px")
  --menu.window:resize(width.."px", windowHeight.."px")
  menu.window:set_constraints({x="-" .. width .. "px",y="0px",width=width.."px", height=(parentHeight).."px"})
  menu.window:reposition()

  --menu.container:set_constraints({x="0px",y=menu.container.y,width=(width).."px", height=menu.container.height})

  
end
 
function onMenuHDragClick()
  -- The user clicked the drag label.
  -- Start a temp timer to update the size of the label.
  if  exists("hMenudragtimer", "timer") == 0 then
    hdragtimer = permTimer("hMenudragtimer", "", .016, [[onMenuHDragTimer()]])
    echo("timer created")
  end

  enableTimer("hMenudragtimer")
  debugecho("timer enabled")
end
 
function onMenuHDragRelease()
  -- Button is release so stop timer and updates.
  disableTimer("hMenudragtimer")
  debugecho("released")
  resizeParent()
end
 

--
-- Set mouse event callbacks.
--
setLabelClickCallback("mMenuHDrag", "onMenuHDragClick")
setLabelReleaseCallback("mMenuHDrag", "onMenuHDragRelease")
</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Right Windows</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>ScoreList</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

menu_addtab("Score") 

scoreCon = scoreCon or Geyser.MiniConsole:new({
  name="ScoreList",
  x="2%", y="2%",
  wrapAt = chatWrap,
  width="98%", height="96%",
  fgColor = "white",
  color = "black",
  fontSize=chatFontSize,
  docked = true,
  scrollBar = true,
},menu.Score)
scoreCon:setColor("black")
scoreCon:setFontSize(mysettings.scorefontsize)

enableScrollBar("ScoreList")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Quest Creator</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

menu_addtab("Quests")

questStatusCon = questStatusCon or Geyser.MiniConsole:new({
  name="queststatus",
  x="2%", y="2%",
  autowrap=true,
  fgColor = "white",
  color = "black",
  width="98%", height="96%",
  fontSize=mysettings.questfontsize,
  scrollBar = true,
},menu.Quests)

questStatusCon:resetAutoWrap()

enableScrollBar("queststatus")



</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>VariableList</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

menu_addtab("Variables")

variableCon = variableCon or Geyser.MiniConsole:new({
  name="VariableList",
  x="2%", y="2%",
  wrapAt = chatWrap,
  width="98%", height="96%",
  fgColor = "white",
  color = "black",
  fontSize=chatFontSize,
  docked = true,
  scrollBar = true,
},menu.Variables)
variableCon:setColor("black")
variableCon:setFontSize(mysettings.variablefontsize)

enableScrollBar("VariableList")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>CombatList</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

menu_addtab("Combat")

combatCon = combatCon or Geyser.MiniConsole:new({
  name="CombatList",
  x="2%", y="2%",
  wrapAt = chatWrap,
  width="96%", height="96%",
  fgColor = "white",
  color = "black",
  fontSize=chatFontSize,
  docked = true,
  scrollBar = true,
},menu.Combat)
combatCon:setColor("black")
combatCon:setFontSize(mysettings.scorefontsize)

enableScrollBar("CombatList")</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Experience rate visualization</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end


menu_addtab("XP")


xp_container = xp_container or Geyser.Container:new({name = "xp_container", x = 0, y = 0, width = "100%", height = "100%"},menu.XP)

--XP RATE
xprTitle = xprTitle or
  Geyser.Label:new(
    {
      name = "xprTitle",
      x = "0%",
      y = "0.5c",
      width = "100%",
      height = "2c",
      message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    xp_container
  )
xprTitle:echo(" Experience Rate:")
xprText = xprText or
  Geyser.Label:new(
    {
      name = "xprText",
      x = "0%",
      y = "11.5c",
      width = "100%",
      height = "3c",
      message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    xp_container
  )
xprText:setStyleSheet(
  [[
    font: large center "Garamond";
  	
  	background-color: #222233;
  	color: #AACCFF;
    padding-left:15px;
  ]]
  )
xprDisplay = xprDisplay or
  Geyser.Label:new(
    {
      name = "xprDisplay",
      x = "0%",
      y = "1.8c",
      width = "100%",
      height = "9c",
      message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    xp_container
  )
xprDisplay:setFontSize(10)
xprDisplay:setStyleSheet(
  [[
  font: large center "Garamond";
	
	background-color: #222233;
	color: #AACCFF;

]]
)
local barcount = 16

local barstart = 100/(barcount+1)
local barwidth = (100/(barcount+1)) - .2
xpRateBars = xpRateBars or {}

for k=1,barcount  do


  --echo("-" ..((k)*barstart)+.1 .. "%" .. "\n")
  xpRateBars[k] = xpRateBars[k] or
    Geyser.Gauge:new(
      {name = "xpRateBar" .. k, x = "-" .. (2+(k*6)) .. "%", y = "5%", width = "5%", height = "90%", orientation = "vertical"},
      xprDisplay
    )
  xpRateBars[k]:move("-" ..((k)*barstart)+(barstart/2)+.1 .. "%","5%")
  xpRateBars[k]:resize(barwidth .. "%","90%")
  xpRateBars[k].front:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #BA84E3, stop: 0.1 #B36BE9, stop: 0.49 #7D00DA stop: 0.5 #890FE5, stop: 1 #7D00DA);
      border-top: 0px black solid;
      border-left: 0px black solid;
      border-bottom: 0px black solid;
      border-radius: 0;
  		font-size: 5;]]
  )
  xpRateBars[k].back:setStyleSheet(
    [[background-color: black;
      border-width: 0px;
      border-color: black;
      border-style: solid;
      border-radius: 0;
      padding: 0px;]]
  )  

end


--KILL RATE

--killrateText = killrateText or
  -- Geyser.Label:new(
    -- {
      -- name = "killrateText",
      -- x = "2%",
      -- y = "22c",
      -- width = "100%",
      -- height = "3c",
      -- message = [[&lt;center&gt;&lt;/center&gt;]],
    -- },
    -- xp_container
  -- )
killrateTitle = killrateTitle or
  Geyser.Label:new(
    {
      name = "killrateTitle",
      x = "0%",
      y = "14c",
      width = "100%",
      height = "2c",
      message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    xp_container
  )
killrateTitle:echo(" Kill Rate:")
 killrateDisplay = killrateDisplay or
   Geyser.Label:new(
     {
       name = "killrateDisplay",
        x = "0%",
        y = "13.5c",
        width = "100%",
        height = "8c",
        message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    xp_container
  )
killrateDisplay:setFontSize(10)
killrateDisplay:setStyleSheet(
  [[
  font: large center "Garamond";
	
	background-color: #222233;
	color: #AACCFF;
]]
)

killRateBars = killRateBars or {}
for k=1,16 do

  killRateBars[k] = killRateBars[k] or
    Geyser.Gauge:new(
      {name = "killRateBar" .. k, x = "-" .. (2+(k*6)) .. "%", y = "5%", width = "5%", height = "90%", orientation = "vertical"},
      killrateDisplay
    )
  killRateBars[k].front:setStyleSheet(
    [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ff9900, stop: 0.1 #e58700, stop: 0.49 #d47c00 stop: 0.5 #b26400, stop: 1 #985300);
      border-top: 1px black solid;
      border-left: 1px black solid;
      border-bottom: 1px black solid;
      border-radius: 7;
  		font-size: 5;]]
  )
  killRateBars[k].back:setStyleSheet(
    [[background-color: black;
      border-width: 1px;
      border-color: black;
      border-style: solid;
      border-radius: 7;
  		
      padding: 3px;]]
  )  
  killRateBars[k]:move("-" ..((k)*barstart)+(barstart/2)+.1 .. "%","5%")
    killRateBars[k]:resize(barwidth .. "%","90%")
    killRateBars[k].front:setStyleSheet(
      [[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ff9900, stop: 0.1 #e58700, stop: 0.49 #d47c00 stop: 0.5 #b26400, stop: 1 #985300);
        border-top: 0px black solid;
        border-left: 0px black solid;
        border-bottom: 0px black solid;
        border-radius: 0;
    		font-size: 5;]]
    )
    killRateBars[k].back:setStyleSheet(
      [[background-color: black;
        border-width: 1px;
        border-color: black;
        border-style: solid;
        border-radius: 1;
        padding: 1px;]]
    )  
end

local graphoptions={{1,"1 min"},{5,"5 mins"},{10,"10 mins"},{15,"15 mins"},{30,"30 mins"},{60,"1 hr"},}



if xpGraphOptionsBox == nil then
  xpGraphOptionsBox =  
    Geyser.HBox:new(
     {
       name = "xpGraphOptionsBox",
        x = "0%",
        y = "25c",
        width = "100%",
        height = "2c",
        message = [[&lt;center&gt;&lt;/center&gt;]],
    },
    xp_container
  )
  
  xpGraphOptions = {}
  
  for k,v in pairs(graphoptions) do
    xpGraphOptions[v[1]] = 
    Geyser.Label:new(
      {
        name = "graphoption" .. k,
        width = "100%",
        height = "2c",
        message = [[&lt;center&gt;&lt;/center&gt;]],
      },
      xpGraphOptionsBox
    )
    xpGraphOptions[v[1]]:setFontSize(10)
    xpGraphOptions[v[1]]:setStyleSheet(
      [[
      font: large center "Garamond";
    	
    	background-color: #222233;
    	color: #AACCFF;
    
    ]]
    )
    xpGraphOptions[v[1]]:echo(v[2])
  end
end
for k,v in pairs(graphoptions) do
    xpGraphOptions[v[1]]:setStyleSheet(
      [[
      font: large center "Garamond";
    	
    	background-color: #222233;
    	color: #AACCFF;
    
    ]]
    )
    xpGraphOptions[v[1]]:echo("&lt;center&gt;" .. v[2])
    xpGraphOptions[v[1]]:setClickCallback("changegraph",v[1])
end

function changegraph(time)

  displaytimespan=tonumber(time)
  updateDisplayTime()

end</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Chat Window</name>
							<packageName></packageName>
							<script>local windowWidth, windowHeight = getMainWindowSize()
if chatFontSize == nil then chatFontSize = 8 end
if chatWidth == nil then chatWidth = 650 end
if chatWrap == nil then chatWrap = 80 end

OOCCon = OOCCon or Geyser.MiniConsole:new({
  name="OOC",
  x="-25%", y="80%",
  autoWrap = true,
  width="25%",
  height="10%",
  fgColor = "white",
  color = "red",
  
})


OOCCon:setColor(100,100,100,100)
OOCCon:setBgColor(100,100,100)

OOCCon:setFontSize(mysettings.oocchatsize)
enableScrollBar("OOC")
OOCCon:resetAutoWrap()


OOCConOverlay = OOCConOverlay or Geyser.Label:new({
  name = "OOCConOverlay",
  x = 0, y = 0,
  x="-25%", y="80%",
  width="25%", height="10%",
})
OOCConOverlay:setStyleSheet([[
  background-color: rgba(0,0,0,25%);
]])


OOCConOverlay:setClickCallback("OOCCon_click",OOCCon)
function OOCCon_click(tab)
  OOCCon:resize("25%","50%")
  OOCCon:move("-25%","30%")
  OOCConOverlay:hide()
end

function OOCCon_hide(tab)
  OOCCon:resize("25%","20%")
  OOCCon:move("-25%","80%")
  OOCConOverlay:show()
end

--table.insert(focusonlywindows, function() OOCCon_hide() end)

OOCCon:hide()
OOCConOverlay:hide()


</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>DataCollection</name>
							<packageName></packageName>
							<script>

dataBackCon = dataBackCon or Geyser.Label:new({
  name="dataBackCon",
  x="-30%", y="-100px",
  color="black",
  width="30%", height="100px",
})

dataBackCon:setStyleSheet([[
  border-top: 1px solid white;
  background-color: rgba(0,0,0,100%);
]])

dataCon = dataCon or Geyser.MiniConsole:new({
  name="data",
  x="4%", y="5%",
  width="96%", height="95%",
  wrapAt = 100,
},dataBackCon)


dataCon:setBufferSize (10000, 1000)
dataCon:fg("white")
dataCon:bg("black")
dataCon:setColor("black")
enableScrollBar("data")

function updateDataFont()
  dataCon:setFontSize(mysettings.datafontsize)
  local width,height = calcFontSize(getFontSize("data"))
  local wrap = math.floor(dataCon:get_width()/width)-2
  dataCon:setWrap(wrap)
end

updateDataFont()


dataConOverlay = dataConOverlay or Geyser.Label:new({
  name = "dataConOverlay",
  x = 0, y = 0,
  x="-25%", y="-100px",
  width="25%", height="100px",
})
dataConOverlay:setStyleSheet([[
  background-color: rgba(0,0,0,0%);
]])

dataConOverlay:setClickCallback("dataCon_click",dataCon)
function dataCon_click(tab)
  dataBackCon:move("-30%","30%")
  dataBackCon:resize("30%","70%")
  dataConOverlay:hide()
end

function dataCon_hide(tab)
  dataBackCon:move("-30%","-100px")
  dataBackCon:resize("30%","100px")
  dataConOverlay:show()
end

 table.insert(focusonlywindows, function() dataCon_hide() end)
  


--createMiniConsole("tab1Center", "data", 1, 1, 500, 500)</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>XP Rate Functions</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

function updateXPbars(timespan,xptype)
  local barcount=16

  if timespan == nil then
    timespan = 5
  end
  
  if xptype == nil then
	xptype = 0
  end
  
  for index=1,barcount do
    xpRateBars[index]:setValue(1,100,0)
  end
  
  local firstindex = table.size(xpcollector)
  local lastindex = firstindex-(barcount*timespan)+1
  if lastindex &lt;= 0 then
    lastindex = 1
  end
  local index = 1
  
  local calcnum = 0
  local cnt=0
  
  local topnum =1
  for k=firstindex,lastindex,-1 do
    calcnum = calcnum + xpcollector[k].xp
    cnt = cnt + 1
    if cnt % timespan == 0 then
      if topnum &lt; calcnum then
        topnum = calcnum
      end
      cnt=0
      calcnum = 0
    end
  end
  if topnum &lt; calcnum then
     topnum = calcnum
  end
  cnt=0
  calcnum=0
  for k=firstindex,lastindex,-1 do
    local tmpnum = xpcollector[k].xp
    
--echo(index)    
    cnt = cnt + 1
    calcnum = calcnum + tmpnum
    
    if cnt % timespan == 0 then
      local displaynum = "&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;center&gt;" .. string.format("%2.1f",calcnum) .."&lt;/center&gt;"
      if calcnum == 0 then calcnum = 1 end
	  if xptype == 0 then
		xpRateBars[index]:setValue(calcnum,topnum,displaynum)
	  else
		xpRateBars[index]:setValue(calcnum/9900000,topnum/9900000,displaynum/990000)
	  end
      cnt=0
      calcnum = 0
      index=index+1
    end
    
  end
  if index &lt;= barcount then
  xpRateBars[index]:setValue(calcnum,topnum,calcnum)
  end
end

function updateKillbars(timespan)
  local barcount=16
  if timespan == nil then
    timespan = 5
  end
  
  for index=1,barcount do
    killRateBars[index]:setValue(1,100,0)
  end
  
  local firstindex = table.size(killcollector)
  local lastindex = firstindex-(barcount*timespan)+1
  if lastindex &lt;= 0 then
    lastindex = 1
  end
  local index = 1
  
  local calcnum = 0
  local cnt=0
  
  local topnum =1
  for k=firstindex,lastindex,-1 do
    calcnum = calcnum + killcollector[k].kills
    cnt = cnt + 1
    if cnt % timespan == 0 then
      if topnum &lt; calcnum then
        topnum = calcnum
      end
      cnt=0
      calcnum = 0
    end
  end
  if topnum &lt; calcnum then
     topnum = calcnum
  end
  cnt=0
  calcnum=0
  for k=firstindex,lastindex,-1 do
    local tmpnum = killcollector[k].kills
    --if tmpnum == 0 then tmpnum = 1 end
--echo(index)    
    cnt = cnt + 1
    calcnum = calcnum + tmpnum
    
    if cnt % timespan == 0 then
      local displaynum = calcnum
      if calcnum == 0 then calcnum = 1 end
      killRateBars[index]:setValue(calcnum,topnum,displaynum)
      cnt=0
      calcnum = 0
      index=index+1
    end
    
  end
  if index &lt;= barcount then
  killRateBars[index]:setValue(calcnum,topnum,calcnum)
  end
  
  

end</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Bottom Container</name>
						<packageName></packageName>
						<script></script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Party Level</name>
							<packageName></packageName>
							<script>function fillPartyBox()



  local lbltext = "" --"Party&lt;br/&gt;"
  local lbltext2 = ""
  local maxsize = 6
  
  local lblentries = {}
  table.insert(lblentries,"")
  table.insert(lblentries,"")
  if table.size(xaos.party.members) == 0 then
    lblentries[1] = "Not in a Party"
  end
  local index = 1
  for k,v in pairs(xaos.party.members) do
    if k&gt;maxsize then
      index=2
    end
  
    local lblhp = "   " .. string.trim(tostring(v.hp))
    lblhp = string.sub(lblhp,string.len(lblhp)-2,string.len(lblhp))
    lblhp = string.gsub(lblhp," ","&amp;nbsp;")
    
    local tmplbl = string.sub(v.name.."   ",1,4) .. "   " .. lblhp 
    tmplbl = string.gsub(tmplbl," ","&amp;nbsp;")
    --tmplbl = tmplbl .. "&lt;br/&gt;"
    tmplbl = tmplbl .. "&lt;br/&gt;"
    
    lblentries[index] = lblentries[index] .. tmplbl
  end
  for k=1,5 do
    for j=1,2 do
      lblentries[j] = lblentries[j] .. "&lt;br/&gt;"
    end
  end
  
  partyDisplay:echo(lblentries[1])
  partyDisplay2:echo(lblentries[2])

end



</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>User Info</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

--bottom_container

</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>Popup Windows</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
						<eventHandlerList />
						<Script isActive="yes" isFolder="no">
							<name>Combat Window</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

combatWin = combatWin or Geyser.UserWindow:new({
  name="combatWin",
  x="0%", y="0%",
  autowrap=true,
  fgColor = "white",
  color = "black",
  width="100%", height="100%",
  fontSize=mysettings.questfontsize,
  scrollBar = true,
})

--xpWinCon = Geyser.:new({
--  name="xpWinCon",
--  x="0%", y="0%",
--  autowrap=true,
--  fgColor = "white",
--  color = "black",
--  width="100%", height="100%",
--  fontSize=mysettings.questfontsize,
--  scrollBar = false,
--},xpWin)

--xpWin:resetAutoWrap()

if combatWin.autoDock then
  combatWin:disableAutoDock() 
end
enableScrollBar("combatWin")
combatWin:hide()


--menu.setdoubleclick("Combat",function() combatWin:show() end)


</script>
							<eventHandlerList />
						</Script>
						<Script isActive="no" isFolder="no">
							<name>XP Window</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

xpWin = xpWin or Geyser.UserWindow:new({
  name="xpWin",
  x="0%", y="0%",
  autowrap=true,
  fgColor = "white",
  color = "black",
  width="100%", height="100%",
  fontSize=mysettings.questfontsize,
  scrollBar = false,
})

--xpWinCon = Geyser.Container:new({
--  name="xpWinCon",
--  x="0%", y="0%",
--  autowrap=true,
--  fgColor = "white",
--  color = "black",
--  width="100%", height="100%",
--  fontSize=mysettings.questfontsize,
--  scrollBar = false,
--},xpWin)

--xpWin:resetAutoWrap()

if xpWin.autoDock then
  xpWin:disableAutoDock() 
end
enableScrollBar("xpWin")
xpWin:hide()
--menu.setdoubleclick("XP",function() xpWin:show() end)


</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Quest Window</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then
return
end

questStatusWin = questStatusWin or Geyser.UserWindow:new({
  name="queststatuswin",
  x="2%", y="2%",
  autowrap=true,
  fgColor = "white",
  color = "black",
  width="96%", height="96%",
  fontSize=mysettings.questfontsize,
  scrollBar = false,
})

--questStatusWinCon = Geyser.MiniConsole:new({
--  name="queststatuswincon",
--  x="2%", y="2%",
--  autowrap=true,
--  fgColor = "white",
--  color = "black",
--  width="96%", height="96%",
--  fontSize=mysettings.questfontsize,
--  scrollBar = true,
--},questStatusWin)

questStatusWin:resetAutoWrap()

if questStatusWin.autoDock then
  questStatusWin:disableAutoDock() 
end
enableScrollBar("queststatuswin")

questStatusWin:hide()

menu.setdoubleclick("Quests",function() questStatusWin:show() end)




</script>
							<eventHandlerList />
						</Script>
						<Script isActive="yes" isFolder="no">
							<name>Setup Window</name>
							<packageName></packageName>
							<script>if mysettings.UIType ~= "XUI" then return end

setupWin = setupWin or Geyser.UserWindow:new({
  name="setupWin",
  x="25%", y="25%",
  autowrap=true,
  fgColor = "white",
  color = "grey",
  width="50%", height="50%",
  fontSize=mysettings.questfontsize,
  scrollBar = false,
})

 setupWin:setBgColor (10,10,10)
 setupWin:setFgColor (255,255,255)

setupWin.buttons = setupWin.buttons or {}

local row = 1
local col = 1

local btnheight = 50
local btnwidth  = 200



setupWin.buttons.msdp = 
  setupWin.buttons.msdp or Geyser.Label:new({
    name = "setupmsdplabel",
    x = btnwidth*col .. "px", y = btnheight*row .. "px",
    width = btnwidth-10 .. "px", height = btnheight-10 .. "px",
    fgColor = "blue",
    color = "white",
  },setupWin)
  
 setupWin.buttons.msdp:setStyleSheet([[
      background-color: blue;
      color: white;
      margin-right: 1px;
      margin-left: 1px;
      border-top: 1px solid white;
    ]])
  
 setupWin.buttons.msdp:echo("MSDP: " .. tostring(mysettings.features.msdp),"white","c16")
 
  setupWin.buttons.msdp:setClickCallback("setupWinMSDPClick")
 
  function setupWinMSDPClick()
    setFeature("msdp",not mysettings.features.msdp)
    setupWin.buttons.msdp:echo("MSDP: " .. tostring(mysettings.features.msdp),"white","c16")
  end 
 
 row = row + 1
 col = 1
 
 setupWin.buttons.partybox = 
  setupWin.buttons.partybox or Geyser.Label:new({
    name = "setuppartyboxlabel",
    x = btnwidth*col .. "px", y = btnheight*row .. "px",
    width = btnwidth-10 .. "px", height = btnheight-10 .. "px",
    fgColor = "blue",
    color = "white",
  },setupWin)
  
 setupWin.buttons.partybox:setStyleSheet([[
      background-color: blue;
      color: white;
      margin-right: 1px;
      margin-left: 1px;
      border-top: 1px solid white;
    ]])
  
 setupWin.buttons.partybox:echo("Bottom Party: " .. tostring(mysettings.uicomponents.partybox),"white","c16")
 
  setupWin.buttons.partybox:setClickCallback("setupWinpartyboxClick")
 
  function setupWinpartyboxClick()
    if mysettings.uicomponents.partybox == "on" then
      mysettings.uicomponents.partybox = "off"
    else
      mysettings.uicomponents.partybox = "on"
    end
    savemysettings()
    setupWin.buttons.partybox:echo("Bottom Party: " .. tostring(mysettings.uicomponents.partybox),"white","c16")
    repositionBottomContainer()
  end 
 
  row = row + 1
 col = 1
 
 setupWin.buttons.partybarleft = 
  setupWin.buttons.partybarleft or Geyser.Label:new({
    name = "setuppartybarleftlabel",
    x = btnwidth*col .. "px", y = btnheight*row .. "px",
    width = btnwidth-10 .. "px", height = btnheight-10 .. "px",
    fgColor = "blue",
    color = "white",
  },setupWin)
  
 setupWin.buttons.partybarleft:setStyleSheet([[
      background-color: blue;
      color: white;
      margin-right: 1px;
      margin-left: 1px;
      border-top: 1px solid white;
    ]])
  
 setupWin.buttons.partybarleft:echo("Side Party: Left","white","c16")
 
  setupWin.buttons.partybarleft:setClickCallback("setupWinpartybarleftClick")
 
  function setupWinpartybarleftClick()
    
    mysettings.uicomponents.partybar = "left"
    savemysettings()
    switchMSDPsidepanel()
	
  end 
 
 col = col + 1
 
 setupWin.buttons.partybarright = 
  setupWin.buttons.partybarright or Geyser.Label:new({
    name = "setuppartybarrightlabel",
    x = btnwidth*col .. "px", y = btnheight*row .. "px",
    width = btnwidth-10 .. "px", height = btnheight-10 .. "px",
    fgColor = "blue",
    color = "white",
  },setupWin)
  
 setupWin.buttons.partybarright:setStyleSheet([[
      background-color: blue;
      color: white;
      margin-right: 1px;
      margin-right: 1px;
      border-top: 1px solid white;
    ]])
  
 setupWin.buttons.partybarright:echo("Side Party: right","white","c16")
 
  setupWin.buttons.partybarright:setClickCallback("setupWinpartybarrightClick")
 
  function setupWinpartybarrightClick()
    
    mysettings.uicomponents.partybar = "right"
    savemysettings()
    switchMSDPsidepanel()
	
  end 
  
  col = col + 1
  
   setupWin.buttons.partybaroff = 
  setupWin.buttons.partybaroff or Geyser.Label:new({
    name = "setuppartybarofflabel",
    x = btnwidth*col .. "px", y = btnheight*row .. "px",
    width = btnwidth-10 .. "px", height = btnheight-10 .. "px",
    fgColor = "blue",
    color = "white",
  },setupWin)
  
 setupWin.buttons.partybaroff:setStyleSheet([[
      background-color: blue;
      color: white;
      margin-off: 1px;
      margin-off: 1px;
      border-top: 1px solid white;
    ]])
  
 setupWin.buttons.partybaroff:echo("Side Party: off","white","c16")
 
  setupWin.buttons.partybaroff:setClickCallback("setupWinpartybaroffClick")
 
  function setupWinpartybaroffClick()
    
    mysettings.uicomponents.partybar = "off"
    savemysettings()
    switchMSDPsidepanel()
	
  end 
 
 row = row + 1
 col = 1
  
setupWin.buttons.datafontsizeup = 
  setupWin.buttons.datafontsizeup or Geyser.Label:new({
    name = "setupdatafontsizelabel",
    x = btnwidth*col .. "px", y = btnheight*row .. "px",
    width = btnwidth-10 .. "px", height = btnheight-10 .. "px",
    fgColor = "blue",
    color = "white",
  },setupWin)
  
setupWin.buttons.datafontsizeup:setStyleSheet([[
      background-color: blue;
      color: white;
      margin-off: 1px;
      margin-off: 1px;
      border-top: 1px solid white;
    ]])
  
setupWin.buttons.datafontsizeup:echo("Font Up ","white","c16")
 
setupWin.buttons.datafontsizeup:setClickCallback("setupWindatafontsizeupClick")

function setupWindatafontsizeupClick()

	mysettings.datafontsize = mysettings.datafontsize + 1
	savemysettings()
  updateDataFont()
end 
 
  col = col + 1
  
setupWin.buttons.datafontsizedown = 
  setupWin.buttons.datafontsizedown or Geyser.Label:new({
    name = "setupdatafontsizedownlabel",
    x = btnwidth*col .. "px", y = btnheight*row .. "px",
    width = btnwidth-10 .. "px", height = btnheight-10 .. "px",
    fgColor = "blue",
    color = "white",
  },setupWin)
  
setupWin.buttons.datafontsizedown:setStyleSheet([[
      background-color: blue;
      color: white;
      margin-off: 1px;
      margin-off: 1px;
      border-top: 1px solid white;
    ]])
  
setupWin.buttons.datafontsizedown:echo("Font Down ","white","c16")
 
setupWin.buttons.datafontsizedown:setClickCallback("setupWindatafontsizedownClick")

function setupWindatafontsizedownClick()

	mysettings.datafontsize = mysettings.datafontsize - 1
	savemysettings()
  updateDataFont()
end 



row = row + 1
 col = 1
 
 setupWin.buttons.debuffbar = 
  setupWin.buttons.debuffbar or Geyser.Label:new({
    name = "setupdebuffbarlabel",
    x = btnwidth*col .. "px", y = btnheight*row .. "px",
    width = btnwidth-10 .. "px", height = btnheight-10 .. "px",
    fgColor = "blue",
    color = "white",
  },setupWin)
  
 setupWin.buttons.debuffbar:setStyleSheet([[
      background-color: blue;
      color: white;
      margin-right: 1px;
      margin-left: 1px;
      border-top: 1px solid white;
    ]])
  
 setupWin.buttons.debuffbar:echo("Debuff Bar: " .. tostring(mysettings.uicomponents.debuffbar),"white","c16")
 
  setupWin.buttons.debuffbar:setClickCallback("setupWindebuffbarClick")
 
  function setupWindebuffbarClick()
    if mysettings.uicomponents.debuffbar == "on" then
      mysettings.uicomponents.debuffbar = "off"
    else
      mysettings.uicomponents.debuffbar = "on"
    end
    savemysettings()
    showAlertLabels()
    setupWin.buttons.debuffbar:echo("Debuff Bar: " .. tostring(mysettings.uicomponents.debuffbar),"white","c16")
  end 
 

--END BUTTONS

if setupWin.autoDock then
  setupWin:disableAutoDock() 
end
setupWin:hide()


</script>
							<eventHandlerList />
						</Script>
					</ScriptGroup>
					<Script isActive="yes" isFolder="no">
						<name>Fix Layering</name>
						<packageName></packageName>
						<script>--mMenuVDrag:raise()
mMenuHDrag:raise()
menu.displaybutton:raise()

if mysettings.UIType ~= "XUI" then
return
end

function resetWindows() 

  for k,v in pairs(menu.tabs) do
    menu[menu.tabs[k]]:show()
    menu[menu.tabs[k]]:hide()
  end
  
  menu[menu.current]:show()
  
  
end

resetWindows() </script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>ResizeParent</name>
						<packageName></packageName>
						<script>function resizeParent()
  local windowWidth, windowHeight = getMainWindowSize()
  local userwindowWidth 
  if menu.window.visible then
    userwindowWidth = menu.window.get_width()
  else
    userwindowWidth = 0
  end

  local extraright = 0
  local extraleft = 0

  if mysettings.uicomponents.partybar == "right" then
    extraright = extraright + 150
  elseif mysettings.uicomponents.partybar == "left" then
    extraleft = extraleft + 150
  end
  
  --bottom_container:resize(windowWidth-userwindowWidth-BORDER_WIDTH .. "px","100px")
  bottom_container:resize(windowWidth-BORDER_WIDTH .. "px","100px")
  
  right_container:move("-" .. userwindowWidth+BORDER_WIDTH+extraright .. "px","30px")
  
  setBorderRight(userwindowWidth+BORDER_WIDTH+extraright)
  setBorderLeft(extraleft)
end
 
resizeParent()

hideMenu()

</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>UI Helpers</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>UI Helpers</name>
						<packageName></packageName>
						<script>function updateDisplayTime()

  updateXPbars(displaytimespan)
  updateKillbars(displaytimespan)
  xprText:echo(calcAscendTime(xaos.Level,xaos.LevelPercent,displaytimespan))

end

function calcAscendTime(lvl,lvlpercent,timespan) 

  if timespan == nil then
    timespan = 5
  end

  lvl = lvl % 100
  lvl = lvl -1
	local curascdings = lvl*((2+(lvl*2))/2)
	local nextascdings = (lvl+1)*((2+((lvl+1)*2))/2)
	
	local curdings = curascdings + ((nextascdings-curascdings)*(lvlpercent/100))
	local leftdings = 9900-curdings
	leftdings = leftdings * 100 
	--debugecho(leftdings)
	local firstindex = table.size(xpcollector)
	local lastindex = firstindex-(16*timespan)+1
	if lastindex &lt;= 0 then
	lastindex = 1
	end
	if firstindex == lastindex then return "unknown" end
	local total = 0
  local cnter=0
	for k=firstindex,lastindex,-1 do
		total = total + xpcollector[k].xp
    cnter=cnter+1
	end
  debugecho("Counter: " .. (cnter))
	--Average
  debugecho("Devisor: " .. (firstindex - lastindex))
	total = total / (cnter)
  local avg = total
  debugecho("Average: " .. total)
	--Down to minute chunks
	total = total --/ 5
	debugecho("Min Avg: " .. total)
	total = leftdings/total
	--debugecho(total)
  
  totalstring = ""
  --if (total/1440) &gt; 0 then
  totalstring = totalstring .. math.floor(total/1440) .. " days, "
  total = total % 1440
  --end
  --if (total/60) &gt; 0 then
  totalstring = totalstring .. math.floor(total/60) .. " hours, "
  total = total % 60
  --end
  totalstring = totalstring .. string.format("%4.2f",total) .. " minutes."
  totalstring = totalstring .. " (Avg: " .. string.format("%4.2f",avg*timespan) .. ")"
  return totalstring
end

function calcAscendPercent(level, levelPercent)
  return 100*xaos.ascendcount/10000
  
  --level = tonumber(level)%100
  --levelPercent = tonumber(levelPercent)
  
  --level = level - 1
  --nextlevel = level+1
  
  --local curasc = level*((2+(level*2))/2)/9900
  --local nextasc = nextlevel*((2+(nextlevel*2))/2)/9900
  
  --return 100*(curasc+((nextasc-curasc)*(levelPercent/100)))
  
  --return 100*(levelratio[(level%100)]+((levelratio[(level%100)+1]-levelratio[(level%100)])*(tonumber(levelPercent)/100)))
end

function updateXPbars(timespan,xptype)
  if timespan == nil then
    timespan = 5
  end
  
  if xptype == nil then
	xptype = 0
  end
  
  for index=1,16 do
    xpRateBars[index]:setValue(1,100,0)
  end
  
  local firstindex = table.size(xpcollector)
  local lastindex = firstindex-(16*timespan)+1
  if lastindex &lt;= 0 then
    lastindex = 1
  end
  local index = 1
  
  local calcnum = 0
  local cnt=0
  
  local topnum =1
  for k=firstindex,lastindex,-1 do
    calcnum = calcnum + xpcollector[k].xp
    cnt = cnt + 1
    if cnt % timespan == 0 then
      if topnum &lt; calcnum then
        topnum = calcnum
      end
      cnt=0
      calcnum = 0
    end
  end
  if topnum &lt; calcnum then
     topnum = calcnum
  end
  cnt=0
  calcnum=0
  for k=firstindex,lastindex,-1 do
    local tmpnum = xpcollector[k].xp
    
--echo(index)    
    cnt = cnt + 1
    calcnum = calcnum + tmpnum
    
    if cnt % timespan == 0 then
      local displaynum = calcnum
      if calcnum == 0 then calcnum = 1 end
	  if xptype == 0 then
		xpRateBars[index]:setValue(calcnum,topnum,displaynum)
	  else
		xpRateBars[index]:setValue(calcnum/9900000,topnum/9900000,displaynum/990000)
	  end
      cnt=0
      calcnum = 0
      index=index+1
    end
    
  end
  if index &lt;= 16 then
  xpRateBars[index]:setValue(calcnum,topnum,calcnum)
  end
  
  xprText:echo("Approx Time to Ascend: " ..calcAscendTime(xaos.Level,xaos.LevelPercent,displaytimespan))
end

function updateKillbars(timespan)

  if timespan == nil then
    timespan = 5
  end
  
  for index=1,16 do
    killRateBars[index]:setValue(1,100,0)
  end
  
  local firstindex = table.size(killcollector)
  local lastindex = firstindex-(16*timespan)+1
  if lastindex &lt;= 0 then
    lastindex = 1
  end
  local index = 1
  
  local calcnum = 0
  local cnt=0
  
  local topnum =1
  for k=firstindex,lastindex,-1 do
    calcnum = calcnum + killcollector[k].kills
    cnt = cnt + 1
    if cnt % timespan == 0 then
      if topnum &lt; calcnum then
        topnum = calcnum
      end
      cnt=0
      calcnum = 0
    end
  end
  if topnum &lt; calcnum then
     topnum = calcnum
  end
  cnt=0
  calcnum=0
  for k=firstindex,lastindex,-1 do
    local tmpnum = killcollector[k].kills
    --if tmpnum == 0 then tmpnum = 1 end
--echo(index)    
    cnt = cnt + 1
    calcnum = calcnum + tmpnum
    
    if cnt % timespan == 0 then
      local displaynum = calcnum
      if calcnum == 0 then calcnum = 1 end
      killRateBars[index]:setValue(calcnum,topnum,displaynum)
      cnt=0
      calcnum = 0
      index=index+1
    end
    
  end
  if index &lt;= 16 then
  killRateBars[index]:setValue(calcnum,topnum,calcnum)
  end
  
  

end


function updatestats() 
  if mysettings.features.msdp then
    statcount=0
    maxstatcount=1
    gagmode=true
    expandAlias("questeat",false)
  else
    statcount=0
    maxstatcount=5
    gagmode=true
    expandAlias("questeat",false)
    expandAlias("scoreeat",false)
    send("aff",false)
    send("tactics",false)
    send("hero empower",false)
    send("uipulse",false)
  end 
end


</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>xaos-ui-0120</name>
					<packageName>xaos-ui-0120</packageName>
					<script></script>
					<eventHandlerList />
					<ScriptGroup isActive="yes" isFolder="yes">
						<name>xaos-ui-0120</name>
						<packageName>xaos-ui-0120</packageName>
						<script></script>
						<eventHandlerList />
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Class QOL</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>Mage Spell management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

db:create("magelist", {
  spells={
    name="",
    role="",
    permable="",
    notes="",
    _unique = { "name" },
    _violations = "REPLACE"
  }, 
  skills={
    name="",
    role="",
    passive="",
    notes="",
    _unique = { "name" },
     _violations = "REPLACE"
  }
})

magedb = db:get_database("magelist")

db:add(magedb.spells, 
		{name="acid blast", role="combat", permable="false"},
    {name="anchor gate",    role="utility", permable="false"},
    {name="animate golem",  role="utilty", permable="false"},
    {name="bind golem",     role="utilty", permable="false"},
    {name="blink",          role="utilty", permable="false"},
    {name="blindness",      role="debuff", permable="false"},
    {name="cancellation",   role="utility", permable="false"},
    {name="chain lightning", role="combat", permable="false"},
    {name="charm person",   role="utility", permable="false"},
    {name="cloud kill",     role="combat", permable="false"},
    {name="colour spray",   role="combat", permable="false"},
    {name="common cold",    role="debuff", permable="false"},
    {name="cone of cold",   role="combat_AOE", permable="false"},
    {name="confusion",      role="combat", permable="false"},
    {name="continual light", role="utility", permable="false"},
    {name="control weather", role="utility", permable="false"},
    {name="create food",    role="utility", permable="false"},
    {name="create rabbit",  role="utility", permable="false"},
    {name="create rose",    role="utility", permable="false"},
    {name="create spring",  role="utility", permable="false"},
    {name="cryogenesis",    role="utility", permable="false"},
    {name="dark sight",     role="buff_self", permable="true"},
    {name="detect invis",   role="buff_self", permable="true"},
    {name="detect magic",   role="buff_self", permable="true"},
    {name="endurance",      role="buff", permable="true"},
    {name="energy drain",   role="combat", permable="false"},
    {name="faerie fire",    role="debuff", permable="false"},
    {name="faerie fog",     role="utility", permable="false"},
    {name="farsight",       role="buff_self", permable="false"},
    {name="fear",           role="debuff", permable="false"},
    {name="fireball",       role="combat_AOE", permable="false"},
    {name="fireproof",      role="utility", permable="false"},
    {name="fly",            role="buff", permable="true"},
    {name="floating disc",  role="utility", permable="false"},
    {name="gate",           role="utility", permable="false"},
    {name="ghoulish touch", role="combat", permable="false"},
    {name="giant strength", role="buff", permable="true"},
    {name="globe of power", role="buff_self",  permable="false"},
    {name="globe of force",      role="buff_self",  permable="false"},
    {name="guardian",      role="utility",  permable="false"},
    {name="haste",      role="buff",  permable="true"},
    {name="ice sphere",      role="combat",  permable="false"},
    {name="infravision",      role="buff_self",  permable="true"},
    {name="invisibility",      role="utility",  permable="false"},
    {name="levitate",      role="utility",  permable="false"},
    {name="life to mana",      role="buff_self",  permable="true"},
    {name="lightning bolt",      role="combat",  permable="false"},
    {name="locate object",      role="utility",  permable="false"},
    {name="locate person",      role="utility",  permable="false"},
    {name="magic armor",      role="buff",  permable="true"},
    {name="magic shield",      role="buff",  permable="true"},
    {name="magic missile",      role="combat",  permable="false"},
    {name="mass fly",      role="utility",  permable="false"},
    {name="mass haste",      role="utility",  permable="false"},
    {name="mass invis",      role="utility",  permable="false"},
    {name="needle strike",      role="combat",  permable="false"},
    {name="permanency",      role="buff",  permable="true"},
    {name="phase",      role="buff",  permable="true"},
    {name="poison",      role="debuff",  permable="false"},
    {name="prismatic shell",      role="buff",  permable="false"},
    {name="random return",      role="utility",  permable="false"},
    {name="recharge",      role="utility",  permable="false"},
    {name="refresh",      role="utility",  permable="false"},
    {name="replenishment",      role="utility",  permable="false"},
    {name="resist paralysis",      role="buff",  permable="false"},
    {name="lendebuk cantrip",      role="buff",  permable="true"},
    {name="seal gate",      role="utility",  permable="false"},
    {name="searing orb",      role="combat",  permable="false"},
    {name="suppress magic",      role="utility",  permable="false"},
    {name="shocking grasp",      role="combat",  permable="false"},
    {name="sleep",      role="utility",  permable="false"},
    {name="slow",      role="debuff",  permable="false"},
    {name="soften defense",      role="debuff",  permable="false"},
    {name="sonic boom",      role="combat_AOE",  permable="false"},
    {name="starburst",      role="combat_AOE",  permable="false"},
    {name="starve spring",      role="utility",  permable="false"},
    {name="stone skin",      role="buff_self",  permable="true"},
    {name="teleport",      role="utility",  permable="false"},
    {name="thunderbolt",      role="combat",  permable="false"},
    {name="ventriloquate",      role="utility",  permable="false"},
    {name="water breathing",      role="buff",  permable="true"},
    {name="weaken",      role="debuff",  permable="false"},
    {name="web",      role="utility",  permable="false"},
    {name="calm",      role="utility",  permable="false"})
		
	    mage_buff = {
        "haste",
        "giant strength",
        "fly",
        "prismatic shell",
        "dark sight",
        "endurance",
        "farsight",
        "permanency",
        "detect invis",
        "detect magic",
        "globe of power",
        "life to mana",
        "magic armor",
        "phase",
        "resist paralysis",
        "stone skin",
        "water breathing",
        "detect magic",
        "globe of force",
        "infravision",
        "lendebuk cantrip"
    }
		
	    mage_utility = {
				"faerie fire",
        "anchor gate",
        "blink",
        "cancellation",
        "charm person",
        "confusion",
        "continual light",
        "control weather",
        "create food",
        "create rabbit",
        "create spring",
        "cryogenesis",
        "dark sight",
        "faerie fog",
        "fireproof",
        "floating disc",
        "gate",
        "invisibility",
        "levitate",
        "locate object",
        "locate person",
        "mass fly",
        "mass haste",
        "mass invis",
        "permanency",
        "replenishment",
        "seal gate",
        "suppress magic",
        "sleep",
        "starve spring",
        "teleport",
        "ventriloquate",
        "web",
        "calm",
    }
		
    mage_combat = {
        "acid blast",
        "lightning bolt",
        "magic missile",
        "chain lightning",
        "colour spray",
        "cone of cold",
        "fireball",
        "ice sphere",
        "searing orb",
        "shocking grasp",
        "thunderbolt",
        "starburst",
				"dispel magic",
				"sonic boom",
    }
		
		mage_skills = {
			"spellcraft",
			"golem craft",
			"kinetic mastery",
			"link",
			"brew",
		}
		</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Cleric Management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


cleric_skills = {
	"shield block",
	"link",
	"leadership",
	"staff",
	"whip",
	"envenom",
	"crossbow",
	"hand to hand",
	"spellcraft",
	"flail",
	"brew",
	"hunt",
	"scrolls",
	"tracking",
	"mace",
	"dual wield",
	"scribe",
	"unarmed block",
	"shepherd",
}

cleric_utility = {
	"anchor gate",
	"blink",
	"cancellation",
	"continual light",
	"create food",
	"create spring",
	"cure blight",
	"cure blindness",
	"cure cold",
	"cure deafness",
	"cure disease",
	"cure poison",
	"faerie fog",
	"fly",
	"gate",
	"levitate",
	"locate object",
	"locate person",
	"mass fly",
	"permanency",
	"refresh",
	"remove curse",
	"seal gate",
	"suppress magic",
}

cleric_healing = {
	"heal",
	"mass healing",
}

cleric_buffs = {
	"accelerate healing",
	"bless",
	"detect invis",
	"detect magic",
	"endurance",
	"farsight",
	"fly",
	"frenzy",
	"godspeed",
	"magic armor",
	"magic shield",
	"resist paralysis",
	"sanctuary",
	"stone skin",
}

cleric_combat = {
	"blindness",
	"ray of truth",
	"curse",
	"demonfire",
	"faerie fire",
	"flamestrike",
	"heretic",
	"lightning bolt",
	"plague",
	"poison",
	"silence",
	"soften defense",
	"turn undead",
	"weaken",
	"holy word",
}</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Mentalist Management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

mentalist_buffs = {
	"charisma",
	"confidence",
	"detect hidden",
	"halo of eyes",
	"iron will",
	"mindcore",
	"third eye",
	"ultrasight",
	"wizard eye",
	"xray eyes",
	"battle mind",
	"reveal future",
}

mentalist_combat = {
	"mass confusion",
	"divided will",
	"ego whip",
	"feeble mind",
	"misdirection",
	"wrack",
}

mentalist_utility = {
	"dominate",
	"wake",
	"esp",
	"sustained vision",
	"guardian",
	"seeking eye",
	"clairvoyance",
	"eject",
	"know direction",
}
mentalist_skills = {
	"arcane mastery",
}</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Warrior management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
warrior_skills = {
	"axe",
	"master axe",
	"cleaving",
	"blowgun",
	"dagger",
	"master dagger",
	"knife fighting",
	"extention",
	"master extention",
	"flail",
	"mace",
	"master mace",
	"cudgelry",
	"polearm",
	"staff",
	"master staff",
	"quarterstaff",
	"sword",
	"master sword",
	"blademaster",
	"blind fighting",
	"bash",
	"berserk",
	"deadly spin",
	"determination",
	"discipline",
	"dirt kicing",
	"disarm",
	"dual wield",
	"guarding",
	"hand to hand",
	"hunt",
	"lumber work",
	"master polearm",
	"lancing",
	"parry",
	"rescue",
	"shield block",
	"set spear",
	"sneak",
	"scrolls",
	"master flail",
	"thrashing",
	"trip",
	"unarmed block",
	"leadership",
	"quickdraw",
	"tracking",
	"taming",
}</script>
								<eventHandlerList />
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>Thief management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


thief_skills = {
	"axe",
	"blowgun",
	"master axe",
	"dagger",
	"master dagger",
	"sword",
	"master sword",
	"flail",
	"master flail",
	"mace",
	"master mace",
	"acrobatics",
	"backstab",
	"bomb smithing",
	"brew",
	"critical strike",
	"cutpurse",
	"dirt kicking",
	"disarm",
	"dual wield",
	"envenom",
	"finesse",
	"hand to hand",
	"hunt",
	"parry",
	"prowl",
	"palming",
	"perception",
	"pick lock",
	"safe cracking",
	"sap",
	"smooth talk",
	"sneak",
	"steal",
	"scrolls",
	"trance",
	"trap detection",
	"trip",
	"unarmed block",
	"piercing",
	"hearing",
	"hide",
	"juggling",
	"link",
	"leadership",
	"quickdraw",
	"tracking",
	"vault wisdom",
	"taming",
	"lethality"
	
}</script>
								<eventHandlerList />
							</Script>
							<Script isActive="no" isFolder="no">
								<name>Geomancer management</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


geomancer_skills = {
	"spell turning",
	"enigma",
	"shield bash",
	"spellcraft",
	"warcraft"
}

geomancer_combat = {
	"acid blast",
	"chain lightning",
	"cloud kill",
	"colour spray",
	"cone of cold",
	"fireball",
	"magic missile",
	"needle strike",
	"shocking grasp",
	"dispel magic",
	"lightning bolt",
	"soften defense",
	"sonic boom"
}

geomancer_buffs = {
	"perm",
	"barrage",
	"dark sight",
	"detect invis",
	"detect magic",
	"endurance",
	"farsight",
	"globe of force",
	"haste",
	"giant strength",
	"magic shield",
	"resist paralysis",
	"stone skin",
	"talons",
	"water breathing",
	"battle mind",
	"phase"
}

geomancer_utility = {
	"cancellation",
	"feather fall",
	"fireproof",
	"locate object",
	"locate person",
	"refresh",
	"recharge",
	"replenishment",
	"suppress magic",
}</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Functions</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>Script Communication</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
gagging = gagging or true


function xuicom(message)
	uicom(message)

end

function warncom(message)
	cecho("\n[ Alert ] &lt;purple&gt;"..message.."\n")
	send("")
	
end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="no" isFolder="no">
								<name>Class check function</name>
								<packageName></packageName>
								<script>

function classToggle (class, name)

	if class then
		xuicom("The settings for the class "..name.." will no longer apply to you.")
		return false
	else
		xuicom("The UI will now let script features specifically meant for "..name.." to work.")
		return true

	end
end



function variableToggle (var, name, off, on )
if var == nil then
	var = false
end
if var then
	xuicom(off)
	return false
else
	xuicom(on)
	return true

end
end



function variableCheck (variable, name)
	if not variable then
	xuicom("This feature works with ["..name.."] which is not currently activated.")
	end
end

function round(num, numDecimalPlaces)
  local mult = 10^(numDecimalPlaces or 0)
  return math.floor(num * mult + 0.5) / mult
end

</script>
								<eventHandlerList />
							</Script>
							<Script isActive="no" isFolder="no">
								<name>Chat filter function</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


function captureOOC(color1,channel,color2,name, color3, message)

	cecho("data", "["..color1..channel.."&lt;gray&gt; " .. getTime(true,"HH.mm") .. "] "..color2..name..": "..color3..message.."\n")
	if spacing then
		cecho("OOC","\n")
	end

end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="no" isFolder="no">
								<name>Lazy init</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------


function initBool(var) 
return var or false
end

function initInt(var)
return var or 0
end

function initString(var)
return var or "none"
end</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Initialization</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

</script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>initialization</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function initialization()
xuicom("Initializing variables")
  cleric = false
  mentalist = false
  mage = false
  auto_hunt = auto_hunt or false
  gagging = gagging or true
  warcryHack = warcryHack or false
  --Super basic shit
  current_health = current_health or 0
  current_mana = current_mana or 0
  current_mvm = current_mvm or 0
  current_exp = current_exp or 0
  --QOL Automation
  auto_skin = auto_skin or false
  auto_butcher = auto_butcher or false
  wielded = wielded or "Please change me"
  if damageReport == nil then
    damageReport = 0
  end
  killCount = killCount or 0
  killBucket1 = killBucket1 or 0
  killBucket2 = killBucket2 or 0
  killBucket3 = killBucket3 or 0
  killBucket4 = killBucket4 or 0
  killBucket5 = killBucket5 or 0
  killTarget = killTarget or "helpful bob"
  determThresh = 0
  if inputAttack == nil then
    inputAttack = "bash"
  end
  -- Theoretical future silver toggle
  autodropSilver = true
  -- Enchanting
  enchantIteration = enchantIteration or 0
  -- Combat pledges
  renoviAvailable = renoviAvailable or true
  statusDisarm = statusDisarm or false
  -- Following variables
  if statusFollow == nil then
    statusFollow = false
  end
  following = following or "no one"
  topXPCollection = topXPCollection or 0
  xpCollection12 = xpCollection12 or 0
  xpCollection11 = xpCollection11 or 0
  xpCollection10 = xpCollection10 or 0
  xpCollection9 = xpCollection9 or 0
  xpCollection8 = xpCollection8 or 0
  xpCollection7 = xpCollection7 or 0
  xpCollection6 = xpCollection6 or 0
  xpCollection5 = xpCollection5 or 0
  xpCollection4 = xpCollection4 or 0
  xpCollection3 = xpCollection3 or 0
  xpCollection2 = xpCollection2 or 0
  xpCollection1 = xpCollection1 or 0
  -- Gold buckets
  recentGold = 0
  totalGold = 0
  goldBucket1 = 0
  goldBucket2 = 0
  -- Base scripting
  killTarget = killTarget or "Helpful Bob"
  autoMode = autoMode or "normal"
  autoRest = autoRest or false
  location = initString(location)
  hunting = initBool(hunting)
  -- Specialized scripting
  mentalistAutoDebuff = mentalistAutoDebuff or false
  thiefAutoTrance = thiefAutoTrance or false
  autoSpellSlip = autoSpellSlip or false
  centerHack = initBool(centerHack)
  resolveHack = initBool(resolveHack)
  autoRenovi = initBool(autoRenovi)
  renoviThreshold = initInt(renoviThreshold)
  determMgmt = initBool(deterMgmt)
  -- Comms
  if tellCoolDown == nil then
    tellCoolDown = false
  end
  chatWidth = chatWidth or 650
  -- Auto Healing
  autoHeal = initBool(autoHeal)
  autoHealThreshold = 0
  autoHealCommand = "cast heal"
  --Auto Drinking
  drinkMode = drinkMode or "none"
  determThresh = determThresh or 0
  determThresh2 = determThresh2 or 1
end</script>
								<eventHandlerList>
									<string>sysLoadEvent</string>
									<string>sysConnectionEvent</string>
									<string>sysInstall</string>
								</eventHandlerList>
							</Script>
							<Script isActive="no" isFolder="no">
								<name>Inits for hpDelta and hp Flow</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
if lastHP == nil then
  lastHP = 0
end
if hpDeltaMax == nil then
  hpDeltaMax = 0
end
if current_health == nil then
	current_health = 0
end
--Initialize and store past values
if hpDelta2 == nil then
  hpDelta2 = 0
end
if hpDelta3 == nil then
  hpDelta3 = 0
end
if hpDelta4 == nil then
  hpDelta4 = 0
end

if hpDeltaMax == nil then
	hpDeltaMax = 0
end
if hpFlow == nil then hpFlow = 0 end</script>
								<eventHandlerList />
							</Script>
							<Script isActive="no" isFolder="no">
								<name>NewScript</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

--For your drinking stuff
autoDrink = autoDrink or false
drinkMode = drinkMode or "none"
customDrink = customDrink or "skin"</script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Event handlers</name>
							<packageName></packageName>
							<script></script>
							<eventHandlerList />
							<Script isActive="yes" isFolder="no">
								<name>reloadUI</name>
								<packageName></packageName>
								<script>
function reloadUI()
  --createChatConsole()
  --OOCCon:resetAutoWrap()
  questStatusCon:resetAutoWrap()
  --dataCon:resetAutoWrap()
  --OOCCon:resetAutoWrap()
  
  local width,height = calcFontSize(getFontSize("main"))
  local windowWidth, windowHeight = getMainWindowSize()
  windowWidth = windowWidth - getBorderLeft() - getBorderRight()
  local wrap = math.floor(windowWidth/width)
  setWindowWrap("main", wrap)
  
  mainWindowWrap = wrap

  menu.window:resize(menu.window.width,getDimensions("main").height-130 .. "px")
  
  menu.debuffbar:resize(menu.scriptbutton.get_x() .. "px","30px")
end

</script>
								<eventHandlerList>
									<string>sysWindowResizeEvent</string>
								</eventHandlerList>
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>welcome</name>
								<packageName></packageName>
								<script>if mysettings.UIType ~= "XUI" then return end

function welcome()
	xuicom("XUI successfully loaded. If you're new, please start with the &lt;white&gt;Getting Started&lt;light_blue&gt; button, if you're a returning user of XUI, please see the changelog under XUI Help, or the documentation in the drive.")
end</script>
								<eventHandlerList>
									<string>sysInstall</string>
									<string>sysConnectionEvent</string>
								</eventHandlerList>
							</Script>
							<Script isActive="yes" isFolder="no">
								<name>onConnect</name>
								<packageName></packageName>
								<script>if mysettings.UIType ~= "XUI" then return end


</script>
								<eventHandlerList>
									<string>sysConnectionEvent</string>
								</eventHandlerList>
							</Script>
						</ScriptGroup>
						<ScriptGroup isActive="yes" isFolder="yes">
							<name>Testing</name>
							<packageName></packageName>
							<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
							<eventHandlerList />
							<Script isActive="no" isFolder="no">
								<name>testing</name>
								<packageName></packageName>
								<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function testing(expected, actual, message)
	if (expected == actual) then
		xuicom("Everything tested fine.")
	else 
		xuicom(message)
		end

end
 </script>
								<eventHandlerList />
							</Script>
						</ScriptGroup>
					</ScriptGroup>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>xPrompt</name>
				<packageName></packageName>
				<script>xPrompt = xPrompt or {}</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>xPrompt</name>
					<packageName></packageName>
					<script>function xPrompt.Initialize()
  xPrompt.ConfigLoad()
end

function xPrompt.ConfigLoad()
  local path = profilePath .. "/ui/xPrompt.lua"
  if io.exists(path) then
    table.load(path, xPrompt)
  else
    ncom("Missing Component: /xPrompt.lua")
    loadError = true
    return
  end
end

--Xaos compatible replacement for the isPorompt function of mudlet.
--Function uses lrexlib to match lines from the mud with known Xoas prompts.
--If you would like a prompt to be added to this function just tell Noax.
--To use it set a trigger pattern type to Lua function with a pattern of 'return isXaosPrompt()'

function isXaosPrompt()
  --Noax Prompt Syntax 'prompt %cHP %h Mana %m Move %v Exp %X, Style: %C Room: %r Exits: %e%c'
  if
    rex.match(
      tostring(line),
      [[^HP (\d+)\% Mana (\d+)\% Move (\d+)\% Exp (\d+)\%\, Style\: (.*?) Room\: (.*?) Exits\: (.*?)$]]
    ) ~= nil
  then
    if not mysettings.features.msdp then
      xPrompt.hp,
      xPrompt.mana,
      xPrompt.move,
      xPrompt.exp,
      xPrompt.style,
      xPrompt.room,
      xPrompt.room,
      xPrompt.exits =
        rex.match(
          tostring(line),
          [[^HP (\d+)\% Mana (\d+)\% Move (\d+)\% Exp (\d+)\%\, Style\: (.*?) Room\: (.*?) Exits\: (.*?)$]]
        )
    end
    return true
    --Xaos builtin Syntax 'prompt newbie'
  elseif
    rex.match(tostring(line), [[^\&lt;(\d+)\%\/ hp (\d+)\%\/ m (\d+)\%\/ mv\&gt; \[(\d+)\%\]$]]) ~= nil
  then
    if not mysettings.features.msdp then
      xPrompt.hp, xPrompt.mana, xPrompt.move, xPrompt.exp =
        rex.match(tostring(line), [[^\&lt;(\d+)\%\/ hp (\d+)\%\/ m (\d+)\%\/ mv\&gt; \[(\d+)\%\]$]])
    end
    return true
    --Xaos builtin Syntax 'prompt all'
  elseif rex.match(tostring(line), [[^\&lt;(\d+)\%hp (\d+)\%m (\d+)\%mv\&gt;$]]) ~= nil then
    if not mysettings.features.msdp then
      xPrompt.hp, xPrompt.mana, xPrompt.move =
        rex.match(tostring(line), [[^\&lt;(\d+)\%hp (\d+)\%m (\d+)\%mv\&gt; $]])
      xPrompt.exp = 0
    end
    return true
    --Xaos builtin at craracter creation
  elseif
    rex.match(tostring(line), [[^(\d+)\% Life (\d+)\% Mana (\d+)\% Moves,(\d+)\% XP\/lvl\&gt;$]]) ~= nil
  then
    if not mysettings.features.msdp then
      xPrompt.hp, xPrompt.mana, xPrompt.move, xPrompt.exp =
        rex.match(tostring(line), [[^(\d+)\% Life (\d+)\% Mana (\d+)\% Moves,(\d+)\% XP\/lvl\&gt;$]])
    end
    return true
    --Marcho's XUI Prompt Syntax 'prompt HEALTH %h MANA %m MVM %v STIL %C XP %X Directions  %e  Hungry  %B %c'
  elseif
    rex.match(
      tostring(line),
      [[^HEALTH (\d+)\% MANA (\d+)\% MVM (\d+)\% STIL (.*) XP (\d+)\% Directions  (.*) Hungry  (.*) $]]
    ) ~= nil
  then
    if not mysettings.features.msdp then
      xPrompt.hp,
      xPrompt.mana,
      xPrompt.move,
      xPrompt.style,
      xPrompt.exp,
      xPrompt.exits,
      xPrompt.hunger =
        rex.match(
          tostring(line),
          [[^HEALTH (\d+)\% MANA (\d+)\% MVM (\d+)\% STIL (.*) XP (\d+)\% Directions  (.*) Hungry  (.*) $]]
        )
    end
    return true
    --Obscillesk Prompt Syntax 'prompt &lt;%hhp %mmn %vmv&gt; &lt;%t&gt; &lt;%C&gt; &lt;%X&gt;'
  elseif
    rex.match(
      tostring(line), [[^\&lt;(\d+)\%hp (\d+)\%mn (\d+)\%mv\&gt; \&lt;(.*)\&gt; \&lt;(.*)\&gt; \&lt;(\d+)\%\&gt; $]]
    ) ~= nil
  then
    if not mysettings.features.msdp then
      xPrompt.hp, xPrompt.mana, xPrompt.move, xPrompt.time, xPrompt.style, xPrompt.exp =
        rex.match(
          tostring(line), [[^\&lt;(\d+)\%hp (\d+)\%mn (\d+)\%mv\&gt; \&lt;(.*)\&gt; \&lt;(.*)\&gt; \&lt;(\d+)\%\&gt; $]]
        )
    end
    return true
    --Solious Prompt (%r)(%e)%c(%Xxp)(%t)%c(%hhp %mm %vmv)
  elseif rex.match(tostring(line), [[^\((\d+)\%hp (\d+)\%m (\d+)\%mv\) $]]) ~= nil then
    if not mysettings.features.msdp then
      xPrompt.hp, xPrompt.mana, xPrompt.move =
        rex.match(tostring(line), [[^\((\d+)\%hp (\d+)\%m (\d+)\%mv\) $]])
      xPrompt.exp = 0
      acom("Your Prompt sucks")
    end
    return true
  else
    return false
  end
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="no" isFolder="yes">
				<name>qolWithReldi</name>
				<packageName></packageName>
				<script>qolWithReldi = qolWithReldi or {}</script>
				<eventHandlerList />
				<Script isActive="no" isFolder="no">
					<name>qolWithReldi</name>
					<packageName></packageName>
					<script>function qolWithReldi.Initialize()
  qolWithReldi.ConfigLoad()
	expandAlias("showall off", false)
	expandAlias("scripterKill off", false)
end


function qolWithReldi.ConfigLoad()
  local path = profilePath .. "/ui/qolWithReldi.lua"
  if io.exists(path) then
    table.load(path, qolWithReldi)
  else
    ncom("Missing Component: /qolWithReldi.lua")
    loadError = true
    return
  end
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<Script isActive="yes" isFolder="no">
				<name>UIPulse</name>
				<packageName></packageName>
				<script>--UI_Pulse_Start[chName-Ezin,chRace-Bogmin,chSex-male,chLevel-100,chHeroLevel-588(100%),chRealLevel688%,chHeroPoints-2190%,chClass-disciple,chSecondClass-cleric,chPatron-order,chCaste-order master,chFavour-1500,chAge-26,chWeight-598,chAfflict-Order,chAfflictStage-master,chAfflictAge-67Y,chTrains-325,chSaves--257,chStr-80/95,chInt-86/95,chWis-89/104,chDex-81/91,chCon-85/95,chRegenHp-308,chRegenMana-76,chHunger-200/200,chThirst-200/200,chCarrying-287/319,chEqWeight-1304/1525,chGold-3114951,chSilver-1151187,chFrags-543,chSouls-12,chDodgeMod-94,chSpellMod-94,chTraits-Bruiser genesis chosen reborn overpowered mastermind,chSlash-15/56/-3631,chBash-15/56/-3631,chPierce-30/56/-3631,chFire-0/23/-1225,chCold-0/23/-1225,chMental-10/23/-1225,chMagic-0/23/-1225,chLight-0/23/-1225,chNegative-0/23/-1225,chHoly-0/23/-1225,chUnholy-0/23/-1225,chLightning-5/23/-1225,chSound-20/23/-1225,chAcid-0/23/-1225,chPoison-0/23/-1225,chDisease-0/23/-1225,chBase-133,chNecromantic-133,chAbjurational-133,chAlternation-133,chConjuration-226,chEnchantment-176,chDivination-133,chIllusion-133,chInvocation-133,chBeguilery-133,chReligion-133,chMaladictive-133,chHitroll-237:27,chDamroll-299:312:17,chCritital-25:187,chSpeed-342:396,chDamage-100:575,chHeal-100,RHD-59/41/86,RHS-547,LHD-58/41/78,LHS-547,CDO-81,CPP-80,CSP-45,chXpMod-3,chBulk-120,chMaxQual-artifact,chTraitSlots-6/6,chArtiSlots-6/6,chTactics-default,chStyle-culling,chBoons-cruelty:artificer:shock and awe:enhanced speed:,chAffects-Spell soften defense affecting warding by 105 for 1 minute 9 seconds:Spell soften defense affecting armor class by 105 for 1 minute 9 seconds:Misc hero empower affecting damage roll by 81 permanently:Misc hero empower affecting hitpoints by 1350 permanently:Misc hero empower affecting speed by 81 permanently:Misc hero empower affecting warding by -675 permanently:Spell sanctuary affecting damage reduction by 20 and sanctuary flag permanently:Spell consecrated aura affecting damage reduction by 10 permanently:Misc hero empower affecting resist slash by 10 permanently:Misc hero empower affecting resist pierce by 10 permanently:Misc hero empower affecting resist blunt by 10 permanently:Spell inner faith adding unknown effects permanently:Spell blind faith affecting mana by 788 and blind_faith flag permanently:Spell godspeed affecting speed by 15 permanently:Spell godspeed affecting dexterity by 3 permanently:Misc favour bonus affecting warding by -50 permanently:Misc favour bonus affecting armor class by -50 permanently:Skill trance affecting damage roll by 37 permanently:Skill trance affecting dodge boost by 10 permanently:Skill trance affecting regen hp by 134 permanently:Skill trance affecting armor class by -134 permanently:Spell permanency adding unknown effects permanently:Spell purging blades adding purging blades flag permanently:Spell order shield affecting resist pierce by 15 permanently:Misc hero empower affecting saves by -26 permanently:Misc hero empower affecting conjurational casting by 26 permanently:Misc hero empower affecting enchantment casting by 26 permanently:Misc hero empower affecting regen mana by 130 permanently:Spell accelerate healing affecting regen hp by 176 permanently:Spell magic shield affecting warding by -75 permanently:Spell magic shield affecting save vs spell by -10 permanently:Spell imbue wisdom affecting wisdom by 3 permanently:Spell frenzy adding unknown effects permanently:Misc hero empower affecting regen hp by 270 permanently:Misc hero empower affecting hit roll by 54 permanently:Misc hero empower affecting armor class by -675 permanently:Spell bless affecting hit roll by 13 for 49 minutes 38 seconds:Spell bless affecting save vs spell by -13 for 49 minutes 38 seconds:Spell bless affecting enchantment casting by 9 for 49 minutes 38 seconds:,chEquipment-&lt;2&gt;[large   ] a Hero's maple ring,&lt;3&gt;[large   ] a Hero's maple ring,&lt;4&gt;[large   ] (Glowing) (Humming) a masterwork dearthril neckguard,&lt;5&gt;[large   ] (Glowing) (Humming) a masterwork dearthril neckguard,&lt;6&gt;[large   ] (Artifact) (Glowing) the Chest Plate of the Artificer,&lt;7&gt;[large   ] (Bound) (Artifact) (Visored) the Helm of Cruelty,&lt;8&gt;[large   ] a Zelator's legplates,&lt;9&gt;[large   ] a Zelator's boots,&lt;10&gt;[large   ] (Artifact) the Gauntlets of Static's Champion,&lt;13&gt;[large   ] a Zelator's robes,&lt;14&gt;[large   ] a Zelator's belt,&lt;15&gt;[large   ] a Hero's bracelet,&lt;16&gt;[large   ] a Hero's bracelet,&lt;17&gt;[large   ] (Bound) (Artifact) (Humming) the Battle Hammer 'Jotunnstrike',&lt;18&gt;[large   ] (Bound) (Artifact) (Humming) the Battle Hammer 'Jotunnstrike',&lt;20&gt;[tiny    ] (Glowing) (Humming) a maple carving of a dragon,&lt;30&gt;[large   ] (Artifact) (Humming) the Bloody Black Cloak of the Claw,,chInventory-(27) [medium  ] (Glowing) (Humming) a coin of the defiler:[tiny    ] a surplus backpack:[tiny    ] (Artifact) the Mantle of the Dusk Seeker:[small   ] a piece of the Goddess:( 2) [large   ] (Bound) (Artifact) (Glowing) the Shining Fist of Askalam:[tiny    ] a ball of fire:[huge    ] (Bound) (Artifact) (Glowing) the Staff of the Dawn Wizard:[tiny    ] (Glowing) a cloudy crystal shard:( 6) [large   ] a surplus backpack:(185) [tiny    ] a tiny spark of magic:[large   ] (Glowing) a heavy steel shield:[small   ] a bowl of noodle soup:]UI_Pulse_Stop


--TODO: Fix Items/Equip


function parsePulse(pulsetext)
  pulsetext = pulsetext
  
  local pulses = string.split(pulsetext,",")
  
  for k,v in pairs(pulses) do
    
    local start, stop = string.find(v, "-")
    local attrname = ""
    local attrvalue = ""
    
    if start ~= nil and stop ~= nil then
      attrname = string.sub(v,1,start-1)
      attrvalue = string.sub(v,stop+1)
    end

    debugecho(attrname .. ": " .. attrvalue)
    
    --echo(attrname)
    --echo(attrvalue)
    
    if (attrname=="chName") then
    
      --Name
      xaos.charactername = string.trim(attrvalue)
      
      --On Login
      if initialload then
        loadprofile(true)
        initialload=false
        enableTimer("User Timer")
        expandAlias(xaos.config.reconnectaction)
      end
    elseif (attrname=="chRace") then
      xaos.characterrace = string.trim(attrvalue)
      
    elseif (attrname=="chHeroLevel") then
      --Level
      local lvl,lvlpercent = rex.match(attrvalue,[[([0-9]+)\(([0-9]+)%\)]])
      
      currentLevelPercent = lvlpercent
      currentLevel=lvl
      
      xaos.LevelPercent = tonumber(lvlpercent)
      xaos.Level=tonumber(lvl)
      
    elseif (attrname=="chClass") then
      xaos.class.primary = string.trim(attrvalue)

    elseif (attrname=="chSecondClass") then
      xaos.class.reborn = string.trim(attrvalue)

    elseif (attrname=="chTraits") then
      xaos.traits = string.trim(attrvalue)
      
    elseif (attrname=="chHeroPoints") then
      local x=string.gsub(attrvalue,"%%","")    
      xaos.heropoints=tonumber(x)    
    elseif (attrname=="chFrags") then
      xaos.currency.frags=tonumber(attrvalue)
    elseif (attrname=="chSouls") then
      xaos.currency.souls=tonumber(attrvalue)
    elseif (attrname=="chTactics") then
      xaos.tactics = string.trim(attrvalue)
    elseif (attrname=="chStyle") then
      xaos.fightingstyle = string.trim(attrvalue)
    elseif (attrname=="chAffects") then
      
      for key,value in pairs(xaos.buffs) do
        xaos.buffs[key] = false
      end
      
      xaos.bufflist = {}
      
      local affectlist = string.split(attrvalue,":")

      for ak,av in pairs(affectlist) do
        --^(?:\s*)(?:Skill:|Spell:| misc:|Effect:) (.*) (modifies|grants|makes|adds|gives|will)
        --table.insert(xaos.bufflist,string.trim(matches[2]))
        local affectname = rex.match(av,[[(?:Skill|Spell|misc|Effect) (.*) affecting]])
        if affectname ~= nil then affectname = string.trim(string.lower(affectname)) end
        if not table.contains(xaos.bufflist,affectname) then
          table.insert(xaos.bufflist,affectname)
        end
      end

      xaos.buffs.statusCenter=table.contains(xaos.bufflist,"discipline")
      xaos.buffs.statusBerserk=table.contains(xaos.bufflist,"berserk")
      xaos.buffs.statusResolve=table.contains(xaos.bufflist,"resolve")
      xaos.buffs.statusWarcry=table.contains(xaos.bufflist,"warcry")
      xaos.buffs.statusBless=table.contains(xaos.bufflist,"bless")
      xaos.buffs.statusTrance=table.contains(xaos.bufflist,"trance")
      
    elseif (attrname=="") then
    elseif (attrname=="") then
    elseif (attrname=="") then
    elseif (attrname=="") then
    elseif (attrname=="") then
    elseif (attrname=="") then
    
    end
    
    
    
    
  end
  --Update Class Details
    
  xaos.class.cleric = false
  xaos.class.mage = false
  xaos.class.warrior = false
  xaos.class.thief = false
  xaos.class.barbarian=false
  
  local classtable = {}
  classtable = {"warrior","gladiator","knight","berserker","paladin","geomancer"}
  if table.contains(classtable,xaos.class.primary) or table.contains(classtable,xaos.class.reborn) then
    xaos.class.warrior = true
  end
  
  
  classtable = {"cleric","bishop","monk","druid"}
  if table.contains(classtable,xaos.class.primary) or table.contains(classtable,xaos.class.reborn) then
    xaos.class.cleric = true
  end
  
  classtable = {"barbarian","spirit champion","witch doctor","rift binder","journeyman"}
  if table.contains(classtable,xaos.class.primary) or table.contains(classtable,xaos.class.reborn) then
    xaos.class.barbarian = true
  end
  
  classtable = {"thief","rake","assassin","disciple"}
  if table.contains(classtable,xaos.class.primary) or table.contains(classtable,xaos.class.reborn) then
    xaos.class.thief = true
  end
  
  classtable = {"mage","invoker","illusionist","elementalist","mentalist","necromancer"}
  if table.contains(classtable,xaos.class.primary) or table.contains(classtable,xaos.class.reborn) then
    xaos.class.mage = true
  end
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>GearSet</name>
				<packageName></packageName>
				<script>function savegearset(name)
  local gear = table.deepcopy(xaos.currentequip)
  local filtered = table.n_filter(xaos.config.equipmentsets, function(elem) return elem.name == string.trim(matches[2]) end)
  
  if table.size(filtered) == 0 then 
    table.insert(xaos.config.equipmentsets,
      {name=string.trim(matches[2]),
      gear = gear}
     )
  else
    filtered[1].gear = gear
  end
end
function weargearset(name)

  local filtered = table.n_filter(xaos.config.equipmentsets, function(elem) return elem.name == string.trim(matches[2]) end)

  if table.size(filtered) == 0 then
    echo("No set found with that name")
  elseif table.size(filtered) &gt; 1 then
    echo("Too many sets found with that name")
  else
    
    for k,v in pairs(currentequipment) do
      if v.location == "worn on finger" or v.location=="worn on wrist" or v.location=="worn on neck" or "held in left hand" then
        send("remove '" .. v.item .."")
      end
    end
    local gearset = filtered[1].gear
    local floatcount = 0 
    for k,v in pairs(gearset) do
      --held in right hand
      --held in left hand
      --held in both hands
      echo (v.location)
      if v.location == "held in right hand" or v.location=="held with both hands" then
        send("wield " .. v.item .."")
      elseif v.location == "held in left hand" then
        send("hold " .. v.item .."")
      elseif v.location == "floating nearby" then
        if floatcount == 0 then
        send("wear '" .. v.item .."' float")
        else
          send("kinetic '" .. v.item)
        end
        floatcount=floatcount+1
      else
        local temploc = string.gsub(v.location,"worn on ","")
        temploc = string.gsub(temploc,"worn about ","")
        temploc = string.gsub(temploc,"worn around ","")
        send("wear '" .. v.item .."' " .. temploc)
      end
    end
    --echo("Dont forget your kinetics!")
  end
end</script>
				<eventHandlerList />
			</Script>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>MSDP</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>MSDP Register Functions</name>
					<packageName></packageName>
					<script>

function disableMSDP()
  local timer = 0
  for k,v in pairs(msdp.REPORTABLE_VARIABLES) do
    tempTimer(timer,function() sendMSDP("UNREPORT",v) end)
    timer = timer + 0.01
  end
  tempTimer(timer, function () 
    sendMSDP("LIST","REPORTED_VARIABLES")
    echo("MSDP Unreporting Complete: " .. timer)
  end)
end
function enableMSDP()
  local timer = 0
  for k,v in pairs(msdp.REPORTABLE_VARIABLES) do
    tempTimer(timer,function() sendMSDP("REPORT",v) end)
    timer = timer + 0.01
  end
  tempTimer(timer, function () 
    sendMSDP("LIST","REPORTED_VARIABLES")
    echo("MSDP Reporting Complete: " .. timer)
  end)
end
function reportMSDP()
-- ask for a list of commands, lists, and reportable variables that the server supports
sendMSDP("LIST", "COMMANDS", "LISTS", "REPORTABLE_VARIABLES")
sendMSDP("LIST", "COMMANDS", "LISTS", "REPORTED_VARIABLES")
end

function msdpConnect(event, arg, profile)
  reportMSDP()
  tempTimer(1,function() enableMSDP() end)
end

msdpevents = {}

function registerMSDPEvents()

  echo("Registering Event Handler")
  -- Register the event handler.
  msdpevents.xaos_connect = registerAnonymousEventHandler("xaos_connect", "msdpConnect")
  
end

function unregisterMSDPEvents()

  if msdpevents.xaos_connect ~= nil then
    killAnonymousEventHandler(msdpevents.xaos_connect)
  end
  
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>MSDP Update Functions</name>
					<packageName></packageName>
					<script>

function msdpUpdateEQ()
  
  if msdp.ITEMS == nil or msdp.ITEMS_MAX == nil or msdp.EQ_WEIGHT == nil or msdp.EQ_WEIGHT_MAX then
    return
  end

  local itemcur = tonumber(msdp.ITEMS)
  local itemmax = tonumber(msdp.ITEMS_MAX)
  local eqcur = tonumber(msdp.EQ_WEIGHT)
  local eqmax = tonumber(msdp.EQ_WEIGHT_MAX)

  local ratio = .95
  
  if (itemcur/itemmax) &gt; ratio then
    feedManager("Items dangerously full, could miss an artifact: " .. math.floor(itemmax*ratio),true)
    statusOverloaded=true
  elseif (eqcur/eqmax) &gt; ratio then
    feedManager("Weight dangerously full, could miss an artifact: ".. math.floor(eqmax*ratio),true)
    statusOverloaded=true
  else
    statusOverloaded=false
  end

end

function msdpUpdateClass()

  if msdp.CLASS == nil or msdp.SECOND_CLASS == nil then
    return
  end

--Update Class Details
      
    xaos.class.cleric = false
    xaos.class.mage = false
    xaos.class.warrior = false
    xaos.class.thief = false
    xaos.class.barbarian=false
    
    local classtable = {}
    classtable = {"warrior","gladiator","knight","berserker","paladin","geomancer"}
    if table.contains(classtable,xaos.class.primary) or table.contains(classtable,xaos.class.reborn) then
      xaos.class.warrior = true
    end
    
    
    classtable = {"cleric","bishop","monk","druid"}
    if table.contains(classtable,xaos.class.primary) or table.contains(classtable,xaos.class.reborn) then
      xaos.class.cleric = true
    end
    
    classtable = {"barbarian","spirit champion","witch doctor","rift binder","journeyman"}
    if table.contains(classtable,xaos.class.primary) or table.contains(classtable,xaos.class.reborn) then
      xaos.class.barbarian = true
    end
    
    classtable = {"thief","rake","assassin","disciple"}
    if table.contains(classtable,xaos.class.primary) or table.contains(classtable,xaos.class.reborn) then
      xaos.class.thief = true
    end
    
    classtable = {"mage","invoker","illusionist","elementalist","mentalist","necromancer"}
    if table.contains(classtable,xaos.class.primary) or table.contains(classtable,xaos.class.reborn) then
      xaos.class.mage = true
    end
    
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>MSDP UI Items</name>
					<packageName></packageName>
					<script>
function switchMSDPsidepanel()

    if mysettings.uicomponents.partybar == "left" then
      msdpPartyDisplay:changeContainer(left_container)
      msdpOppDisplay:changeContainer(left_container)
      msdpOppExtras:changeContainer(left_container)
      msdpPartyExtras:changeContainer(left_container)
      
      msdpPartyDisplay:show()
      msdpOppDisplay:show()
      
      left_container:resize("150px",getDimensions("main").height-130 .. "px")
      left_container:show()
      
    elseif mysettings.uicomponents.partybar == "right" then
      msdpPartyDisplay:changeContainer(right_container)
      msdpOppDisplay:changeContainer(right_container)
      msdpOppExtras:changeContainer(right_container)
      msdpPartyExtras:changeContainer(right_container)

      msdpPartyDisplay:show()
      msdpOppDisplay:show()

      right_container:resize("150px",getDimensions("main").height-130 .. "px")
      right_container:show()
    else
      msdpPartyDisplay:hide()
      msdpOppDisplay:hide()
      
      msdpPartyDisplay:changeContainer("main")
      msdpOppDisplay:changeContainer("main")
      msdpOppExtras:changeContainer("main")
      msdpPartyExtras:changeContainer("main")


    end
    if table.size(right_container.windows) == 1 then
      right_container:hide()
    end
    if table.size(left_container.windows) == 1 then
      left_container:hide()
    end
    resizeParent()
end

function loadMSDPUI()
  if msdpUIloaded == nil or not msdpUIloaded then
    msdpUIloaded = true
    partyDisplay:hide()
    partyDisplay2:hide()
    
    hpbar:move("0%","45%")
    manabar:move("30%","45%")
    mvmbar:move("60%","45%")
    ascbar:move("0%","87.5%")

    hpbar:resize("29.5%","40%")
    manabar:resize("29.5%","40%")
    mvmbar:resize("29.5%","40%")
    ascbar:resize("89.5%","10%")
    
    local sidecont
    if mysettings.uicomponents.partybar == "left" then
      sidecont = left_container
    else
      sidecont = right_container
    end

    
    msdpPartyDisplay = msdpPartyDisplay or Geyser.VBox:new({
      name = "msdpPartyDisplay",
      x = "5%", y = "5%",
      width = "90%", height = "40%",
    }, sidecont)
    
    msdpOppDisplay = msdpOppDisplay or Geyser.VBox:new({
      name = "msdpOppDisplay",
      x = "5%", y = "50%",
      width = "90%", height = "45%",
    }, sidecont)
    
    msdpTargetDisplay = msdpTargetDisplay or Geyser.VBox:new({
      name = "msdpTargetDisplay",
      x = "68%", y = "0%",
      width = "30%", height = "90%",
    }, bottom_container)
    
    
    msdpOppExtras = msdpOppExtras or Geyser.VBox:new({
      name = "msdpOppExtras",
      x = "2%", y = "45%",
      width = "95%", height = "40%",
    }, sidecont)
    msdpOppExtras:hide()
    
    msdpPartyExtras = msdpPartyExtras or Geyser.VBox:new({
      name = "msdpPartyExtras",
      x = "2%", y = "0",
      width = "96%", height = "40%",
    }, sidecont)
    msdpPartyExtras:hide()
    
    OPPGauges = OPPGauges or {} 
    --OPPLabels = OPPLabels or {}
    
    OPPGauges[1] = OPPGauges[1] or
          Geyser.Gauge:new({name = "OPPGauges_"..index,  x = "10%", y = "1%", width = "69.5%", height ="40%"}, gauge_container)
    
    
    PartyGauges = PartyGauges or {}
    PartyManaGauges = PartyManaGauges or {} 
    --PartyLabels = PartyLabels or {}
    

  end
end

function grabOppGauge(index,targetme)
      local cont,contheight
      if index== 1 then 
        cont = bottom_container
        contheight = 25
      else
        cont = msdpOppDisplay
        contheight = 10
      end
      
      OPPGauges[index] = OPPGauges[index] or
          Geyser.Gauge:new({name = "OPPGauges_"..index,  x = "0%", y = "0%", width = "100%", height ="100%"}, cont)
      
      if not targetme then
        OPPGauges[index].front:setStyleSheet(
          [[background-color: rgba(0,159,255,100%);
            border-width: 1px;
            border-color: black;
            border-style: solid;
            border-radius: 7;
            padding: 3px;
        ]]
        )
        OPPGauges[index].back:setStyleSheet(
          [[background-color: rgba(0,159,255,50%);
            border-width: 1px;
            border-color: black;
            border-style: solid;
            border-radius: 7;
            padding: 3px;
        ]]
        )
      else
        OPPGauges[index].front:setStyleSheet(
          [[background-color: rgba(255, 0, 0,100%);
            border-width: 1px;
            border-color: black;
            border-style: solid;
            border-radius: 7;
            padding: 3px;
        ]]
        )
        OPPGauges[index].back:setStyleSheet(
          [[background-color: rgba(255, 0, 0,50%);
            border-width: 1px;
            border-color: black;
            border-style: solid;
            border-radius: 7;
            padding: 3px;
        ]]
        )
      end
      
      if index &gt; 1 then 
        OPPGauges[index]:changeContainer(cont)
        msdpOppDisplay:show()
      end
      
      --math.min(table.size(msdpOppDisplay.windows),5)*40 .. "px"
      msdpOppDisplay:resize("90%",math.min(table.size(msdpOppDisplay.windows),9)*5 .. "%")
      msdpOppDisplay:organize()
      OPPGauges[index]:reposition()
      
      return {gauge=OPPGauges[index]}
    end
  function hideOppGauges(index)
    local i
    if index==1 then 
      OPPGauges[index]:hide()
      index = 2 
    end
    
    for i=index,table.size(OPPGauges) do
      OPPGauges[i]:changeContainer(msdpOppExtras)
    end
  end
  function grabPartyGauge(index)
      local cont,contheight

      cont = msdpPartyDisplay
      contheight = 10
    
      
      PartyGauges[index] = PartyGauges[index] or
          Geyser.Gauge:new({name = "PartyGauges_"..index,  x = "1%", y = 0, width = "98%", height =contheight,v_stretch_factor=2.0,h_stretch_factor=2.0}, cont)
      PartyGauges[index].front:setStyleSheet(
        [[background-color: rgba(0, 255, 0,10%);
          border-width: 1px;
          border-color: black;
          border-style: solid;
          border-radius: 7;
          padding: 3px;
      ]]
      )
      PartyGauges[index].back:setStyleSheet(
        [[background-color: rgba(0, 255, 0,30%);
          border-width: 1px;
          border-color: black;
          border-style: solid;
          border-radius: 7;
          padding: 3px;
      ]]
      )
      PartyManaGauges[index] = PartyManaGauges[index] or
          Geyser.Gauge:new({name = "PartyManaGauges_"..index,  x = "1%", y = 0, width = "98%", height =contheight}, cont)
      PartyManaGauges[index].front:setStyleSheet(
        [[background-color: rgba(0, 0, 255,100%);
          border-width: 1px;
          border-color: black;
          border-style: solid;
          border-radius: 7;
          padding: 3px;
      ]]
      )
      PartyManaGauges[index].back:setStyleSheet(
        [[background-color: rgba(0, 0, 255,50%);
          border-width: 1px;
          border-color: black;
          border-style: solid;
          border-radius: 7;
          padding: 3px;
      ]]
      )
     msdpPartyDisplay:resize("95%",math.min((table.size(PartyGauges)),5)*40 .. "px")
     msdpPartyDisplay:organize()
     PartyGauges[index]:changeContainer(cont)
     PartyManaGauges[index]:changeContainer(cont)
     PartyGauges[index]:show()
     PartyManaGauges[index]:show()
     
     msdpPartyDisplay:show()
     
     return {gauge=PartyGauges[index],managauge=PartyManaGauges[index]}
    end
  function hidePartyGauges(index)
    local i
    
    for i=index,table.size(PartyGauges) do
      PartyGauges[i]:changeContainer(msdpPartyExtras)
      PartyManaGauges[i]:changeContainer(msdpPartyExtras)
    end
  end
  

</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_REPORTED_VARIABLES</name>
					<packageName></packageName>
					<script>function grab_REPORTED_VARIABLES()

end</script>
					<eventHandlerList>
						<string>msdp.REPORTED_VARIABLES</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_AFFECTS</name>
					<packageName></packageName>
					<script>function grab_AFFECTS()
  debugecho("MSDP:AFFECTS")
  --display(msdp.AFFECTS)
  xaos.bufflist = {}
  xaos.debufflist = {}
  for k,v in pairs(msdp.AFFECTS) do
    if not isDebuff(k) then
      table.insert(xaos.bufflist,k)
    else
      table.insert(xaos.debufflist,k)
    end
  end
  
  xaos.statusResolve = table.contains(xaos.bufflist,"resolve")
  xaos.statusBerserk = table.contains(xaos.bufflist,"berserk")
  xaos.statusWarcry = table.contains(xaos.bufflist,"warcry")
  xaos.statusCenter = table.contains(xaos.bufflist,"center")
  xaos.statusTrance = table.contains(xaos.bufflist,"trance")
  xaos.statusBless = table.contains(xaos.bufflist,"bless")
  

  showAlertLabels()
  
  
end

 



</script>
					<eventHandlerList>
						<string>msdp.AFFECTS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_ASCEND_EXP</name>
					<packageName></packageName>
					<script>function grab_ASCEND_EXP()
  debugecho("MSDP:ASCEND")
  local curasc = 100*tonumber(msdp.ASCEND_EXP)/10000
  local ascstring = string.format("%2.2f",curasc) .. "%"
  ascbar:setValue(curasc, 100, nil)
  --ascbar.back:echo(ascstring, nil, "c")
  ascbar:setText("&lt;center&gt;" .. ascstring .. "&lt;/center&gt;")
  xaos.ascendcount = msdp.ASCEND_EXP
end</script>
					<eventHandlerList>
						<string>msdp.ASCEND_EXP</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_CHARACTER_NAME</name>
					<packageName></packageName>
					<script>function grab_CHARACTER_NAME()
  debugecho("MSDP:CHARACTER_NAME")
  xaos.charactername = msdp.CHARACTER_NAME

end


</script>
					<eventHandlerList>
						<string>msdp.CHARACTER_NAME</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_CLASS</name>
					<packageName></packageName>
					<script>function grab_CLASS()
  xaos.primary = string.trim(msdp.CLASS)
  msdpUpdateClass()
end

</script>
					<eventHandlerList>
						<string>msdp.CLASS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_EQ_WEIGHT_MAX</name>
					<packageName></packageName>
					<script>function grab_EQ_WEIGHT_MAX()
  msdpUpdateEQ()
end
</script>
					<eventHandlerList>
						<string>msdp.EQ_WEIGHT_MAX</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_EQ_WEIGHT</name>
					<packageName></packageName>
					<script>function grab_EQ_WEIGHT()

  msdpUpdateEQ()

end


</script>
					<eventHandlerList>
						<string>msdp.EQ_WEIGHT</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_EQUIPMENT</name>
					<packageName></packageName>
					<script>function grab_EQUIPMENT()
  currentequipment = {}
  for wear,item in pairs(msdp.EQUIPMENT) do
  
    item = rex.match(item,"^(?:an |the |a )?(.*)")
  
    item = string.gsub(item,"'s","")
    --item = string.gsub(item,"'","")
    item = string.gsub(item," of "," ")
    item = string.gsub(item," the "," ")
    --item = rex.gsub(item,[['(.*)']],"")
    --item = rex.gsub(item,[["(.*)"]],"")
    item = string.gsub(item,"'","")
    item = string.gsub(item,"\"","")
    
    item = string.trim(item)
    
    if wear == "16" then
      wielded = item
    end
    
    if wear == "17" then
      held = item
    end
    
    if wear == "12" then
      xaos.backpack = item
    end
    if equipmentgrab then
      table.insert(xaos.currentequip,{location=getWearName(wear),index=wear,item=item})
    end
    
    table.insert(currentequipment,{location=getWearName(wear),index=wear,item=item})
  
  end
  equipmentgrab=false
end 
function getWearSlot(index)
    index = tonumber(index)
    if index == 1 then
      return "left finger"
    elseif index == 2 then
      return "right finter"
    elseif index == 3 or index == 4 then
      return "neck"
    elseif index == 5 then 
      return "chest"
    elseif index == 6 then 
      return "head"
    elseif index == 7 then
      return "legs"
    elseif index == 8 then
      return "feet"
    elseif index == 9 then
      return "hands"
    elseif index == 12 then
      return "body"
    elseif index == 13 then
      return "waist"
    elseif index == 14 then
      return "left wrist"    
    elseif index == 15 then
      return "right wrist"
    elseif index == 16 then
      return "wield"
    elseif index == 17 then
      return "hold"
    elseif index == 19 then
      return "float"
    elseif index == 24 then
      return "lower hold"
    elseif index == 25 then
      return "lower wield"
    elseif index == 27 then
      return "kinetic"
    elseif index == 28 then
      return "kinetic"
    end
end  

function getWearName(index)
    index = tonumber(index)
    if index == 1 then
      return "worn on finger"
    elseif index == 2 then
      return "worn on finger"
    elseif index == 3 or index == 4 then
      return "worn on neck"
    elseif index == 5 then 
      return "worn on torso"
    elseif index == 6 then 
      return "worn on head"
    elseif index == 7 then
      return "worn on legs"
    elseif index == 8 then
      return "worn on feet"
    elseif index == 9 then
      return "worn on hands"
    elseif index == 12 then
      return "worn about body"
    elseif index == 13 then
      return "worn on waist"
    elseif index == 14 then
      return "worn on wrist"    
    elseif index == 15 then
      return "worn on wrist"
    elseif index == 16 then
      return "held in right hand"
    elseif index == 17 then
      return "held in left hand"
    elseif index == 19 then
      return "floating nearby"
    elseif index == 24 then
      return "lower left hand"
    elseif index == 25 then
      return "lower right hand"
    elseif index == 27 then
      return "floating nearby"
    elseif index == 28 then
      return "floating nearby"
    end
end  
    
  


</script>
					<eventHandlerList>
						<string>msdp.EQUIPMENT</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_EMPOWERS</name>
					<packageName></packageName>
					<script>function grab_EMPOWERS()
  xaos.heroempowers = 
  {
    {name="mana",current=0,cost=40},
    {name="hit roll",current=0,cost=40},
    {name="resist fire",current=0,cost=40},
    {name="resist mental",current=0,cost=40},
    {name="resist acid",current=0,cost=40},
    {name="regen mana",current=0,cost=40},
    {name="invocational casting",current=0,cost=40},
    {name="resist light",current=0,cost=40},
    {name="speed",current=0,cost=40},
    {name="hitpoints",current=0,cost=40},
    {name="damage roll",current=0,cost=40},
    {name="resist cold",current=0,cost=40},
    {name="resist magic",current=0,cost=40},
    {name="resist blunt",current=0,cost=40},
    {name="conjurational casting",current=0,cost=40},
    {name="resist holy",current=0,cost=40},
    {name="resist slash",current=0,cost=40},
    {name="resist unholy",current=0,cost=40},
    {name="armor class",current=0,cost=40},
    {name="saves",current=0,cost=40},
    {name="resist lightning",current=0,cost=40},
    {name="resist poison",current=0,cost=40},
    {name="regen hp",current=0,cost=40},
    {name="enchantment casting",current=0,cost=40},
    {name="resist negative",current=0,cost=40},
    {name="resist pierce",current=0,cost=40},
    {name="warding",current=0,cost=40}
  }
  for name,v in pairs(msdp.EMPOWERS) do
    if name ~= "none" then
      local tempitem = findTableEntry(xaos.heroempowers,
        function (item) 
          return item.name == name 
        end)
      --table.insert(xaos.heroempowers,{cost=40*(1+tonumber(v)/getEmpowerCost(name)),name=name,current=tonumber(v)/getEmpowerCost(name)})
      tempitem.value.cost = 40*(1+tonumber(v)/getEmpowerCost(name))
      tempitem.value.current = tonumber(v)/getEmpowerCost(name)
    end
  end
end

function getEmpowerCost(spell)
  if spell == "armor class" then return -25 end
  if spell == "conjurational casting" then return 2 end
  if spell == "damage roll" then return 3 end
  if spell == "enchantment casting" then return 2 end
  if spell == "hit roll" then return 2 end
  if spell == "hitpoints" then return 50 end
  if spell == "invocational casting" then return 2 end
  if spell == "mana" then return 50 end
  if spell == "regen hp" then return 10 end
  if spell == "regen mana" then return 10 end
  if spell == "resist acid" then return 3 end
  if spell == "resist blunt" then return 2 end
  if spell == "resist cold" then return 3 end
  if spell == "resist disease" then return 3 end
  if spell == "resist fire" then return 3 end
  if spell == "resist holy" then return 3 end
  if spell == "resist light" then return 3 end
  if spell == "resist lightning" then return 3 end
  if spell == "resist magic" then return 2 end
  if spell == "resist mental" then return 3 end
  if spell == "resist negative" then return 3 end
  if spell == "resist pierce" then return 2 end
  if spell == "resist poison" then return 3 end
  if spell == "resist slash" then return 2 end
  if spell == "resist sound" then return 3 end
  if spell == "resist unholy" then return 3 end
  if spell == "saves" then return -2 end
  if spell == "speed" then return 3 end
  if spell == "warding" then return -25 end
 end</script>
					<eventHandlerList>
						<string>msdp.EMPOWERS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_EXPERIENCE</name>
					<packageName></packageName>
					<script>function grab_EXPERIENCE()
  
  if msdp.HEALTH == nil or msdp.HEALTH_MAX == nil then
    return
  end
  
  xPrompt.exp = math.floor(msdp.EXPERIENCE/1000)
  current_xp = xPrompt.exp
end</script>
					<eventHandlerList>
						<string>msdp.EXPERIENCE</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_FRAGS</name>
					<packageName></packageName>
					<script>function grab_FRAGS()
  xaos.currency.frags=tonumber(msdp.FRAGS)
end
</script>
					<eventHandlerList>
						<string>msdp.FRAGS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_HEALTH</name>
					<packageName></packageName>
					<script>function grab_HEALTH()
  
  if msdp.HEALTH == nil or msdp.HEALTH_MAX == nil then
    return
  end
  
  xPrompt.hp = 100*tonumber(msdp.HEALTH)/tonumber(msdp.HEALTH_MAX)
  
  current_health = tonumber(xPrompt.hp)
  hpbar:setValue(current_health, 100, nil)
  --hpbar.front:echo(string.format("%2.1f",xPrompt.hp) .. "%", nil, "c")
  hpbar:setText("&lt;center&gt;" .. string.format("%2.1f",current_health) .. "%" .. "&lt;/center&gt;")
end</script>
					<eventHandlerList>
						<string>msdp.HEALTH</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_HEALTH_MAX</name>
					<packageName></packageName>
					<script>function grab_HEALTH_MAX()
  debugecho("Health Max grabbed")
  
  if msdp.HEALTH == nil or msdp.HEALTH_MAX == nil then
    return
  end
  
  xPrompt.hp = 100*tonumber(msdp.HEALTH)/tonumber(msdp.HEALTH_MAX)
  
  current_health = tonumber(xPrompt.hp)
  hpbar:setValue(current_health, 100, nil)
  hpbar:setText("&lt;center&gt;" .. string.format("%2.1f",current_health) .. "%" .. "&lt;/center&gt;")
end</script>
					<eventHandlerList>
						<string>msdp.HEALTH_MAX</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_HERO_EXP_TNL</name>
					<packageName></packageName>
					<script>function grab_HERO_EXP_TNL()
  if msdp.HERO_EXP == nil or msdp.HERO_EXP_TNL == nil then
    return
  end
  xaos.LevelPercent = 100*msdp.HERO_EXP / msdp.HERO_EXP_TNL
end
</script>
					<eventHandlerList>
						<string>msdp.HERO_EXP_TNL</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_HERO_EXP</name>
					<packageName></packageName>
					<script>function grab_HERO_EXP()
  if msdp.HERO_EXP == nil or msdp.HERO_EXP_TNL == nil then
    return
  end
  xaos.LevelPercent = 100*msdp.HERO_EXP / msdp.HERO_EXP_TNL
end
</script>
					<eventHandlerList>
						<string>msdp.HERO_EXP</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_HERO_LEVEL</name>
					<packageName></packageName>
					<script>function grab_HERO_LEVEL()
  xaos.Level = tonumber(msdp.HERO_LEVEL)
end
</script>
					<eventHandlerList>
						<string>msdp.HERO_LEVEL</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_HERO_POINTS</name>
					<packageName></packageName>
					<script>function grab_HERO_POINTS()
  xaos.heropoints=tonumber(msdp.HERO_POINTS)  
end
</script>
					<eventHandlerList>
						<string>msdp.HERO_POINTS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="no" isFolder="no">
					<name>grab_HUNGER_MAX</name>
					<packageName></packageName>
					<script>function grab_HUNGER_MAX()

end
</script>
					<eventHandlerList>
						<string>msdp.HUNGER_MAX</string>
					</eventHandlerList>
				</Script>
				<Script isActive="no" isFolder="no">
					<name>grab_HUNGER</name>
					<packageName></packageName>
					<script>function grab_HUNGER()
  if tonumber(msdp.HUNGER) &lt; tonumber(msdp.HUNGER_MAX) then
    send("drink soup")
  end
end
</script>
					<eventHandlerList>
						<string>msdp.HUNGER</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_IN_ROOM</name>
					<packageName></packageName>
					<script>function grab_IN_ROOM()

  --display(msdp.IN_ROOM)

  showInRoomPartyBar()
  
end

function showInRoomPartyBar()



  if msdp.IN_ROOM == "" then
    hideOppGauges(1)
  else
    local inroom = {}
    for k,v in pairs(msdp.IN_ROOM) do
      inroom[k]={}
      inroom[k].name, inroom[k].hp, inroom[k].move,inroom[k].tid, inroom[k].tname = 
        rex.match(v,[[^(.*)\:(\d+)\:(\d+)\:(\d+)?\:(.*)$]])
      inroom[k].id = tonumber(k)
    end

    local function isenemy(id)
      if inroom[id].tname == xaos.charactername then
        return true
      else
        for k,v in pairs(xaos.party.members) do
          if inroom[id].tname == v.name then
            return true
          end
        end
      end
      return false
    end

    --Get Character
    local findmember = findTableEntry(inroom,
      function (item) 
        return item.name == xaos.charactername 
      end)

    --Get Target
    local targetmember = inroom[findmember.key].tid
    
    if tonumber(targetmember) ~= 0 then --No Target
      if tonumber(targetmember) ~= -1 then --Blind
        if inroom[targetmember] ~= nil then --Probably blind, cant find target
          displayEnemyGauge(targetmember,inroom[targetmember],1,findmember.value.id == tonumber(inroom[targetmember].tid))
        end
      end 
    else
      hideOppGauges(1)    
    end
    
    
    if mysettings.uicomponents.partybar ~= "off" then
      
    
      --Get Enemies
      local enemylist = {}
      local index = 2    
      for k,v in pairs(inroom) do
        if targetmember ~= k and isenemy(k) then
          displayEnemyGauge(k,v,index,findmember.value.id == tonumber(v.tid))
          index = index+1
        end
      end
    
      hideOppGauges(index)
    end
    
    
  end
  
end

function displayEnemyGauge(oppid,oppstats,index,targetme)

  --inroom[k].name, inroom[k].hp, inroom[k].move,inroom[k].tid, inroom[k].tname
  --oppstats = msdp.IN_ROOM[oppid]
  if oppstats == nil then 
    return
  end
  --local oppname,opphp,oppmana,oppmove = rex.match(oppstats,[[(\D+):(-?[0-9]{1,3}):(-?[0-9]{1,3}):(-?[0-9]+):(.*)]])
  --echo(opphp)
  local oppitems = grabOppGauge(index,targetme)

  if oppstats.name == "None" then
    oppitems.gauge:hide()
  else
    if tonumber(oppstats.hp) ~= -1 then
      oppitems.gauge:show()
      oppitems.gauge:setText("&lt;center&gt;" .. oppstats.hp .. "% " .. oppstats.name .."&lt;/center&gt;" )
      oppitems.gauge:setValue(tonumber(oppstats.hp), 100, nil)
    end
  end
end</script>
					<eventHandlerList>
						<string>msdp.IN_ROOM</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_ITEMS_MAX</name>
					<packageName></packageName>
					<script>function grab_ITEMS_MAX()
  msdpUpdateEQ()
end
</script>
					<eventHandlerList>
						<string>msdp.ITEMS_MAX</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_ITEMS</name>
					<packageName></packageName>
					<script>function grab_ITEMS()
  msdpUpdateEQ()
end
</script>
					<eventHandlerList>
						<string>msdp.ITEMS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_MANA</name>
					<packageName></packageName>
					<script>function grab_MANA()
  debugecho("grabbed")
  
  if msdp.MANA == nil or msdp.MANA_MAX == nil then
    return
  end
  
  xPrompt.mana = 100*tonumber(msdp.MANA)/tonumber(msdp.MANA_MAX)
  
  --current_mana = tonumber(xPrompt.mana)
  manabar:setValue(xPrompt.mana, 100, nil)
  manabar:setText("&lt;center&gt;" .. string.format("%2.1f",xPrompt.mana) .. "% &lt;/center&gt;" )
  

end</script>
					<eventHandlerList>
						<string>msdp.MANA</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_MANA_MAX</name>
					<packageName></packageName>
					<script>function grab_MANA_MAX()
  debugecho("grabbed")
  xPrompt.mana = 100*tonumber(msdp.MANA)/tonumber(msdp.MANA_MAX)
  
  --current_mana = tonumber(xPrompt.mana)
  manabar:setValue(xPrompt.mana, 100, nil)
  --manabar.front:echo(string.format("%2.1f",xPrompt.mana) .. "%", nil, "c")
  manabar:setText("&lt;center&gt;" .. string.format("%2.1f",xPrompt.mana) .. "% &lt;/center&gt;" )
end</script>
					<eventHandlerList>
						<string>msdp.MANA_MAX</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_MOVEMENT</name>
					<packageName></packageName>
					<script>function grab_MOVEMENT()
  debugecho("grabbed")
  
  if msdp.MOVEMENT == nil or msdp.MOVEMENT_MAX == nil then
    return
  end
  
  xPrompt.move = 100*tonumber(msdp.MOVEMENT)/tonumber(msdp.MOVEMENT_MAX)
  
  current_mvm = tonumber(xPrompt.move)
  mvmbar:setValue(current_mvm, 100, nil)
  --mvmbar.front:echo(string.format("%2.1f",xPrompt.move) .. "%", nil, "c")
  mvmbar:setText("&lt;center&gt;" .. string.format("%2.1f",current_mvm) .. "%" .. "&lt;/center&gt;")
end</script>
					<eventHandlerList>
						<string>msdp.MOVEMENT</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_MOVEMENT_MAX</name>
					<packageName></packageName>
					<script>function grab_MOVEMENT_MAX()
  debugecho("grabbed")
  
  if msdp.MOVEMENT == nil or msdp.MOVEMENT_MAX == nil then
    return
  end
  
  xPrompt.move = 100*tonumber(msdp.MOVEMENT)/tonumber(msdp.MOVEMENT_MAX)
  
  current_mvm = tonumber(xPrompt.move)
  mvmbar:setValue(current_mvm, 100, nil)
  --mvmbar.front:echo(string.format("%2.1f",xPrompt.move) .. "%", nil, "c")
  mvmbar:setText("&lt;center&gt;" .. string.format("%2.1f",current_mvm) .. "%" .. "&lt;/center&gt;")
end</script>
					<eventHandlerList>
						<string>msdp.MOVEMENT_MAX</string>
					</eventHandlerList>
				</Script>
				<Script isActive="no" isFolder="no">
					<name>grab_OPPONENTS</name>
					<packageName></packageName>
					<script>function grab_OPPONENTS()

  if msdp.OPPONENTS == "" then
    hideOppGauges(1)
  else
  
  

    local index = 2
    for oppfullname,oppstats in pairs(msdp.OPPONENTS) do
      local opphp,oppmana,oppmove = rex.match(oppstats,[[([0-9]{1,3}|-{1,3}):([0-9]{1,3}|-{1,3}):([0-9]{1,3}|-{1,3})]])
      local oppindex,oppname = rex.match(oppfullname,[[([0-9]+):(.*)]])
      --echo(opphp)
      local oppitems = grabOppGauge(index)
    
      if oppname == "None" then
        oppitems.gauge:hide()
      else
        if opphp ~= "---" then
          --oppitems.label:echo(oppname) 
          oppitems.gauge:show()
          oppitems.gauge:setText(opphp .. "% " .. oppname)
          oppitems.gauge:setValue(tonumber(opphp), 100, nil)
          oppitems.gauge.back:echo("", nil, "c")
        end
      end
      index = index + 1
    end
    hideOppGauges(index)
  end
end</script>
					<eventHandlerList>
						<string>msdp.OPPONENTS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="no" isFolder="no">
					<name>grab_OPP_TARGET</name>
					<packageName></packageName>
					<script>function grab_OPP_TARGET()
  local oppfullname, oppstats = next(msdp.OPP_TARGET)
  local opphp,oppmana,oppmove = rex.match(oppstats,[[([0-9]{1,3}|-{1,3}):([0-9]{1,3}|-{1,3}):([0-9]{1,3}|-{1,3})]])
  local oppindex,oppname = rex.match(oppfullname,[[([0-9]+):(.*)]])
  --echo(opphp)
  local oppitems = grabOppGauge(1)

  if oppname == "None" then
    --oppitems.label:echo("None")
    --oppitems.gauge:setValue(0, 100, nil)
    oppitems.gauge:hide()
  else
    if opphp ~= "---" then
      --oppitems.label:echo(oppname) 
      oppitems.gauge:show()
      oppitems.gauge:setText("&lt;center&gt;" .. opphp .. "% " .. oppname .."&lt;/center&gt;" )
      oppitems.gauge:setValue(tonumber(opphp), 100, nil)
      --oppitems.gauge.back:echo("", nil, "c")
    end
  end
  hideOppGauges(index)
end</script>
					<eventHandlerList>
						<string>msdp.OPP_TARGET</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_PARTY_MEM</name>
					<packageName></packageName>
					<script>function grab_PARTY_MEM()
  local index = 1
  local curpartystatus = {}
  curpartystatus.members = {}
  for partyid,partystats in pairs(msdp.PARTY_MEM) do
    local partyname,partyhp,partymana,partymove = rex.match(partystats,[[(\w+):(-?[0-9]{1,3}):(-?[0-9]{1,3}):(-?[0-9]{1,3}):(-?[0-9]+):(.*)]])


    if mysettings.uicomponents.partybar ~= "off" then
      local partyitems = grabPartyGauge(index)
    
      if partyname == "None" then 
        partyitems.gauge:hide()
        partyitems.managauge:hide()
      else
        partyitems.gauge:show()
        partyitems.managauge:show()
        local missingcount = 0
        if partyhp == -1 then
          local findmember = table.n_filter(xaos.party.members,function (item) return item.name == partyname end)
          if table.size(findmember) ~= 0 then
            missingcount = tonumber(findmember[1].missingcount) +1
          end
        end
        if partyhp ~= -1 then 
          partyitems.gauge:setValue(tonumber(partyhp), 100, nil)
          partyitems.gauge:setText("&lt;center&gt;" .. partyhp .. "% " .. partyname .. "&lt;/center&gt;")
        end
        if partymana ~= -1 then 
          partyitems.managauge:setValue(tonumber(partymana), 100, nil)
          partyitems.managauge:setText("&lt;center&gt;" .. partymana .. "%&lt;/center&gt;")
        end

      end
    end

    if partyname ~= "None" then
    table.insert(curpartystatus.members,
        {
          name = partyname,
          hp = tonumber(partyhp),
          mana = tonumber(partymana),
          move = tonumber(partymove),
          missingcount = missingcount,
          charmie = rex.match(partyname,[[^([aA] |[tT]he |[aA]n )]]) ~= nil
        })
      end
      index = index + 1
  end
  xaos.party.members = curpartystatus.members
  
  if mysettings.uicomponents.partybox ~= "off" then
    
    fillPartyBox()
    
  end
    
  hidePartyGauges(index)
end</script>
					<eventHandlerList>
						<string>msdp.PARTY_MEM</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_PARTY_LEAD</name>
					<packageName></packageName>
					<script>function grab_PARTY_LEAD()
  if msdp.PARTY_LEAD == "No Party" or msdp.PARTY_LEAD == "Your Party" then
    xaos.party.leader = "Your"
  else
    xaos.party.leader = rex.match(msdp.PARTY_LEAD,[[(.*)'s Party]])
  end
end</script>
					<eventHandlerList>
						<string>msdp.PARTY_LEAD</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_RACE</name>
					<packageName></packageName>
					<script>function grab_RACE()
  debugecho("MSDP:RACE")
  xaos.characterrace = msdp.RACE

end


</script>
					<eventHandlerList>
						<string>msdp.RACE</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_SECOND_CLASS</name>
					<packageName></packageName>
					<script>function grab_SECOND_CLASS()
  xaos.reborn = string.trim(msdp.SECOND_CLASS)
  msdpUpdateClass()
end
</script>
					<eventHandlerList>
						<string>msdp.SECOND_CLASS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_SOULS</name>
					<packageName></packageName>
					<script>function grab_SOULS()
  xaos.currency.souls=tonumber(msdp.SOULS)
end
</script>
					<eventHandlerList>
						<string>msdp.SOULS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_SPELLS</name>
					<packageName></packageName>
					<script>function grab_SPELLS()
  xaos.spells = {}
  for k,v in pairs(msdp.SPELLS) do
    table.insert(xaos.spells,v)
  end
end
</script>
					<eventHandlerList>
						<string>msdp.SPELLS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_SKILLS</name>
					<packageName></packageName>
					<script>function grab_SKILLS()
  xaos.skills = {}
  for k,v in pairs(msdp.SKILLS) do
    table.insert(xaos.skills,v)
  end
end
</script>
					<eventHandlerList>
						<string>msdp.SKILLS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_STYLE</name>
					<packageName></packageName>
					<script>function grab_STYLE()
  xaos.fightingstyle = string.trim(msdp.STYLE)
  xPrompt.style = string.trim(msdp.STYLE)
end
</script>
					<eventHandlerList>
						<string>msdp.STYLE</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_TACTICS</name>
					<packageName></packageName>
					<script>function grab_TACTICS()
  xaos.tactics = string.trim(msdp.TACTICS)
end
</script>
					<eventHandlerList>
						<string>msdp.TACTICS</string>
					</eventHandlerList>
				</Script>
				<Script isActive="no" isFolder="no">
					<name>grab_THIRST_MAX</name>
					<packageName></packageName>
					<script>function grab_THIRST_MAX()

end
</script>
					<eventHandlerList>
						<string>msdp.THIRST_MAX</string>
					</eventHandlerList>
				</Script>
				<Script isActive="no" isFolder="no">
					<name>grab_THIRST</name>
					<packageName></packageName>
					<script>function grab_THIRST()
  if tonumber(msdp.THIRST) &lt; tonumber(msdp.THIRST_MAX) then
    send("drink soup")
  end
end
</script>
					<eventHandlerList>
						<string>msdp.THIRST</string>
					</eventHandlerList>
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>grab_TRAITS</name>
					<packageName></packageName>
					<script>function grab_TRAITS()
  xaos.traits = string.trim(msdp.TRAITS)
end
</script>
					<eventHandlerList>
						<string>msdp.TRAITS</string>
					</eventHandlerList>
				</Script>
			</ScriptGroup>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>Xaos</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>-1</keyCode>
			<keyModifier>-1</keyModifier>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>xaos-ui-0120</name>
				<packageName>xaos-ui-0120</packageName>
				<script></script>
				<command></command>
				<keyCode>0</keyCode>
				<keyModifier>0</keyModifier>
				<KeyGroup isActive="yes" isFolder="yes">
					<name>xaos-ui-0120</name>
					<packageName>xaos-ui-0120</packageName>
					<script></script>
					<command></command>
					<keyCode>0</keyCode>
					<keyModifier>0</keyModifier>
					<Key isActive="yes" isFolder="no">
						<name>east</name>
						<packageName></packageName>
						<script></script>
						<command>east</command>
						<keyCode>54</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>west</name>
						<packageName></packageName>
						<script></script>
						<command>west</command>
						<keyCode>52</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>north</name>
						<packageName></packageName>
						<script></script>
						<command>north</command>
						<keyCode>56</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>south</name>
						<packageName></packageName>
						<script></script>
						<command>south</command>
						<keyCode>50</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>up</name>
						<packageName></packageName>
						<script></script>
						<command>up</command>
						<keyCode>45</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>down</name>
						<packageName></packageName>
						<script></script>
						<command>down</command>
						<keyCode>43</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>look</name>
						<packageName></packageName>
						<script></script>
						<command>look</command>
						<keyCode>53</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>DSoup</name>
						<packageName></packageName>
						<script></script>
						<command>drink soup</command>
						<keyCode>55</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
					<Key isActive="yes" isFolder="no">
						<name>scan</name>
						<packageName></packageName>
						<script></script>
						<command>scan</command>
						<keyCode>57</keyCode>
						<keyModifier>536870912</keyModifier>
					</Key>
				</KeyGroup>
			</KeyGroup>
			<Key isActive="yes" isFolder="no">
				<name>F1 - Help</name>
				<packageName></packageName>
				<script>expandAlias("xhelp all")</script>
				<command></command>
				<keyCode>16777264</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F2 - Tab</name>
				<packageName></packageName>
				<script>for k,v in pairs(menu.tabs) do
  menu[v]:hide()
end
menu[menu.tabs[1]]:show()</script>
				<command></command>
				<keyCode>16777265</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F3 - Tab</name>
				<packageName></packageName>
				<script>for k,v in pairs(menu.tabs) do
  menu[v]:hide()
end
menu[menu.tabs[2]]:show()</script>
				<command></command>
				<keyCode>16777266</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F4 - Tab</name>
				<packageName></packageName>
				<script>for k,v in pairs(menu.tabs) do
  menu[v]:hide()
end
menu[menu.tabs[3]]:show()</script>
				<command></command>
				<keyCode>16777267</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F5 - Tab</name>
				<packageName></packageName>
				<script>for k,v in pairs(menu.tabs) do
  menu[v]:hide()
end
menu[menu.tabs[4]]:show()</script>
				<command></command>
				<keyCode>16777268</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F6 - Tab</name>
				<packageName></packageName>
				<script>for k,v in pairs(menu.tabs) do
  menu[v]:hide()
end
menu[menu.tabs[5]]:show()</script>
				<command></command>
				<keyCode>16777269</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F12 - Toggle Scripting</name>
				<packageName></packageName>
				<script>huntTarget = huntTarget or "Helpful Bob"
if auto_hunt then
  auto_hunt = false
  xuicom("You will no longer attempt to automatically hunt targets")
else
  send("auto ")
  auto_hunt = true
  xuicom(
    "You will attempt to automatically hunt something. Current settings indicate you're going to hunt " ..
    huntTarget
  )
	xuicom("Currently, tracking "..wielded.." as your wielded weapon.")
  if statusFollowing then
    --This bit handles the "What do I do if I'm following someone?" question
    obsessionMode = true
    huntTarget = followTarget
    location = nil
    xuicom("You are following " .. followTarget .. " and this script will attempt to hunt them.")
    xuicom("Obsession mode is on by default. Use &lt;white&gt;obsessionoff&lt;light_blue&gt; to turn it off.\n")
    cechoLink(
      "[ XUI ] &lt;light_blue&gt;Click here for more info on obsession mode.\n",
      [[xuicom("Obsession mode inputs hunt aggressively in an attempt to keep up with the party leader.\n")]],
      "obsession mode info",
      true
    )
    if huntTarget then
    else
      variableCheck(huntTarget, "hunt location")
      auto_hunt = false
    end
  end
end
combat = false
hunting = false</script>
				<command></command>
				<keyCode>16777275</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
		</KeyGroup>
	</KeyPackage>
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
